{"version":3,"sources":["components/common/navigation-links.js","components/common/my-toolbar-with-navigation.js","helpers.js","components/dashboard/widgets/expense-summary.js","components/dashboard/widgets/income-summary.js","components/dashboard/dashboard.js","components/common/filter.js","components/expense/expense.js","components/income/income.js","components/common/my-toolbar.js","components/expense/new-expense.js","components/expense/edit-expense.js","components/budget/budget.js","components/budget/new-budget.js","components/common/main.js","App.js","serviceWorker.js","index.js","database.js"],"names":["NavigationLinks","react_default","a","createElement","style","width","List_default","Link","to","textDecoration","ListItem_default","ListItemIcon_default","Home_default","ListItemText_default","primary","MoneyOff_default","AttachMoney_default","ListAlt_default","Component","styles","root","flexGrow","paddingTop","grow","menuButton","marginLeft","marginRight","MyToolbarWithNavigation","state","isOpen","toggleDrawer","_this","setState","SwipeableDrawer_default","open","this","onClose","onOpen","disableBackdropTransition","tabIndex","role","onClick","onKeyDown","navigation_links","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Typography_default","variant","props","title","buttons","map","item","index","key","formatMoney","n","c","d","t","isNaN","Math","abs","undefined","s","i","String","parseInt","Number","toFixed","j","length","substr","replace","slice","selectAll","table","done","indexedDB","onsuccess","event","target","result","transaction","objectStore","getAll","budgetRepeatEnum","none","daily","weekly","monthly","custom","filterTypes","ExpenseSummary","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getExpensesForCategory","items","categoryId","data","filter","m","subTotal","reduce","currValue","amount","filterType","from","moment","hours","minutes","seconds","filterDate","total","loadSummary","format","objectSpread","_this2","range","IDBKeyRange","bound","toDate","expenses","categories","selectall","openCursor","selectAllCategory","cursor","push","value","continue","oncomplete","categoryItemProperties","category","generateFilterDate","add","subtract","classes","Card_default","className","card","CardHeader_default","action","Fragment","prev","bind","ArrowBackIos_default","next","ArrowForwardIos_default","subheader","Divider_default","CardContent_default","cardContent","name","float","expenseItem","light","nothingToDoHere","CardActions_default","cardFooter","component","withStyles","minWidth","height","overflowY","textAlign","marginBottom","fabPrimary","bottom","right","zIndex","fabExpense","fabIncome","backdrop","Dashboard","toggleMenu","showMenu","newExpense","history","my_toolbar_with_navigation","Fab_default","size","Backdrop_default","Close_default","Add_default","padding","expense_summary","Filter","changeViewType","e","viewType","changeStateValue","parentProperty","childProperty","defineProperty","handleApply","startDate","Date","endDate","errors","yearly","hasError","date","week","weekParts","split","weekNumber","year","startOf","endOf","month","monthParts","applyFilter","DialogTitle_default","DialogContent_default","FormControl_default","margin","InputLabel_default","Select_default","onChange","MenuItem_default","TextField_default","error","ref","label","type","DialogActions_default","Button_default","close","Expense","toggleFilter","showFilter","loadExpenses","localStorage","setItem","JSON","stringify","currentFilter","store","shits","renderShits","navigate","getItem","parse","index_es","FilterList_default","appBar","filterLabel","marginTop","minHeight","expenseId","button","secondary","common_filter","Income","MyToolbar","showBackButton","onBack","ArrowBack_default","NewExpense","loadAccounts","selectAccounts","accounts","loadCategories","selectcategory","accountId","description","account","property","parseFloat","put","_this3","my_toolbar","goBack","handleSave","Save_default","handleChangeProperty","onBlur","formatCurrency","multiline","rows","EditExpense","loadExpense","id","select","get","handleDelete","delete","toggleDeleteModal","showDelete","match","params","self","Delete_default","autoFocus","Budget","componentDidMount","renderItems","fab","myClass","font","menuProps","PaperProps","maxHeight","NewBudget","unshift","selectedAccounts","isActive","repeat","selectedCategories","console","log","all","find","multiple","input","renderValue","selected","join","MenuProps","checked","f","indexOf","Main","Switch","Route","path","App","main","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","matchMedia","matches","createHashHistory","createBrowserHistory","request","onupgradeneeded","db","onerror","objectStoreNames","contains","expenseTable","createObjectStore","keyPath","autoIncrement","createIndex","unique","budgetTable","categoryTransaction","selectCategories","addCategoryStore","initialize","ReactDOM","render","Router","basename","process","src_App","document","getElementById","URL","href","origin","addEventListener","concat","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.06d63df3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AttachMoneyICon from \"@material-ui/icons/AttachMoney\";\r\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\";\r\nimport ListAlt from \"@material-ui/icons/ListAlt\";\r\n\r\nclass NavigationLinks extends Component {\r\n    render() {\r\n      return (\r\n        <div style={{width: '250px'}}>\r\n          <List>\r\n            <Link to='/' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <HomeIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to='/expense' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <MoneyOffIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Expense\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to='/income' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <AttachMoneyICon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Income\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to='/budget' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <ListAlt />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Budget\" />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default NavigationLinks;","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NavigationLinks from \"./navigation-links\";\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 56\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass MyToolbarWithNavigation extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  toggleDrawer = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div style={styles.root}>\r\n        <SwipeableDrawer\r\n          open={this.state.isOpen}\r\n          onClose={this.toggleDrawer}\r\n          onOpen={this.toggleDrawer}\r\n          disableBackdropTransition={true}>\r\n              <div\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                onClick={this.toggleDrawer}\r\n                onKeyDown={this.toggleDrawer}>\r\n                  <NavigationLinks />\r\n              </div>\r\n        </SwipeableDrawer>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton onClick={this.toggleDrawer} style={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\r\n                {this.props.title}\r\n            </Typography>\r\n            {this.props.buttons.map((item, index) => <span key={index}>{item}</span>)}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyToolbarWithNavigation;","\r\nexport const formatMoney = (n, c, d, t) => {\r\n    var c = isNaN(c = Math.abs(c)) ? 2 : c,\r\n        d = d === undefined ? \".\" : d,\r\n        t = t === undefined ? \",\" : t,\r\n        s = n < 0 ? \"-\" : \"\",\r\n        i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),\r\n        j = (j = i.length) > 3 ? j % 3 : 0;\r\n\r\n    return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\");\r\n};\r\n\r\nexport const selectAll = (table, done) => {\r\n  let db = indexedDB.open(\"Moneytoring\");\r\n  db.onsuccess = (event) => {\r\n    let tx = event.target.result.transaction([table], \"readonly\");\r\n    let store = tx.objectStore(table);\r\n    let allItems = store.getAll();\r\n    allItems.onsuccess = (event) => {\r\n      done(event.target.result);\r\n    }\r\n  }\r\n}\r\n\r\nexport const budgetRepeatEnum = {\r\n  none: 0,\r\n  daily: 1,\r\n  weekly: 2,\r\n  monthly: 3,\r\n  custom: 4\r\n}","import React, {Component} from 'react';\r\nimport moment from \"moment\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\nimport { formatMoney } from \"../../../helpers\";\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  cardContent: {\r\n    height: 150,\r\n    overflowY: 'auto'\r\n  },\r\n  cardFooter: {\r\n    float: 'right'\r\n  },\r\n  expenseItem:{\r\n    marginLeft: 20\r\n  },\r\n  nothingToDoHere: {\r\n    paddingTop: 35,\r\n    textAlign: 'center'\r\n  }\r\n};\r\n\r\nconst filterTypes = {daily: 1, weekly: 2, monthly: 3}\r\n\r\nclass ExpenseSummary extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      filterType: filterTypes.daily,\r\n      from: moment().hours(0).minutes(0).seconds(0),\r\n      to: moment().hours(23).minutes(59).seconds(59),\r\n      filterDate: '',\r\n      data: [],\r\n      total: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.loadSummary();\r\n  }\r\n\r\n  generateFilterDate () {\r\n    let filterDate = this.state.from.format(\"MMM DD [(]ddd[)]\");\r\n    if (this.state.filterType !== filterTypes.daily) {\r\n      filterDate = this.state.from.format(\"MMM DD\") + ' - ' + this.state.to.format(\"MMM DD\");\r\n    }\r\n    this.setState({...this.state, filterDate});\r\n  }\r\n  \r\n  loadSummary () {\r\n    var range = IDBKeyRange.bound(this.state.from.toDate(), this.state.to.toDate());\r\n    let expenses = [];\r\n    let categories = [];\r\n    let total = 0;\r\n    let data = [];\r\n\r\n    const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n    requestDatabase.onsuccess = (event) => {\r\n        var db = event.target.result;\r\n        var transaction = db.transaction([\"expense\", \"category\"], \"readonly\");\r\n        var store = transaction.objectStore(\"expense\");\r\n        var selectall = store.index('date').openCursor(range, 'prev');\r\n        var selectAllCategory = transaction.objectStore(\"category\").getAll();\r\n        selectall.onsuccess = (event) => {\r\n            var cursor = event.target.result;\r\n            if(cursor) {\r\n                expenses.push(cursor.value);\r\n                total += cursor.value.amount;\r\n                cursor.continue();\r\n            }\r\n        }\r\n\r\n        selectAllCategory.onsuccess = (event) => {\r\n          categories = event.target.result;\r\n        }\r\n\r\n        transaction.oncomplete = () => {\r\n          for(var i=0; i<categories.length; i++){\r\n            let categoryItemProperties = this.getExpensesForCategory(expenses, categories[i].categoryId);\r\n            data.push({\r\n              category: categories[i],\r\n              subTotal: categoryItemProperties.subTotal,\r\n              items: categoryItemProperties.data\r\n            });\r\n          }\r\n          this.setState({...this.state, data, total});\r\n          this.generateFilterDate();\r\n        }\r\n    }\r\n  }\r\n\r\n  getExpensesForCategory = (items, categoryId) => {\r\n    let data = items.filter(m => { return m.categoryId === categoryId });\r\n    return { \r\n      data,\r\n      subTotal: data.reduce((currValue, i) => { return i.amount + currValue; }, 0)\r\n    };\r\n  }\r\n\r\n  changeFilterType () {\r\n\r\n  }\r\n\r\n  next () {\r\n    this.setState({...this.state, from: this.state.from.add(1, \"days\"), to: this.state.to.add(1, \"days\")});\r\n    this.loadSummary();\r\n  }\r\n\r\n  prev () {\r\n    this.setState({...this.state, from: this.state.from.subtract(1, \"days\"), to: this.state.to.subtract(1, \"days\")});\r\n    this.loadSummary();\r\n  }\r\n\r\n  render() {\r\n      const { classes } = this.props;\r\n      return (\r\n        <Card className={classes.card}>\r\n          <CardHeader\r\n            action={\r\n            <>\r\n              <IconButton onClick={this.prev.bind(this)}>\r\n                <ArrowBackIos />\r\n              </IconButton>\r\n              <IconButton onClick={this.next.bind(this)}>\r\n                <ArrowForwardIos />\r\n              </IconButton>\r\n            </>}\r\n            title=\"Expense\"\r\n            subheader={this.state.filterDate}\r\n          />\r\n          <Divider />\r\n          <CardContent className={classes.cardContent}>\r\n            {this.state.data.map((data, index) =>\r\n                data.items.length > 0 ?\r\n                    <div key={index}>\r\n                        <Typography variant=\"overline\">\r\n                            {data.category.name}\r\n                            <span style={{float: 'right'}}>{formatMoney(data.subTotal)}</span>\r\n                        </Typography>\r\n                        <div className={classes.expenseItem}>\r\n                          {data.items.map((item, i)=> \r\n                              <Typography key={i} variant=\"caption\">{item.title}<span style={{float: 'right'}}>{formatMoney(item.amount)}</span></Typography>\r\n                          )}\r\n                        </div>\r\n                        <Divider light />\r\n                    </div>\r\n                : null\r\n            )}\r\n            {this.state.total === 0 ? <Typography variant=\"body1\" className={classes.nothingToDoHere}>to do here: nothing</Typography> : null}\r\n          </CardContent>\r\n          <Divider />\r\n          <CardActions className={classes.cardFooter}>\r\n            <Typography component=\"p\">{formatMoney(this.state.total)}</Typography>\r\n          </CardActions>\r\n        </Card>\r\n      );\r\n  }\r\n}\r\n\r\nExpenseSummary.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ExpenseSummary);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275,\r\n    marginBottom: '10px'\r\n  },\r\n  cardFooter: {\r\n    float: 'right'\r\n  }\r\n};\r\n\r\nfunction IncomeSummary(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        action={[\r\n          <IconButton color=\"inherit\" aria-label=\"Menu\">\r\n            <ArrowBackIos />\r\n          </IconButton>,\r\n          <IconButton>\r\n            <ArrowForwardIos />\r\n          </IconButton>\r\n        ]}\r\n        title=\"Income\"\r\n        subheader=\"January 2019\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        \r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.cardFooter}>\r\n        <Typography component=\"p\">0.00</Typography>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nIncomeSummary.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IncomeSummary);","import React, { Component } from 'react';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AttachMoneyICon from \"@material-ui/icons/AttachMoney\";\r\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport ExpenseSummary from \"./widgets/expense-summary\";\r\nimport IncomeSummary from \"./widgets/income-summary\";\r\n\r\n\r\nconst styles = {\r\n  fabPrimary: {\r\n    position: 'absolute', bottom: '15px', right: '15px', zIndex: 2\r\n  },\r\n  fabExpense: {\r\n    position: 'absolute', bottom: '150px',  right: '23px', zIndex: 2\r\n  },\r\n  fabIncome: {\r\n    position: 'absolute',bottom: '90px', right: '23px', zIndex: 2\r\n  },\r\n  backdrop: {\r\n    zIndex: 1\r\n  }\r\n}\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {showMenu: false}\r\n    }\r\n\r\n    toggleMenu = () => {\r\n      this.setState({...this.state, showMenu: !this.state.showMenu});\r\n    }\r\n\r\n    newExpense = () => {\r\n        this.props.history.push('/expense/new');\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <MyToolbarWithNavigation title=\"moneytoring\" buttons={[]} />\r\n            {this.state.showMenu ? \r\n              <>\r\n                <Fab onClick={this.newExpense} className=\"animated jello\" color=\"secondary\" size=\"small\" aria-label=\"expense\" style={styles.fabExpense}>\r\n                  <MoneyOffIcon />\r\n                </Fab>\r\n                <Fab className=\"animated jello\" color=\"default\" size=\"small\" aria-label=\"income\" style={styles.fabIncome}>\r\n                  <AttachMoneyICon />\r\n                </Fab>\r\n                <Backdrop onClick={this.toggleMenu} open={true} style={styles.backdrop} />\r\n              </>\r\n            : null }\r\n            <Fab onClick={this.toggleMenu} color=\"primary\" aria-label=\"Add\" style={styles.fabPrimary}>\r\n              {this.state.showMenu ? <CloseIcon /> : <AddIcon />}\r\n            </Fab>\r\n            <div style={{padding: '10px'}}>\r\n                <ExpenseSummary />\r\n            </div>\r\n            <div style={{padding: '10px'}}>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Dashboard;\r\n  ","import React, { Component } from 'react';\r\nimport moment from \"moment\";\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            viewType: 'daily',\r\n            daily: {\r\n                date: moment().format('YYYY-MM-DD')\r\n            },\r\n            weekly: {\r\n                week: ''\r\n            },\r\n            monthly: {\r\n                month: ''\r\n            },\r\n            yearly: {\r\n                year: ''\r\n            },\r\n            custom: {\r\n                from: '',\r\n                to:''\r\n            },\r\n            errors: {\r\n                daily: false,\r\n                weekly: false,\r\n                monthly: false,\r\n                yearly: false,\r\n                from: false,\r\n                to: false\r\n            }\r\n        }\r\n    }\r\n\r\n    changeViewType = (e) => {\r\n        this.setState({...this.state, viewType: e.target.value });\r\n    }\r\n\r\n    changeStateValue = (parentProperty, childProperty, e) => {\r\n        this.setState({...this.state, [parentProperty]: { ...this.state[parentProperty], [childProperty]: e.target.value }});\r\n    }\r\n\r\n    handleApply = () => {\r\n        let startDate = new Date();\r\n        let endDate = new Date();\r\n        let errors = {\r\n            daily: false,\r\n            weekly: false,\r\n            monthly: false,\r\n            yearly: false,\r\n            from: false,\r\n            to: false\r\n        };\r\n        let hasError = false;\r\n        switch(this.state.viewType) {\r\n            case 'daily':\r\n                if(this.state.daily.date === '') {\r\n                    hasError = true;\r\n                    errors.daily = true;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.daily.date).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.daily.date).hours(23).minutes(59).seconds(59);\r\n                }\r\n                break;\r\n            case 'weekly':\r\n                if (this.state.weekly.week === '') {\r\n                    hasError = true;\r\n                    errors.weekly = true;\r\n                }\r\n                else {\r\n                    let weekParts = this.state.weekly.week.split('-');\r\n                    let weekNumber = Number(weekParts[1].replace('W', ''));\r\n                    startDate = moment().year(Number(weekParts[0])).week(weekNumber).startOf('week');\r\n                    endDate = moment().year(Number(weekParts[0])).week(weekNumber).endOf('week');\r\n                }\r\n                break;\r\n            case 'monthly':\r\n                if (this.state.monthly.month === '') {\r\n                    hasError = true;\r\n                    errors.monthly = true;\r\n                }\r\n                else {\r\n                    let monthParts = this.state.monthly.month.split('-');\r\n                    startDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).startOf('month');\r\n                    endDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).endOf('month');\r\n                }\r\n                break;\r\n            case 'yearly':\r\n                if (this.state.yearly.year === '' || isNaN(this.state.yearly.year)) {\r\n                    hasError = true;\r\n                    errors.yearly = true;\r\n                }\r\n                else {\r\n                    let year = Number(this.state.yearly.year);\r\n                    startDate = moment().year(year).startOf('year');\r\n                    endDate = moment().year(year).endOf('year');\r\n                }\r\n                break;\r\n           default: //custom range\r\n                if(this.state.custom.from === ''){\r\n                    hasError = true;\r\n                    errors.from = true;\r\n                }\r\n                else if(this.state.custom.to === '') {\r\n                    hasError = true;\r\n                    errors.to = true;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.custom.from).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.custom.to).hours(23).minutes(59).seconds(59);\r\n                }\r\n        }\r\n        if(hasError) {\r\n            this.setState({...this.state, errors });\r\n        }\r\n        else {\r\n            this.props.applyFilter(startDate, endDate, this.state.viewType);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <DialogTitle>Filter expense</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>View</InputLabel>\r\n                        <Select\r\n                            value={this.state.viewType} onChange={this.changeViewType.bind(this)}>\r\n                                <MenuItem value=\"daily\"><em>Daily</em></MenuItem>\r\n                                <MenuItem value=\"weekly\"><em>Weekly</em></MenuItem>\r\n                                <MenuItem value=\"monthly\"><em>Monthly</em></MenuItem>\r\n                                <MenuItem value=\"yearly\"><em>Yearly</em></MenuItem>\r\n                                <MenuItem value=\"custom\"><em>Custom</em></MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    {this.state.viewType === 'daily' ?\r\n                        <TextField\r\n                            error={this.state.errors.daily}\r\n                            ref=\"title\"\r\n                            label=\"Date\"\r\n                            value={this.state.daily.date} \r\n                            onChange={this.changeStateValue.bind(this, 'daily', 'date')}\r\n                            margin=\"normal\"\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'weekly' ?\r\n                        <TextField\r\n                            error={this.state.errors.weekly}\r\n                            ref=\"title\"\r\n                            label=\"Week\"\r\n                            value={this.state.weekly.week} \r\n                            onChange={this.changeStateValue.bind(this, 'weekly', 'week')}\r\n                            margin=\"normal\"\r\n                            type=\"week\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'monthly' ?\r\n                        <TextField\r\n                            error={this.state.errors.monthly}\r\n                            ref=\"title\"\r\n                            label=\"Month\"\r\n                            value={this.state.monthly.month} \r\n                            onChange={this.changeStateValue.bind(this, 'monthly', 'month')}\r\n                            margin=\"normal\"\r\n                            type=\"month\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'yearly' ?\r\n                        <TextField\r\n                            error={this.state.errors.yearly}\r\n                            ref=\"title\"\r\n                            label=\"Year\"\r\n                            value={this.state.yearly.year} \r\n                            onChange={this.changeStateValue.bind(this, 'yearly', 'year')}\r\n                            margin=\"normal\"\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'custom' ?\r\n                        <>\r\n                            <TextField\r\n                                error={this.state.errors.from}\r\n                                ref=\"title\"\r\n                                label=\"From\"\r\n                                value={this.state.custom.from} \r\n                                onChange={this.changeStateValue.bind(this, 'custom', 'from')}\r\n                                margin=\"normal\"\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                            />\r\n                            <TextField\r\n                                error={this.state.errors.to}\r\n                                ref=\"title\"\r\n                                label=\"To\"\r\n                                value={this.state.custom.to} \r\n                                onChange={this.changeStateValue.bind(this, 'custom', 'to')}\r\n                                margin=\"normal\"\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </>\r\n                    : null }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.close} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={this.handleApply.bind(this)} color=\"primary\">Apply</Button>\r\n                </DialogActions>\r\n            </>\r\n        );\r\n    }\r\n}\r\n  \r\n  export default Filter;\r\n  ","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport './expense.css';\r\nimport Filter from \"../common/filter\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport {\r\n  IconButton,\r\n  Dialog,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Fab,\r\n  AppBar,\r\n  Toolbar,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = {\r\n  appBar: {\r\n      position: 'fixed',\r\n      marginTop: 56,\r\n      zIndex: 1\r\n  },\r\n  filterLabel:{\r\n    flexGrow: 1,\r\n    textAlign: 'center'\r\n  }\r\n}\r\n\r\nclass Expense extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let filter = localStorage.getItem('expensefilter');\r\n    if (filter !== null) {\r\n      filter = JSON.parse(filter);\r\n      filter.from = moment(filter.from);\r\n      filter.to = moment(filter.to);\r\n    }\r\n    else {\r\n      filter = {\r\n        viewType: 'daily',\r\n        from: moment().hours(0).minutes(0).seconds(0),\r\n        to: moment().hours(23).minutes(59).seconds(59)\r\n      }\r\n    }\r\n    this.state = {\r\n      currentFilter: '',\r\n      total: 0,\r\n      expenses: [],\r\n      showFilter: false,\r\n      filter\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadExpenses(this.state.filter.from, this.state.filter.to, this.state.filter.viewType);\r\n  }\r\n\r\n  toggleFilter = () => {\r\n    this.setState({ ...this.state, showFilter: !this.state.showFilter });\r\n  }\r\n\r\n  loadExpenses = (from, to, viewType) => {\r\n    let filter = { from, to, viewType};\r\n    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n    if (from.month() === to.month() && from.date() === to.date() && from.year() === to.year()) {\r\n      this.setState({ ...this.state, expenses: [], currentFilter: from.format('MMM DD'), total: 0, filter });\r\n    }\r\n    else {\r\n      this.setState({ ...this.state, expenses: [], currentFilter: from.format('MMM DD') + ' - ' + to.format('MMM DD'), total: 0, filter });\r\n    }\r\n\r\n    var range = null;\r\n    if (from && to) {\r\n      range = IDBKeyRange.bound(from.toDate(), to.toDate());\r\n    }\r\n    const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n    requestDatabase.onsuccess = (event) => {\r\n      var db = event.target.result;\r\n      var transaction = db.transaction([\"expense\"], \"readonly\");\r\n      var store = transaction.objectStore(\"expense\");\r\n      var selectall = range === null ? store.index('date').openCursor(null, 'prev') : store.index('date').openCursor(range, 'prev');\r\n      this.setState({ ...this.state, showFilter: false });\r\n      let shits = [];\r\n      let total = 0;\r\n      selectall.onsuccess = (event) => {\r\n        var cursor = event.target.result;\r\n        if (cursor) {\r\n          shits.push(cursor.value);\r\n          total += cursor.value.amount;\r\n          cursor.continue();\r\n        }\r\n      }\r\n      transaction.oncomplete = () => {\r\n        this.renderShits(shits, total);\r\n      }\r\n    }\r\n  }\r\n\r\n  renderShits = (shits, total) => {\r\n    this.setState({ ...this.state, expenses: shits, total });\r\n  }\r\n\r\n  navigate = (type) => {\r\n    let filterType = \"days\";\r\n    filterType = this.state.filter.viewType === \"weekly\" ? \"weeks\" : filterType;\r\n    filterType = this.state.filter.viewType === \"monthly\" ? \"months\" : filterType;\r\n    filterType = this.state.filter.viewType === \"yearly\" ? \"years\" : filterType;\r\n    let from, to;\r\n    if (type === \"prev\") {\r\n      from = this.state.filter.from.subtract(1, filterType);\r\n      to = this.state.filter.to.subtract(1, filterType);\r\n    }\r\n    else {\r\n      from = this.state.filter.from.add(1, filterType);\r\n      to = this.state.filter.to.add(1, filterType);\r\n    }\r\n\r\n    if (filterType === \"months\") {\r\n      to.endOf(\"month\");\r\n    }\r\n    this.setState({ ...this.state, filter: { ...this.state.filter, from: from, to: to } });\r\n    this.loadExpenses(from, to, this.state.filter.viewType);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyToolbarWithNavigation title=\"Expense\" buttons={[\r\n          <IconButton onClick={this.toggleFilter} color=\"inherit\" aria-label=\"Menu\">\r\n            <FilterList />\r\n          </IconButton>\r\n        ]} />\r\n        <AppBar className={this.props.classes.appBar} color=\"default\">\r\n          <Toolbar>\r\n            {this.state.filter.viewType !== \"custom\" ?\r\n              <IconButton onClick={this.navigate.bind(this, 'prev')}>\r\n                <ArrowBackIos />\r\n              </IconButton>\r\n              : null}\r\n            <Typography component=\"p\" className={this.props.classes.filterLabel}>\r\n              {this.state.currentFilter}<br /><small>{formatMoney(this.state.total)}</small>\r\n            </Typography>\r\n            {this.state.filter.viewType !== \"custom\" ?\r\n              <IconButton onClick={this.navigate.bind(this, 'next')}>\r\n                <ArrowForwardIos />\r\n              </IconButton>\r\n              : null}\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <div style={{ marginTop: '56px', overflowY: 'auto', minHeight: '100%' }}>\r\n          <List component=\"nav\">\r\n            {this.state.expenses.map(item =>\r\n              <Link key={item.expenseId} style={{ textDecoration: 'none' }} className=\"list-item\" to={'/expense/edit/' + item.expenseId}>\r\n                <ListItem button>\r\n                  <ListItemText primary={item.title} secondary={moment(item.date).format('MMM DD hh:mma (ddd)')} />\r\n                  <Typography className=\"float-right\">{formatMoney(item.amount)}</Typography >\r\n                </ListItem>\r\n                <Divider light />\r\n              </Link>\r\n            )}\r\n          </List>\r\n        </div>\r\n\r\n        <Dialog\r\n          onClose={this.toggleFilter}\r\n          open={this.state.showFilter}>\r\n          <Filter close={this.toggleFilter.bind(this)} applyFilter={this.loadExpenses.bind(this)} />\r\n        </Dialog>\r\n\r\n        <Fab onClick={() => { this.props.history.push(\"/expense/new\") }} color=\"primary\" aria-label=\"Add\" style={{ position: 'fixed', bottom: '15px', right: '15px' }}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExpense.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Expense);","import React, { Component } from 'react';\r\n\r\nclass Income extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n            <h1>Income index</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Income;\r\n  ","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 56\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass MyToolbar extends Component {\r\n  render(){\r\n    return (\r\n      <div style={styles.root}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            {this.props.showBackButton ? \r\n              <IconButton onClick={this.props.onBack} style={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <ArrowBack />\r\n              </IconButton>\r\n            : null}\r\n            <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\r\n              {this.props.title}\r\n            </Typography>\r\n            {this.props.buttons.map((item, index) => <span key={index}>{item}</span>)}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyToolbar;","import React, { Component } from 'react';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n\r\nclass NewExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 1,\r\n            description: '',\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            accounts: [],\r\n            categories: [],\r\n            errors: {\r\n                title: false,\r\n                category: false,\r\n                amount: false,\r\n                account: false,\r\n                date: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadAccounts(this);\r\n        this.loadCategories(this);\r\n    }\r\n\r\n    loadAccounts = (component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"account\"], \"readonly\");\r\n\r\n            var accountStore = transaction.objectStore(\"account\");\r\n            var selectAccounts = accountStore.getAll();\r\n            transaction.oncomplete = function (event) {\r\n                component.setState({ ...component.state, accounts: selectAccounts.result });\r\n            }\r\n        }\r\n    }\r\n\r\n    loadCategories = (component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"category\"], \"readonly\");\r\n\r\n            var categoryStore = transaction.objectStore(\"category\");\r\n            var selectcategory = categoryStore.getAll();\r\n            transaction.oncomplete = function (event) {\r\n                component.setState({ ...component.state, categories: selectcategory.result });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    handleSave() {\r\n        var data = {\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n\r\n        let hasError = false;\r\n        let errors = {\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false,\r\n            date: false\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.date || this.state.date === '') {\r\n            errors.date = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n            requestDatabase.onsuccess = (event) => {\r\n                var db = event.target.result;\r\n                var transaction = db.transaction(\"expense\", \"readwrite\");\r\n                var store = transaction.objectStore(\"expense\");\r\n                store.put(data);\r\n                transaction.oncomplete = (event) => {\r\n                    let filter = {\r\n                        from: moment(data.date).hours(0).minutes(0).seconds(0),\r\n                        to: moment(data.date).hours(0).hours(23).minutes(59).seconds(59),\r\n                        viewType: 'daily'\r\n                    };\r\n                    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n                    this.props.history.push(\"/expense\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add expense\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Save /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Account</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.account}\r\n                            value={this.state.accountId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.title}\r\n                        label=\"Title\"\r\n                        value={this.state.title}\r\n                        onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.category}\r\n                            value={this.state.categoryId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.date}\r\n                        label=\"Date\"\r\n                        type=\"datetime-local\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleChangeProperty.bind(this, 'date')}\r\n                    />\r\n                    <TextField\r\n                        className=\"form-control\"\r\n                        label=\"Notes\"\r\n                        multiline\r\n                        rows=\"6\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewExpense;\r\n","import React, { Component } from 'react';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { DialogTitle, Dialog, Button, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\n\r\nclass EditExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDelete: false,\r\n            expenseId: Number(this.props.match.params.id),\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 0,\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            description: '',\r\n            accounts: [],\r\n            categories: [],\r\n            errors: {\r\n                title: false,\r\n                category: false,\r\n                amount: false,\r\n                account: false,\r\n                date: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.loadAccounts(this);\r\n        this.loadCategories(this);\r\n        this.loadExpense(this.state.expenseId, this);\r\n    }\r\n\r\n    loadExpense = (id, component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"expense\"], \"readonly\");\r\n    \r\n            var store = transaction.objectStore(\"expense\");\r\n            var select = store.get(id);\r\n\r\n            transaction.oncomplete = (event) => {\r\n                if (!select.result){\r\n                    this.props.history.push(\"/expense\");\r\n                    return;\r\n                }\r\n                component.setState({\r\n                    ...component.state,\r\n                    title: select.result.title,\r\n                    categoryId: select.result.categoryId,\r\n                    amount: formatMoney(select.result.amount),\r\n                    accountId: select.result.accountId,\r\n                    description: select.result.description,\r\n                    date: moment(select.result.date).format('YYYY-MM-DD[T]HH:mm')\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    loadAccounts = (component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"account\"], \"readonly\");\r\n    \r\n            var accountStore = transaction.objectStore(\"account\");\r\n            var selectAccounts = accountStore.getAll();\r\n            transaction.oncomplete = function (event) { \r\n                component.setState({...component.state, accounts: selectAccounts.result});\r\n            }\r\n        }\r\n    }\r\n    \r\n    loadCategories = (component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"category\"], \"readonly\");\r\n    \r\n            var categoryStore = transaction.objectStore(\"category\");\r\n            var selectcategory = categoryStore.getAll();\r\n            transaction.oncomplete = function (event) { \r\n                component.setState({...component.state, categories: selectcategory.result});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeProperty (property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({...this.state, [property]: value});\r\n    }\r\n\r\n    formatCurrency (e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({...this.state, \"amount\": value});\r\n    }\r\n\r\n    handleSave () {\r\n        var self = this;\r\n        var data = {\r\n            expenseId: this.state.expenseId,\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n        \r\n        let hasError = false;\r\n        let errors = {\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false,\r\n            date: false\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.date || this.state.date === '') {\r\n            errors.date = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if(hasError) {\r\n            this.setState({...this.state, errors});\r\n        }\r\n        else {\r\n            const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n            requestDatabase.onsuccess = function (event) {\r\n                var db = event.target.result;\r\n                var transaction = db.transaction(\"expense\", \"readwrite\");\r\n                var store = transaction.objectStore(\"expense\");\r\n                store.put(data);\r\n                transaction.oncomplete = function (event) {\r\n                    let filter = {\r\n                        from: moment(data.date).hours(0).minutes(0).seconds(0),\r\n                        to: moment(data.date).hours(0).hours(23).minutes(59).seconds(59),\r\n                        viewType: 'daily'\r\n                    };\r\n                    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n                    self.props.history.push(\"/expense\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleDelete = () => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction(\"expense\", \"readwrite\");\r\n            var store = transaction.objectStore(\"expense\");\r\n            store.delete(this.state.expenseId);\r\n            transaction.oncomplete = (event) => {\r\n                this.props.history.push(\"/expense\");\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleDeleteModal = () => {\r\n        this.setState({...this.state, showDelete: !this.state.showDelete});\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n            <MyToolbar \r\n                onBack={() => {this.props.history.goBack()}}\r\n                showBackButton={true}\r\n                title=\"Add expense\"\r\n                buttons={[\r\n                    (<IconButton onClick={this.toggleDeleteModal.bind(this)}  color=\"inherit\"><Delete /></IconButton>),\r\n                    (<IconButton onClick={this.handleSave.bind(this)}  color=\"inherit\"><Save /></IconButton>)\r\n                ]}\r\n            />\r\n            <div className=\"content\">\r\n                <FormControl className=\"form-control\" margin=\"normal\">\r\n                    <InputLabel>Account</InputLabel>\r\n                    <Select\r\n                        error={this.state.errors.account}\r\n                        value={this.state.accountId}\r\n                        onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    error={this.state.errors.title}\r\n                    label=\"Title\"\r\n                    value={this.state.title}\r\n                    onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                    margin=\"normal\"\r\n                    className=\"form-control\"\r\n                />\r\n                <TextField\r\n                    error={this.state.errors.amount}\r\n                    label=\"Amount\"\r\n                    value={this.state.amount}\r\n                    onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                    margin=\"normal\"\r\n                    className=\"form-control\"\r\n                    onBlur={this.formatCurrency.bind(this)}\r\n                />\r\n                <FormControl className=\"form-control\" margin=\"normal\">\r\n                    <InputLabel>Category</InputLabel>\r\n                    <Select\r\n                        error={this.state.errors.category}\r\n                        value={this.state.categoryId}\r\n                        onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    error={this.state.errors.date}\r\n                    label=\"Date\"\r\n                    type=\"datetime-local\"\r\n                    margin=\"normal\"\r\n                    className=\"form-control\"\r\n                    value={this.state.date} \r\n                    onChange={this.handleChangeProperty.bind(this, 'date')}\r\n                />\r\n                <TextField\r\n                    className=\"form-control\"\r\n                    label=\"Notes\"\r\n                    multiline\r\n                    rows=\"6\"\r\n                    value={this.state.description} \r\n                    onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                    margin=\"normal\"\r\n                />\r\n                \r\n                <Dialog\r\n                    onClose={this.toggleDeleteModal}\r\n                    open={this.state.showDelete}>\r\n                <DialogTitle>Confirm</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Are you sure you want to delete?</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.toggleDeleteModal} color=\"primary\" autoFocus>\r\n                    Cancel\r\n                    </Button>\r\n                    <Button onClick={this.handleDelete} color=\"primary\">\r\n                    Delete\r\n                    </Button>\r\n                </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default EditExpense;\r\n  ","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport { Typography, Fab } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { selectAll } from \"../../helpers\";\r\n\r\n\r\nconst styles = {\r\n    myClass: {\r\n        font: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: 15,\r\n        right: 15\r\n    }\r\n}\r\n\r\nclass Budget extends Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            items: []\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        selectAll(\"budget\", this.renderItems);\r\n    }\r\n\r\n    renderItems = (items) => {\r\n        this.setState({...this.state, items});\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <> \r\n                <MyToolbarWithNavigation title=\"Budget\" buttons={[]} />\r\n                \r\n\r\n                <Fab onClick={() => { this.props.history.push('budget/new') }} color=\"primary\" className={this.props.classes.fab}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nBudget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Budget);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney, budgetRepeatEnum } from \"../../helpers\";\r\nimport { selectAll } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { MenuItem, Input, Checkbox, ListItemText } from \"@material-ui/core\";\r\n\r\n\r\nconst styles = {\r\n    myClass: {\r\n        font: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    menuProps: {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: 48 * 4.5 + 8,\r\n                width: 250,\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nclass NewBudget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            selectedAccounts: [],\r\n            isActive: true,\r\n            repeat: budgetRepeatEnum.none,\r\n            startDate: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            endDate: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            amount: 0,\r\n            selectedCategories: [],\r\n            accounts: [],\r\n            categories: [],\r\n            errors: {\r\n                name: false,\r\n                selectedAccounts: false,\r\n                repeat: false,\r\n                startDate: false,\r\n                endDate: false,\r\n                amount: false,\r\n                selectedCategories: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        selectAll(\"account\", this.loadAccounts);\r\n        selectAll(\"category\", this.loadCategories);\r\n    }\r\n\r\n    loadAccounts = (accounts) => {\r\n        accounts.unshift({ accountId: 0, name: 'All' });\r\n        this.setState({ ...this.state, accounts })\r\n    }\r\n\r\n    loadCategories = (categories) => {\r\n        categories.unshift({ categoryId: 0, name: 'All' });\r\n        this.setState({ ...this.state, categories });\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        console.log(value);\r\n        if (property === \"selectedAccounts\") {\r\n            let all = value.find(m => m.accountId === 0);\r\n            if (all !== null && all !== undefined) {\r\n                value = this.state.accounts;\r\n            }\r\n        }\r\n        else if (property === \"selectedCategories\") {\r\n            let all = value.find(m => m.categoryId === 0);\r\n            console.log(all);\r\n            if (all !== null && all !== undefined) {\r\n                value = this.state.categories;\r\n            }\r\n        }\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    handleSave = () => { }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add budget\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Save /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <TextField\r\n                        error={this.state.errors.name}\r\n                        label=\"Name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChangeProperty.bind(this, 'name')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Accounts</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.account}\r\n                            multiple\r\n                            value={this.state.selectedAccounts}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedAccounts')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.accounts.map((account, index) => (\r\n                                <MenuItem key={index} value={account}>\r\n                                    <Checkbox checked={this.state.selectedAccounts.map(f => { return f.accountId }).indexOf(account.accountId) > -1} />\r\n                                    <ListItemText primary={account.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedCategories}\r\n                            multiple\r\n                            value={this.state.selectedCategories}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedCategories')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.categories.map((category, index) => (\r\n                                <MenuItem key={index} value={category}>\r\n                                    <Checkbox checked={this.state.selectedCategories.map(f => { return f.categoryId }).indexOf(category.categoryId) > -1} />\r\n                                    <ListItemText primary={category.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Repeat</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.repeat}\r\n                            value={this.state.repeat}\r\n                            onChange={this.handleChangeProperty.bind(this, 'repeat')}>\r\n                            <MenuItem value={budgetRepeatEnum.none}>None</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.daily}>Daily</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.weekly}>Weekly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.monthly}>Monthly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.custom}>Custom</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nNewBudget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(NewBudget);","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from '../dashboard/dashboard';\r\nimport Expense from '../expense/expense';\r\nimport Income from '../income/income';\r\nimport NewExpense from '../expense/new-expense';\r\nimport EditExpense from '../expense/edit-expense';\r\nimport Budget from '../budget/budget';\r\nimport NewBudget from '../budget/new-budget';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n      return (\r\n        <main>\r\n            <Switch>\r\n                <Route path='/income' component={Income}/>\r\n                <Route path='/expense/edit/:id' component={EditExpense} />\r\n                <Route path='/expense/new' component={NewExpense} />\r\n                <Route path='/expense' component={Expense}/>\r\n                <Route path='/budget/new' component={NewBudget}/>\r\n                <Route path='/budget' component={Budget}/>\r\n                <Route path='/' component={Dashboard}/>\r\n            </Switch>\r\n        </main>\r\n      );\r\n    }\r\n}\r\n  \r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\r\nimport Main from './components/common/main';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper animate slideInRight\">\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport { initialize } from './database';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\nimport './App.css';\r\nimport 'typeface-roboto';\r\n\r\nconst configureHistory = () => {\r\n  return window.matchMedia('(display-mode: standalone)').matches\r\n    ? createHashHistory()\r\n    : createBrowserHistory()\r\n}\r\nconst history = configureHistory();\r\ninitialize(); //initialize database\r\nReactDOM.render((\r\n    <Router history={history} basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n    </Router>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","\r\nexport const initialize = () => {\r\n    var request = window.indexedDB.open(\"Moneytoring\", 3);\r\n    \r\n    request.onupgradeneeded = function(event) {\r\n        var db = event.target.result;\r\n    \r\n        db.onerror = function(event) {\r\n            \r\n        };\r\n\r\n        if (!db.objectStoreNames.contains('expense')) {\r\n            var expenseTable = db.createObjectStore(\"expense\", { keyPath: \"expenseId\", autoIncrement: true });\r\n            expenseTable.createIndex(\"expenseId\", \"expenseId\", { unique: true });\r\n            expenseTable.createIndex(\"title\", \"title\", { unique: false });\r\n            expenseTable.createIndex(\"categoryId\", \"categoryId\", { unique: false });\r\n            expenseTable.createIndex(\"amount\", \"amount\", { unique: false });\r\n            expenseTable.createIndex(\"accountId\", \"accountId\", { unique: false });\r\n            expenseTable.createIndex(\"description\", \"description\", { unique: false });\r\n            expenseTable.createIndex(\"date\", \"date\", { unique: false });\r\n        }\r\n        \r\n        if (!db.objectStoreNames.contains('account')) {\r\n            var accountTable = db.createObjectStore(\"account\", { keyPath: \"accountId\", autoIncrement: true });\r\n            accountTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n\r\n        if (!db.objectStoreNames.contains('category')) {\r\n            var categoryTable = db.createObjectStore(\"category\", { keyPath: \"categoryId\", autoIncrement: true });\r\n            categoryTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n\r\n        if (!db.objectStoreNames.contains('budget')) {\r\n            var budgetTable = db.createObjectStore(\"budget\", {keyPath: \"budgetId\", autoIncrement: true});\r\n            budgetTable.createIndex(\"name\", \"name\", { unique: false});\r\n            budgetTable.createIndex(\"repeat\", \"repeat\", { unique: false});\r\n            budgetTable.createIndex(\"startDate\", \"startDate\", { unique: false});\r\n            budgetTable.createIndex(\"endDate\", \"endDate\", { unique: false});\r\n            budgetTable.createIndex(\"amount\", \"amount\", { unique: false});\r\n            budgetTable.createIndex(\"accountIds\", \"accountIds\", { unique: false});\r\n            budgetTable.createIndex(\"isActive\", \"isActive\", { unique: false});\r\n            budgetTable.createIndex(\"categoryIds\", \"categoryIds\", { unique: false});\r\n        }\r\n    }\r\n\r\n    request.onsuccess = function (event) {\r\n        var db = event.target.result;\r\n\r\n        //--------------------------------\r\n        //create default account (personal)\r\n        //--------------------------------\r\n        var transaction = db.transaction([\"account\"], \"readonly\");\r\n        var accountStore = transaction.objectStore(\"account\");\r\n        var selectAccounts = accountStore.getAll();\r\n        transaction.oncomplete = function (event) {            \r\n            if (selectAccounts.result.length === 0) {\r\n                var addAccountTransaction = db.transaction([\"account\"], \"readwrite\");\r\n                var accountStore1 = addAccountTransaction.objectStore(\"account\");\r\n                accountStore1.put({name: \"personal\"});\r\n            }\r\n        }\r\n        //----------------------------------------------------------------\r\n        //create default categories (food, transportation, clothing)\r\n        //----------------------------------------------------------------\r\n        var categoryTransaction = db.transaction([\"category\"], \"readonly\");\r\n        var categoryStore = categoryTransaction.objectStore(\"category\");\r\n        var selectCategories = categoryStore.getAll();\r\n        categoryTransaction.oncomplete = function (event) {\r\n            if (selectCategories.result.length === 0) {\r\n                var addCategoriesTransaction = db.transaction([\"category\"], \"readwrite\");\r\n                var addCategoryStore = addCategoriesTransaction.objectStore(\"category\");\r\n                addCategoryStore.put({name: \"food\"});\r\n                addCategoryStore.put({name: \"transportation\"});\r\n                addCategoryStore.put({name: \"clothing\"});\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":""}