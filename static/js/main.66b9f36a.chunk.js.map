{"version":3,"sources":["components/common/toolbar.js","components/dashboard/dashboard.js","components/common/floating-action-button.js","components/common/filter.js","components/expense/expense.js","components/income/income.js","components/expense/new-expense.js","components/common/modal-danger.js","components/expense/edit-expense.js","components/common/main.js","components/common/navigation.js","App.js","serviceWorker.js","index.js","database.js"],"names":["BackButton","withRouter","_ref","history","react_default","a","createElement","onClick","goBack","className","Toolbar","handleNavToggle","window","toggleNavigation","this","props","showBackButton","type","id","bind","title","buttons","map","btn","i","key","Component","Dashboard","toolbar","FloatingActionButton","callback","Filter","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","changeViewType","e","setState","objectSpread","state","viewType","target","value","changeStateValue","parentProperty","childProperty","defineProperty","handleApply","startDate","Date","endDate","daily","date","alert","moment","hours","minutes","seconds","weekly","week","weekParts","split","weekNumber","Number","replace","year","startOf","endOf","monthly","month","monthParts","yearly","isNaN","custom","from","to","applyFilter","$","modal","format","tabIndex","role","onChange","data-dismiss","AddButton","common_floating_action_button","push","Expense","loadExpenses","console","log","expenses","currentFilter","range","IDBKeyRange","bound","toDate","indexedDB","open","onsuccess","event","store","result","transaction","objectStore","index","openCursor","cursor","concat","toConsumableArray","total","amount","continue","data-toggle","data-target","formatMoney","item","Link","expenseId","length","filter","Income","NewExpense","loadAccounts","component","selectAccounts","getAll","oncomplete","accounts","loadCategories","selectcategory","categories","categoryId","accountId","description","property","parseInt","self","data","parseFloat","refs","focus","put","handleSave","ref","handleChangeProperty","name","placeholder","onBlur","formatCurrency","rows","ModalDanger","aria-label","aria-hidden","body","EditExpense","loadExpense","select","get","handleDelete","delete","on","match","params","modal_danger","Main","Switch","Route","exact","path","Navigation","App","navigation","main","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","error","matchMedia","matches","createHashHistory","createBrowserHistory","request","onupgradeneeded","db","onerror","objectStoreNames","contains","expenseTable","createObjectStore","keyPath","autoIncrement","createIndex","unique","categoryTransaction","selectCategories","addCategoryStore","initialize","ReactDOM","render","Router","basename","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.66b9f36a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst BackButton = withRouter(({ history }) => (\r\n    <button onClick={() => { history.goBack() }}><i className=\"fas fa-arrow-left\"></i></button>\r\n))\r\n\r\nclass Toolbar extends Component {\r\n    handleNavToggle = () => {\r\n        window.toggleNavigation();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                {this.props.showBackButton ? \r\n                    <BackButton /> :\r\n                    <button type=\"button\" id=\"sidebarCollapse\" className=\"btn\" onClick={this.handleNavToggle.bind(this)}>\r\n                        <i className=\"fas fa-bars\"></i>\r\n                    </button>\r\n                }\r\n                <div className=\"mr-auto\">\r\n                    {this.props.title}\r\n                </div>\r\n                {this.props.buttons ? this.props.buttons.map((btn, i) => <span key={i}>{btn}</span>) : null}\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Toolbar;\r\n","import React, { Component } from 'react';\r\nimport Toolbar from \"../common/toolbar\";\r\n\r\nclass Dashboard extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n            <Toolbar title=\"moneytoring\" />\r\n            <div className=\"content\">\r\n              <h1>Dashboard index</h1>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Dashboard;\r\n  ","import React, { Component } from 'react';\r\nimport './floating-action-button.css';\r\n\r\nclass FloatingActionButton extends Component {\r\n    render() {\r\n      return (\r\n          <button onClick={this.props.callback} className=\"btn btn-primary btn-lg floating-action-button\">\r\n              <i className=\"fas fa-plus\"></i>\r\n          </button>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default FloatingActionButton;","import React, { Component } from 'react';\r\nimport moment from \"moment\";\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            viewType: 'daily',\r\n            daily: {\r\n                date: moment().format('YYYY-MM-DD')\r\n            },\r\n            weekly: {\r\n                week: ''\r\n            },\r\n            monthly: {\r\n                month: ''\r\n            },\r\n            yearly: {\r\n                year: ''\r\n            },\r\n            custom: {\r\n                from: '',\r\n                to:''\r\n            }\r\n        }\r\n    }\r\n\r\n    changeViewType = (e) => {\r\n        this.setState({...this.state, viewType: e.target.value });\r\n    }\r\n\r\n    changeStateValue = (parentProperty, childProperty, e) => {\r\n        this.setState({...this.state, [parentProperty]: { ...this.state[parentProperty], [childProperty]: e.target.value }});\r\n    }\r\n\r\n    handleApply = () => {\r\n        let startDate = new Date();\r\n        let endDate = new Date();\r\n        switch(this.state.viewType) {\r\n            case 'daily':\r\n                if(this.state.daily.date === '') {\r\n                    alert ('Select date');\r\n                    return;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.daily.date).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.daily.date).hours(23).minutes(59).seconds(59);\r\n                }\r\n                break;\r\n            case 'weekly':\r\n                if (this.state.weekly.week === '') {\r\n                    alert('Select week');\r\n                    return;\r\n                }\r\n                else {\r\n                    let weekParts = this.state.weekly.week.split('-');\r\n                    let weekNumber = Number(weekParts[1].replace('W', ''));\r\n                    startDate = moment().year(Number(weekParts[0])).week(weekNumber).startOf('week');\r\n                    endDate = moment().year(Number(weekParts[0])).week(weekNumber).endOf('week');\r\n                }\r\n                break;\r\n            case 'monthly':\r\n                if (this.state.monthly.month === '') {\r\n                    alert('Select month');\r\n                    return;\r\n                }\r\n                else {\r\n                    let monthParts = this.state.monthly.month.split('-');\r\n                    startDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).startOf('month');\r\n                    endDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).endOf('month');\r\n                }\r\n                break;\r\n            case 'yearly':\r\n                if (this.state.yearly.year === '' || isNaN(this.state.yearly.year)) {\r\n                    alert('Select year');\r\n                    return;\r\n                }\r\n                else {\r\n                    let year = Number(this.state.yearly.year);\r\n                    startDate = moment().year(year).startOf('year');\r\n                    endDate = moment().year(year).endOf('year');\r\n                }\r\n                break;\r\n           default: //custom range\r\n                if(this.state.custom.from === ''){\r\n                    alert('Select date from');\r\n                    return;\r\n                }\r\n                else if(this.state.custom.to === '') {\r\n                    alert('Selecte date to');\r\n                    return;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.custom.from).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.custom.to).hours(23).minutes(59).seconds(59);\r\n                }\r\n        }\r\n        this.props.applyFilter(startDate, endDate);\r\n        window.$(\"#modalFilterExpense\").modal('hide');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n        <div className=\"modal\" id=\"modalFilterExpense\" tabIndex=\"-1\" role=\"dialog\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\">Filter expenses</h5>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <div className=\"form-group\">\r\n                            <label>View</label>\r\n                            <select value={this.state.viewType} onChange={this.changeViewType.bind(this)} className=\"form-control\">\r\n                                <option value=\"daily\">Daily</option>\r\n                                <option value=\"weekly\">Weekly</option>\r\n                                <option value=\"monthly\">Monthly</option>\r\n                                <option value=\"yearly\">Yearly</option>\r\n                                <option value=\"custom\">Custom range</option>\r\n                            </select>\r\n                        </div>\r\n                        {this.state.viewType === 'daily' ?\r\n                            <div className=\"form-group\">\r\n                                <label>Date</label>\r\n                                <input type=\"date\" className=\"form-control\" value={this.state.daily.date} onChange={this.changeStateValue.bind(this, 'daily', 'date')} />\r\n                            </div>\r\n                        : null }\r\n                        {this.state.viewType === 'weekly' ?\r\n                            <div className=\"form-group\">\r\n                                <label>Week</label>\r\n                                <input type=\"week\" className=\"form-control\" value={this.state.weekly.week} onChange={this.changeStateValue.bind(this, 'weekly', 'week')} />\r\n                            </div>\r\n                        : null }\r\n                        {this.state.viewType === 'monthly' ?\r\n                            <div className=\"form-group\">\r\n                                <label>Month</label>\r\n                                <input type=\"month\" className=\"form-control\" value={this.state.monthly.month} onChange={this.changeStateValue.bind(this, 'monthly', 'month')} />\r\n                            </div>\r\n                        : null }\r\n                        {this.state.viewType === 'yearly' ?\r\n                            <div className=\"form-group\">\r\n                                <label>Year</label>\r\n                                <input type=\"year\" className=\"form-control\" value={this.state.yearly.year} onChange={this.changeStateValue.bind(this, 'yearly', 'year')} />\r\n                            </div>\r\n                        : null }\r\n                        {this.state.viewType === 'custom' ?\r\n                            <div>\r\n                                <div className=\"form-group\">\r\n                                    <label>From</label>\r\n                                    <input type=\"date\" className=\"form-control\" value={this.state.custom.from} onChange={this.changeStateValue.bind(this, 'custom', 'from')} />\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label>To</label>\r\n                                    <input type=\"date\" className=\"form-control\" value={this.state.custom.to} onChange={this.changeStateValue.bind(this, 'custom', 'to')} />\r\n                                </div>\r\n                            </div>\r\n                        : null }\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.handleApply.bind(this)}>Apply</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n  \r\n  export default Filter;\r\n  ","import React, { Component } from 'react';\r\nimport FloatingActionButton from '../common/floating-action-button';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport './expense.css';\r\nimport Toolbar from \"../common/toolbar\";\r\nimport Filter from \"../common/filter\";\r\nimport moment from \"moment\";\r\n\r\nconst AddButton = withRouter(({ history }) => (\r\n    <FloatingActionButton callback={() => { history.push('/expense/new') }} />\r\n))\r\n\r\nclass Expense extends Component {\r\n    constructor (props) {\r\n      super(props);\r\n      this.state = {\r\n        currentFilter: '',\r\n        total: 0,\r\n        expenses: []\r\n      }\r\n    }\r\n\r\n    componentDidMount () {\r\n      let from = moment().hours(0).minutes(0).seconds(0);\r\n      let to = moment().hours(23).minutes(59).seconds(59);\r\n      this.loadExpenses(from, to);\r\n    }\r\n\r\n    loadExpenses = (from, to) => {\r\n      console.log(from, to);\r\n      if (from.month() === to.month() && from.date() === to.date() && from.year() === to.year()){\r\n        this.setState({...this.state, expenses: [], currentFilter: from.format('MMM DD')});\r\n      }\r\n      else {\r\n        this.setState({...this.state, expenses: [], currentFilter: from.format('MMM DD') + ' - ' + to.format('MMM DD')});\r\n      }\r\n      var range = null;\r\n      if (from && to) {\r\n        range = IDBKeyRange.bound(from.toDate(), to.toDate());\r\n      }\r\n      const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n      requestDatabase.onsuccess = (event) => {\r\n          var db = event.target.result;\r\n          var transaction = db.transaction([\"expense\"], \"readonly\");\r\n          var store = transaction.objectStore(\"expense\");\r\n          var selectall = range === null ? store.index('date').openCursor(null, 'prev') : store.index('date').openCursor(range, 'prev');\r\n          \r\n          selectall.onsuccess = (event) => {\r\n              var cursor = event.target.result;\r\n              if(cursor) {\r\n                  this.setState({...this.state, \r\n                    expenses: [...this.state.expenses, cursor.value],\r\n                    total: this.state.total + cursor.value.amount\r\n                  });\r\n                  cursor.continue();\r\n              }\r\n          }\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <Toolbar title=\"Expense\"\r\n                buttons={[\r\n                    (<button data-toggle=\"modal\" data-target=\"#modalFilterExpense\"><i className=\"fas fa-filter\"></i></button>)\r\n                ]}\r\n          />\r\n          <div className=\"content\">\r\n            <div className=\"under-toolbar-message text-center pt-1\">\r\n              {this.state.currentFilter}<br/><small>{window.formatMoney(this.state.total)}</small>\r\n            </div>\r\n            <div className=\"expenses-holder\">\r\n                {this.state.expenses.map(item =>\r\n                  <Link key={item.expenseId} className=\"list-item d-block\" to={'/expense/edit/' + item.expenseId}>\r\n                    {item.title}\r\n                    <small className=\"float-right\">{window.formatMoney(item.amount)}</small>\r\n                  </Link>\r\n                )}\r\n                {this.state.expenses.length === 0 ? <p className=\"text-center mt-5\">Wow! no expenses!</p> : null}\r\n                <AddButton />\r\n            </div>\r\n          </div>\r\n          <Filter applyFilter={this.loadExpenses.bind(this)} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Expense;\r\n  ","import React, { Component } from 'react';\r\n\r\nclass Income extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n            <h1>Income index</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Income;\r\n  ","import React, { Component } from 'react';\r\nimport Toolbar from \"../common/toolbar\";\r\nimport moment from \"moment\";\r\n\r\nclass NewExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 1,\r\n            description: '',\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            accounts: [],\r\n            categories: []\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.loadAccounts(this);\r\n        this.loadCategories(this);\r\n    }\r\n\r\n    loadAccounts = (component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"account\"], \"readonly\");\r\n    \r\n            var accountStore = transaction.objectStore(\"account\");\r\n            var selectAccounts = accountStore.getAll();\r\n            transaction.oncomplete = function (event) { \r\n                component.setState({...component.state, accounts: selectAccounts.result});\r\n            }\r\n        }\r\n    }\r\n    \r\n    loadCategories = (component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"category\"], \"readonly\");\r\n    \r\n            var categoryStore = transaction.objectStore(\"category\");\r\n            var selectcategory = categoryStore.getAll();\r\n            transaction.oncomplete = function (event) { \r\n                component.setState({...component.state, categories: selectcategory.result});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeProperty (property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({...this.state, [property]: value});\r\n    }\r\n\r\n    formatCurrency (e) {\r\n        let value = window.formatMoney(this.state.amount);\r\n        this.setState({...this.state, \"amount\": value});\r\n    }\r\n\r\n    handleSave () {\r\n        var self = this;\r\n        var data = {\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n        if (data.title === '') {\r\n            alert('Title is required');\r\n            this.refs[\"title\"].focus();\r\n            return;\r\n        }\r\n        else if (data.amount === 0 || isNaN(data.amount)) {\r\n            alert('Amount is required');\r\n            this.refs[\"amount\"].focus();\r\n            return;\r\n        }\r\n        else if (data.accountId === 0) {\r\n            alert('Select account');\r\n            this.refs[\"account\"].focus();\r\n            return;\r\n        }\r\n        else if (!this.state.date || this.state.date === '') {\r\n            alert('Date is required');\r\n            this.refs[\"date\"].focus();\r\n            return;\r\n        }\r\n\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction(\"expense\", \"readwrite\");\r\n            var store = transaction.objectStore(\"expense\");\r\n            store.put(data);\r\n            transaction.oncomplete = function (event) {\r\n                self.props.history.push(\"/expense\");\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <Toolbar \r\n                showBackButton={true}\r\n                title=\"Add expense\"\r\n                buttons={[\r\n                    (<button onClick={this.handleSave.bind(this)}><i className=\"fas fa-save\"></i></button>)\r\n                ]}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"p-3\">\r\n                    <div className=\"form-group\">\r\n                        <label>Account:</label>\r\n                        <select ref=\"account\" className=\"form-control\" value={this.state.accountId} onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <option>-select account-</option>\r\n                            {this.state.accounts.map(item => <option key={item.accountId} value={item.accountId}>{item.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Title:</label>\r\n                        <input placeholder=\"Title\" type=\"text\" ref=\"title\" className=\"form-control\" value={this.state.title} onChange={this.handleChangeProperty.bind(this, 'title')} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Amount:</label>\r\n                        <input placeholder=\"Amount\" onBlur={this.formatCurrency.bind(this)} ref=\"amount\" type=\"text\" className=\"form-control text-right\" value={this.state.amount} onChange={this.handleChangeProperty.bind(this, 'amount')} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Category:</label>\r\n                        <select className=\"form-control\" value={this.state.categoryId} onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <option>-select category-</option>\r\n                            {this.state.categories.map(item => <option key={item.categoryId} value={item.categoryId}>{item.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Date:</label>\r\n                        <input placeholder=\"Date\" type=\"datetime-local\" ref=\"date\" className=\"form-control\" value={this.state.date} onChange={this.handleChangeProperty.bind(this, 'date')} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Notes:</label>\r\n                        <textarea placeholder=\"Description\" rows=\"5\" className=\"form-control\" value={this.state.description} onChange={this.handleChangeProperty.bind(this, 'description')}></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default NewExpense;\r\n  ","import React, { Component } from 'react';\r\n\r\nclass ModalDanger extends Component {\r\n    render() {\r\n      return (\r\n          <div className=\"modal\" id=\"modalDanger\" tabIndex=\"-1\" role=\"dialog\">\r\n            <div className=\"modal-dialog\" role=\"document\">\r\n              <div className=\"modal-content\">\r\n                <div className=\"modal-header\">\r\n                  <h5 className=\"modal-title\">{this.props.title}</h5>\r\n                  <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <span aria-hidden=\"true\">&times;</span>\r\n                  </button>\r\n                </div>\r\n                <div className=\"modal-body\">\r\n                  <p>{this.props.body}</p>\r\n                </div>\r\n                <div className=\"modal-footer\">\r\n                  <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Cancel</button>\r\n                  <button onClick={this.props.callback} type=\"button\" className=\"btn btn-primary\">Ok</button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n      );\r\n    }\r\n}\r\n  \r\n\r\nexport default ModalDanger;\r\n\r\n","import React, { Component } from 'react';\r\nimport Toolbar from \"../common/toolbar\";\r\nimport moment from \"moment\";\r\nimport ModalDanger from \"../common/modal-danger\";\r\n\r\nclass EditExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expenseId: Number(this.props.match.params.id),\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 0,\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            description: '',\r\n            accounts: [],\r\n            categories: []\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.loadAccounts(this);\r\n        this.loadCategories(this);\r\n        this.loadExpense(this.state.expenseId, this);\r\n    }\r\n\r\n    loadExpense = (id, component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"expense\"], \"readonly\");\r\n    \r\n            var store = transaction.objectStore(\"expense\");\r\n            var select = store.get(id);\r\n\r\n            transaction.oncomplete = (event) => {\r\n                if (!select.result){\r\n                    this.props.history.push(\"/expense\");\r\n                    return;\r\n                }\r\n                component.setState({\r\n                    ...component.state,\r\n                    title: select.result.title,\r\n                    categoryId: select.result.categoryId,\r\n                    amount: window.formatMoney(select.result.amount),\r\n                    accountId: select.result.accountId,\r\n                    description: select.result.description,\r\n                    date: moment(select.result.date).format('YYYY-MM-DD[T]HH:mm')\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    loadAccounts = (component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"account\"], \"readonly\");\r\n    \r\n            var accountStore = transaction.objectStore(\"account\");\r\n            var selectAccounts = accountStore.getAll();\r\n            transaction.oncomplete = function (event) { \r\n                component.setState({...component.state, accounts: selectAccounts.result});\r\n            }\r\n        }\r\n    }\r\n    \r\n    loadCategories = (component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"category\"], \"readonly\");\r\n    \r\n            var categoryStore = transaction.objectStore(\"category\");\r\n            var selectcategory = categoryStore.getAll();\r\n            transaction.oncomplete = function (event) { \r\n                component.setState({...component.state, categories: selectcategory.result});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeProperty (property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({...this.state, [property]: value});\r\n    }\r\n\r\n    formatCurrency (e) {\r\n        let value = window.formatMoney(this.state.amount);\r\n        this.setState({...this.state, \"amount\": value});\r\n    }\r\n\r\n    handleSave () {\r\n        var self = this;\r\n        var data = {\r\n            expenseId: this.state.expenseId,\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n\r\n        console.log(data);\r\n        if (data.title === '') {\r\n            alert('Title is required');\r\n            this.refs[\"title\"].focus();\r\n            return;\r\n        }\r\n        else if (data.amount === 0 || isNaN(data.amount)) {\r\n            alert('Amount is required');\r\n            this.refs[\"amount\"].focus();\r\n            return;\r\n        }\r\n        else if (data.accountId === 0) {\r\n            alert('Select account');\r\n            this.refs[\"account\"].focus();\r\n            return;\r\n        }\r\n        else if (!this.state.date || this.state.date === '') {\r\n            alert('Date is required');\r\n            this.refs[\"date\"].focus();\r\n            return;\r\n        }\r\n\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction(\"expense\", \"readwrite\");\r\n            var store = transaction.objectStore(\"expense\");\r\n            store.put(data);\r\n            transaction.oncomplete = function (event) {\r\n                self.props.history.push(\"/expense\");\r\n            }\r\n        }\r\n    }\r\n\r\n    handleDelete = () => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction(\"expense\", \"readwrite\");\r\n            var store = transaction.objectStore(\"expense\");\r\n            store.delete(this.state.expenseId);\r\n            console.log(1);\r\n            transaction.oncomplete = (event) => {\r\n                window.$('#modalDanger').on('hidden.bs.modal', () => {\r\n                    this.props.history.push(\"/expense\");\r\n                });\r\n                window.$(\"#modalDanger\").modal('hide');\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <Toolbar \r\n                showBackButton={true}\r\n                title=\"Edit expense\"\r\n                buttons={[\r\n                    (<button data-toggle=\"modal\" data-target=\"#modalDanger\" onClick={() => {}}><i className=\"fas fa-trash-alt\"></i></button>),\r\n                    (<button onClick={this.handleSave.bind(this)}><i className=\"fas fa-save\"></i></button>)\r\n                ]}\r\n            />\r\n            <div className=\"content\">\r\n                <div className=\"p-3\">\r\n                    <div className=\"form-group\">\r\n                        <select ref=\"account\" className=\"form-control\" value={this.state.accountId} onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <option>-select account-</option>\r\n                            {this.state.accounts.map(item => <option key={item.accountId} value={item.accountId}>{item.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input placeholder=\"Title\" type=\"text\" ref=\"title\" className=\"form-control\" value={this.state.title} onChange={this.handleChangeProperty.bind(this, 'title')} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input placeholder=\"Amount\" onBlur={this.formatCurrency.bind(this)} ref=\"amount\" type=\"text\" className=\"form-control text-right\" value={this.state.amount} onChange={this.handleChangeProperty.bind(this, 'amount')} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select className=\"form-control\" value={this.state.categoryId} onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <option>-select category-</option>\r\n                            {this.state.categories.map(item => <option key={item.categoryId} value={item.categoryId}>{item.name}</option>)}\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input placeholder=\"Date\" type=\"datetime-local\" ref=\"date\" className=\"form-control\" value={this.state.date} onChange={this.handleChangeProperty.bind(this, 'date')} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <textarea placeholder=\"Description\" rows=\"5\" className=\"form-control\" value={this.state.description} onChange={this.handleChangeProperty.bind(this, 'description')}></textarea>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ModalDanger title=\"Confirm\" body=\"Are you sure you want to delete this?\" callback={this.handleDelete.bind(this)} />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default EditExpense;\r\n  ","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from '../dashboard/dashboard';\r\nimport Expense from '../expense/expense';\r\nimport Income from '../income/income';\r\nimport NewExpense from '../expense/new-expense';\r\nimport EditExpense from '../expense/edit-expense';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n      return (\r\n        <main>\r\n            <Switch>\r\n                <Route exact path='/' component={Dashboard}/>\r\n                <Route path='/income' component={Income}/>\r\n                <Route path='/expense/edit/:id' component={EditExpense} />\r\n                <Route path='/expense/new' component={NewExpense} />\r\n                <Route path='/expense' component={Expense}/>\r\n            </Switch>\r\n        </main>\r\n      );\r\n    }\r\n}\r\n  \r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Navigation extends Component {\r\n    render() {\r\n      return (\r\n        <nav id=\"sidebar\">\r\n            <div id=\"dismiss\">\r\n                <i className=\"fas fa-arrow-left\"></i>\r\n            </div>\r\n            <div className=\"sidebar-header\">\r\n                <p></p>\r\n                <h4>moneytoring</h4>\r\n            </div>\r\n            <ul className=\"list-unstyled components nav-links\">\r\n                <li><Link to='/'><i className=\"fas fa-tachometer-alt mr-2\"></i>Dashboard</Link></li>\r\n                <li><Link to='/income'><i className=\"fas fa-dollar-sign mr-2\"></i>Income</Link></li>\r\n                <li><Link to='/expense'><i className=\"fas fa-tags mr-2\"></i>Expense</Link></li>\r\n                {/*<li className=\"active\">\r\n                    <a href=\"#homeSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\">Home</a>\r\n                    <ul className=\"collapse list-unstyled\" id=\"homeSubmenu\">\r\n                        <li>\r\n                            <a>Home 1</a>\r\n                        </li>\r\n                        <li>\r\n                            <a>Home 2</a>\r\n                        </li>\r\n                        <li>\r\n                            <a>Home 3</a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <a>About</a>\r\n                    <a href=\"#pageSubmenu\" data-toggle=\"collapse\" aria-expanded=\"false\">Pages</a>\r\n                    <ul className=\"collapse list-unstyled\" id=\"pageSubmenu\">\r\n                        <li>\r\n                            <a>Page 1</a>\r\n                        </li>\r\n                        <li>\r\n                            <a>Page 2</a>\r\n                        </li>\r\n                        <li>\r\n                            <a>Page 3</a>\r\n                        </li>\r\n                    </ul>\r\n                </li>\r\n                <li>\r\n                    <a>Portfolio</a>\r\n                </li>\r\n                <li>\r\n                    <a>Contact</a>\r\n      </li>*/}\r\n            </ul>\r\n        </nav>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Navigation;\r\n  ","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Main from './components/common/main';\r\nimport Navigation from './components/common/navigation';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        <Navigation />  \r\n        <Main />\r\n        <div className=\"overlay\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport { initialize } from './database';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\n\r\nconst configureHistory = () => {\r\n  return window.matchMedia('(display-mode: standalone)').matches\r\n    ? createHashHistory()\r\n    : createBrowserHistory()\r\n}\r\nconst history = configureHistory();\r\ninitialize(); //initialize database\r\nReactDOM.render((\r\n    <Router history={history} basename=\"/moneytoring/\">\r\n        <App />\r\n    </Router>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","\r\nexport const initialize = () => {\r\n    var request = window.indexedDB.open(\"Moneytoring\", 2);\r\n    \r\n    request.onupgradeneeded = function(event) {\r\n        var db = event.target.result;\r\n    \r\n        db.onerror = function(event) {\r\n            \r\n        };\r\n\r\n        if (!db.objectStoreNames.contains('expense')) {\r\n            var expenseTable = db.createObjectStore(\"expense\", { keyPath: \"expenseId\", autoIncrement: true });\r\n            expenseTable.createIndex(\"expenseId\", \"expenseId\", { unique: true });\r\n            expenseTable.createIndex(\"title\", \"title\", { unique: false });\r\n            expenseTable.createIndex(\"categoryId\", \"categoryId\", { unique: false });\r\n            expenseTable.createIndex(\"amount\", \"amount\", { unique: false });\r\n            expenseTable.createIndex(\"accountId\", \"accountId\", { unique: false });\r\n            expenseTable.createIndex(\"description\", \"description\", { unique: false });\r\n            expenseTable.createIndex(\"date\", \"date\", { unique: false });\r\n        }\r\n        \r\n        if (!db.objectStoreNames.contains('account')) {\r\n            var accountTable = db.createObjectStore(\"account\", { keyPath: \"accountId\", autoIncrement: true });\r\n            accountTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n\r\n        if (!db.objectStoreNames.contains('category')) {\r\n            var categoryTable = db.createObjectStore(\"category\", { keyPath: \"categoryId\", autoIncrement: true });\r\n            categoryTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n    }\r\n\r\n    request.onsuccess = function (event) {\r\n        var db = event.target.result;\r\n\r\n        //--------------------------------\r\n        //create default account (personal)\r\n        //--------------------------------\r\n        var transaction = db.transaction([\"account\"], \"readonly\");\r\n        var accountStore = transaction.objectStore(\"account\");\r\n        var selectAccounts = accountStore.getAll();\r\n        transaction.oncomplete = function (event) {            \r\n            if (selectAccounts.result.length === 0) {\r\n                var addAccountTransaction = db.transaction([\"account\"], \"readwrite\");\r\n                var accountStore1 = addAccountTransaction.objectStore(\"account\");\r\n                accountStore1.put({name: \"personal\"});\r\n            }\r\n        }\r\n        //----------------------------------------------------------------\r\n        //create default categories (food, transportation, clothing)\r\n        //----------------------------------------------------------------\r\n        var categoryTransaction = db.transaction([\"category\"], \"readonly\");\r\n        var categoryStore = categoryTransaction.objectStore(\"category\");\r\n        var selectCategories = categoryStore.getAll();\r\n        categoryTransaction.oncomplete = function (event) {\r\n            if (selectCategories.result.length === 0) {\r\n                var addCategoriesTransaction = db.transaction([\"category\"], \"readwrite\");\r\n                var addCategoryStore = addCategoriesTransaction.objectStore(\"category\");\r\n                addCategoryStore.put({name: \"food\"});\r\n                addCategoryStore.put({name: \"transportation\"});\r\n                addCategoryStore.put({name: \"clothing\"});\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":""}