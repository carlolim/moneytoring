{"version":3,"sources":["images/aplaya.png","images/thinking-meme.png","components/common/navigation-links.js","components/common/my-toolbar-with-navigation.js","helpers.js","components/dashboard/widgets/expense-summary.js","modules/budget-module.js","components/dashboard/widgets/budget-summary.js","components/dashboard/dashboard.js","components/common/filter.js","components/expense/expense.js","components/income/income.js","components/common/my-toolbar.js","components/expense/new-expense.js","components/expense/edit-expense.js","components/budget/budget.js","components/budget/edit-budget.js","components/budget/new-budget.js","components/settings/settings.js","components/account/account.js","components/category/category.js","components/expense-template/expense-template.js","components/expense-template/new-expense-template.js","components/expense-template/edit-expense-template.js","components/common/main.js","App.js","serviceWorker.js","index.js","database.js"],"names":["module","exports","__webpack_require__","p","styles","background","backgroundImage","concat","BackGround","height","backgroundSize","backgroundRepeat","appDetailsHolder","position","paddingLeft","appName","color","bottom","fontSize","email","drawer","width","navLink","textDecoration","NavigationLinks","react_default","a","createElement","className","this","props","classes","index_es","Link","to","Home_default","primary","MoneyOff_default","InsertDriveFile_default","ListAlt_default","Settings_default","Component","withStyles","root","flexGrow","paddingTop","grow","menuButton","marginLeft","marginRight","MyToolbarWithNavigation","state","isOpen","toggleDrawer","_this","setState","style","SwipeableDrawer_default","open","onClose","onOpen","disableBackdropTransition","tabIndex","role","onClick","onKeyDown","navigation_links","AppBar_default","Toolbar_default","IconButton_default","aria-label","Menu_default","Typography_default","variant","title","buttons","map","item","index","key","formatMoney","n","c","d","t","isNaN","Math","abs","undefined","s","i","String","parseInt","Number","toFixed","j","length","substr","replace","slice","selectById","table","id","Promise","resolve","reject","indexedDB","onsuccess","event","target","result","transaction","objectStore","get","selectAll","getAll","select","insert","data","done","tx","put","oncomplete","onerror","insertAsync","update","updateAsync","remove","delete","budgetRepeatEnum","none","daily","weekly","monthly","custom","filterTypes","ExpenseSummary","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getExpensesForCategory","items","categoryId","filter","m","subTotal","reduce","currValue","amount","filterType","from","moment","hours","minutes","seconds","filterDate","total","loadSummary","format","objectSpread","_this2","range","IDBKeyRange","bound","toDate","expenses","categories","selectall","openCursor","selectAllCategory","cursor","push","value","continue","categoryItemProperties","category","generateFilterDate","add","subtract","Card_default","card","CardHeader_default","action","Fragment","prev","bind","ArrowBackIos_default","next","ArrowForwardIos_default","subheader","Divider_default","CardContent_default","cardContent","name","float","expenseItem","light","nothingToDoHere","CardActions_default","cardFooter","component","minWidth","overflowY","textAlign","getExpensesOfBudgetLedger","ledger","accountIds","categoryIds","column","fromDate","startDate","endDate","store","shits","then","indexOf","console","log","accountId","validateBudget","budget","type","repeat","getBudgetRepeatTypeForMoment","startOf","noEndDate","endOf","find","toString","spent","BudgetSummary","progressBarClassName","percent","colorPrimary","progressGreen","barColorPrimary","progressBarGreen","progressYellow","progressBarYellow","progressRed","progressBarRed","gutterBottom","textCenter","lineHeight","floatRight","marginBottom","bullet","display","margin","transform","pos","backgroundColor","marginTop","Dashboard","showMenu","nonRepeating","expenseTemplates","toggleMenu","newExpense","history","loadBudgets","loadExpenseTemplates","showInDashboard","Date","_this3","paddingBottom","my_toolbar_with_navigation","padding","expense_summary","dashboard_RenderBudgetGroup","template","dashboard_RenderTemplate","keyIndex","templateClicked","expenseTemplateId","fabExpenseLabel","size","fabExpense","backdrop","fabPrimary","Close_default","Add_default","RenderBudgetGroup","budget_summary","RenderTemplate","fabTemplateLabel","templateName","fabTemplate","right","zIndex","borderRadius","divider","menuProps","PaperProps","maxHeight","Filter","changeViewType","e","viewType","changeStateValue","parentProperty","childProperty","defineProperty","handleApply","errors","yearly","selectedAccounts","selectedCategories","hasError","date","week","weekParts","split","weekNumber","year","month","monthParts","applyFilter","accounts","unshift","currentFilter","localStorage","getItem","JSON","parse","property","all","allFromState","shift","error","multiple","onChange","handleChangeProperty","input","renderValue","selected","join","MenuProps","account","checked","f","ref","label","close","Expense","toggleFilter","showFilter","loadExpenses","setItem","stringify","renderShits","navigate","FilterList_default","appBar","filterLabel","minHeight","expenseId","button","secondary","common_filter","Income","MyToolbar","showBackButton","onBack","ArrowBack_default","NewExpense","description","loadTemplate","templateId","match","params","parseFloat","success","_this4","my_toolbar","goBack","handleSave","Done_default","FormControl_default","InputLabel_default","Select_default","MenuItem_default","TextField_default","onBlur","formatCurrency","multiline","rows","EditExpense","loadExpense","handleDelete","toggleDeleteModal","showDelete","self","Delete_default","autoFocus","Budget","componentDidMount","changeDisplay","start","end","budgetId","budget_RenderItems","fab","RenderItems","align","borderColor","myClass","font","EditBudget","isActive","disabled","control","NewBudget","Settings","link","Account","new","showModal","edit","showEditModal","addButton","account_NewModal","changeValue","save","saveAdd","account_EditModal","saveEdit","account_DeleteModal","NewModal","EditModal","DeleteModal","Category","category_NewModal","category_EditModal","category_DeleteModal","ExpenseTemplate","templates","idForDelete","toggleDelete","src","ThinkingMeme","thinkingMeme","noContent","NewExpenseTemplate","EditExpenseTemplate","Main","Switch","Route","path","App","main","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","matchMedia","matches","createHashHistory","createBrowserHistory","request","onupgradeneeded","budgetTable","db","objectStoreNames","contains","createObjectStore","keyPath","autoIncrement","createIndex","unique","expenseTable","currentTarget","indexNames","selectAccounts","categoryTransaction","selectCategories","addCategoryStore","initialize","ReactDOM","render","Router","basename","process","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.29c7b88e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aplaya.a75f6366.png\";","module.exports = __webpack_public_path__ + \"static/media/thinking-meme.a19dae0e.png\";","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport { List, ListItem, ListItemIcon, ListItemText, Divider, Typography } from '@material-ui/core';\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\";\r\nimport ListAlt from \"@material-ui/icons/ListAlt\";\r\nimport Settings from \"@material-ui/icons/Settings\";\r\nimport File from \"@material-ui/icons/InsertDriveFile\";\r\nimport BackGround from \"../../images/aplaya.png\"\r\n\r\nconst styles = {\r\n  background: {\r\n    backgroundImage: `url(${BackGround})`,\r\n    height: 150,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat'\r\n  },\r\n  appDetailsHolder: {\r\n    position: 'relative',\r\n    paddingLeft: 15,\r\n    height: '100%'\r\n  },\r\n  appName: {\r\n    color: 'white',\r\n    position: 'absolute',\r\n    bottom: 24,\r\n    fontSize: 20\r\n  },\r\n  email: {\r\n    color: '#9e9e9e',\r\n    position: 'absolute',\r\n    bottom: 14,\r\n    fontSize: '0.8rem'\r\n  },\r\n  drawer: {\r\n    width: 250\r\n  },\r\n  navLink: {\r\n    textDecoration: 'none'\r\n  }\r\n}\r\n\r\nclass NavigationLinks extends Component {\r\n  render() {\r\n    return (\r\n      <div className={this.props.classes.drawer}>\r\n        <div className={this.props.classes.background}>\r\n          <div className={this.props.classes.appDetailsHolder}>\r\n            <Typography className={this.props.classes.appName}>moneytoring</Typography>\r\n            <Typography className={this.props.classes.email}>carlojameslim1@gmail.com</Typography>\r\n          </div>\r\n        </div>\r\n        <List>\r\n          <Link to='/' className={this.props.classes.navLink}>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <HomeIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Dashboard\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to='/expense' className={this.props.classes.navLink}>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <MoneyOffIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Expense\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to='/expensetemplates' className={this.props.classes.navLink}>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <File />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Expense templates\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Link to='/budget' className={this.props.classes.navLink}>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <ListAlt />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Budget\" />\r\n            </ListItem>\r\n          </Link>\r\n          <Divider />\r\n          <Link to='/settings' className={this.props.classes.navLink}>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <Settings />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Settings\" />\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nNavigationLinks.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(NavigationLinks);","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NavigationLinks from \"./navigation-links\";\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 56\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass MyToolbarWithNavigation extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  toggleDrawer = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div style={styles.root}>\r\n        <SwipeableDrawer\r\n          open={this.state.isOpen}\r\n          onClose={this.toggleDrawer}\r\n          onOpen={this.toggleDrawer}\r\n          disableBackdropTransition={true}>\r\n              <div\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                onClick={this.toggleDrawer}\r\n                onKeyDown={this.toggleDrawer}>\r\n                  <NavigationLinks />\r\n              </div>\r\n        </SwipeableDrawer>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton onClick={this.toggleDrawer} style={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\r\n                {this.props.title}\r\n            </Typography>\r\n            {this.props.buttons.map((item, index) => <span color=\"inherit\" key={index}>{item}</span>)}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyToolbarWithNavigation;","\r\nexport const formatMoney = (n, c, d, t) => {\r\n  var c = isNaN(c = Math.abs(c)) ? 2 : c,\r\n    d = d === undefined ? \".\" : d,\r\n    t = t === undefined ? \",\" : t,\r\n    s = n < 0 ? \"-\" : \"\",\r\n    i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),\r\n    j = (j = i.length) > 3 ? j % 3 : 0;\r\n\r\n  return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\");\r\n};\r\n\r\nexport const selectById = (table, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readonly\");\r\n      let store = tx.objectStore(table);\r\n      let result = store.get(id);\r\n      result.onsuccess = (event) => {\r\n        resolve(event.target.result);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const selectAll = (table) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readonly\");\r\n      let store = tx.objectStore(table);\r\n      let allItems = store.getAll();\r\n      allItems.onsuccess = (event) => {\r\n        resolve(event.target.result);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const select = (table, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readonly\");\r\n      let store = tx.objectStore(table);\r\n      let item = store.get(id);\r\n      item.onsuccess = (event) => {\r\n        resolve(event.target.result);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const selectAllWhereDateBetween = (table, column, fromDate, toDate) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readonly\");\r\n      var store = tx.objectStore(table);\r\n      let range = IDBKeyRange.bound(fromDate, toDate);\r\n      var selectall = store.index(column).openCursor(range, 'prev');\r\n      let shits = [];\r\n      selectall.onsuccess = (event) => {\r\n        var cursor = event.target.result;\r\n        if (cursor) {\r\n          shits.push(cursor.value);\r\n          cursor.continue();\r\n        }\r\n      }\r\n      tx.oncomplete = () => {\r\n        resolve(shits);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const insert = (table, data, done) => {\r\n  let db = indexedDB.open(\"Moneytoring\");\r\n  db.onsuccess = (event) => {\r\n    let tx = event.target.result.transaction([table], \"readwrite\");\r\n    let store = tx.objectStore(table);\r\n    store.put(data);\r\n    tx.oncomplete = (event) => {\r\n      done(true);\r\n    }\r\n    tx.onerror = (event) => {\r\n      done(false);\r\n    }\r\n  }\r\n}\r\n\r\nexport const insertAsync = (table, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readwrite\");\r\n      let store = tx.objectStore(table);\r\n      store.put(data);\r\n      tx.oncomplete = (event) => {\r\n        resolve(true);\r\n      }\r\n      tx.onerror = (event) => {\r\n        reject(false);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const update = (table, data, done) => {\r\n  let db = indexedDB.open(\"Moneytoring\");\r\n  db.onsuccess = (event) => {\r\n    let tx = event.target.result.transaction([table], \"readwrite\");\r\n    let store = tx.objectStore(table);\r\n    store.put(data);\r\n    tx.oncomplete = (event) => {\r\n      done(true);\r\n    }\r\n    tx.onerror = (event) => {\r\n      done(false);\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateAsync = (table, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readwrite\");\r\n      let store = tx.objectStore(table);\r\n      store.put(data);\r\n      tx.oncomplete = (event) => {\r\n        resolve(true);\r\n      }\r\n      tx.onerror = (event) => {\r\n        reject(false);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const remove = (table, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readwrite\");\r\n      let store = tx.objectStore(table);\r\n      store.delete(id);\r\n      tx.oncomplete = (event) => {\r\n        resolve(true);\r\n      }\r\n      tx.onerror = (event) => {\r\n        reject(false);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const budgetRepeatEnum = {\r\n  none: 0,\r\n  daily: 1,\r\n  weekly: 2,\r\n  monthly: 3,\r\n  custom: 4\r\n}\r\n","import React, {Component} from 'react';\r\nimport moment from \"moment\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\nimport { formatMoney } from \"../../../helpers\";\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  cardContent: {\r\n    height: 150,\r\n    overflowY: 'auto'\r\n  },\r\n  cardFooter: {\r\n    float: 'right'\r\n  },\r\n  expenseItem:{\r\n    marginLeft: 20\r\n  },\r\n  nothingToDoHere: {\r\n    paddingTop: 35,\r\n    textAlign: 'center'\r\n  }\r\n};\r\n\r\nconst filterTypes = {daily: 1, weekly: 2, monthly: 3}\r\n\r\nclass ExpenseSummary extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      filterType: filterTypes.daily,\r\n      from: moment().hours(0).minutes(0).seconds(0),\r\n      to: moment().hours(23).minutes(59).seconds(59),\r\n      filterDate: '',\r\n      data: [],\r\n      total: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.loadSummary();\r\n  }\r\n\r\n  generateFilterDate () {\r\n    let filterDate = this.state.from.format(\"MMM DD [(]ddd[)]\");\r\n    if (this.state.filterType !== filterTypes.daily) {\r\n      filterDate = this.state.from.format(\"MMM DD\") + ' - ' + this.state.to.format(\"MMM DD\");\r\n    }\r\n    this.setState({...this.state, filterDate});\r\n  }\r\n  \r\n  loadSummary () {\r\n    var range = IDBKeyRange.bound(this.state.from.toDate(), this.state.to.toDate());\r\n    let expenses = [];\r\n    let categories = [];\r\n    let total = 0;\r\n    let data = [];\r\n\r\n    const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n    requestDatabase.onsuccess = (event) => {\r\n        var db = event.target.result;\r\n        var transaction = db.transaction([\"expense\", \"category\"], \"readonly\");\r\n        var store = transaction.objectStore(\"expense\");\r\n        var selectall = store.index('date').openCursor(range, 'prev');\r\n        var selectAllCategory = transaction.objectStore(\"category\").getAll();\r\n        selectall.onsuccess = (event) => {\r\n            var cursor = event.target.result;\r\n            if(cursor) {\r\n                expenses.push(cursor.value);\r\n                total += cursor.value.amount;\r\n                cursor.continue();\r\n            }\r\n        }\r\n\r\n        selectAllCategory.onsuccess = (event) => {\r\n          categories = event.target.result;\r\n        }\r\n\r\n        transaction.oncomplete = () => {\r\n          for(var i=0; i<categories.length; i++){\r\n            let categoryItemProperties = this.getExpensesForCategory(expenses, categories[i].categoryId);\r\n            data.push({\r\n              category: categories[i],\r\n              subTotal: categoryItemProperties.subTotal,\r\n              items: categoryItemProperties.data\r\n            });\r\n          }\r\n          this.setState({...this.state, data, total});\r\n          this.generateFilterDate();\r\n        }\r\n    }\r\n  }\r\n\r\n  getExpensesForCategory = (items, categoryId) => {\r\n    let data = items.filter(m => { return m.categoryId === categoryId });\r\n    return { \r\n      data,\r\n      subTotal: data.reduce((currValue, i) => { return i.amount + currValue; }, 0)\r\n    };\r\n  }\r\n\r\n  changeFilterType () {\r\n\r\n  }\r\n\r\n  next () {\r\n    this.setState({...this.state, from: this.state.from.add(1, \"days\"), to: this.state.to.add(1, \"days\")});\r\n    this.loadSummary();\r\n  }\r\n\r\n  prev () {\r\n    this.setState({...this.state, from: this.state.from.subtract(1, \"days\"), to: this.state.to.subtract(1, \"days\")});\r\n    this.loadSummary();\r\n  }\r\n\r\n  render() {\r\n      const { classes } = this.props;\r\n      return (\r\n        <Card className={classes.card}>\r\n          <CardHeader\r\n            action={\r\n            <>\r\n              <IconButton onClick={this.prev.bind(this)}>\r\n                <ArrowBackIos />\r\n              </IconButton>\r\n              <IconButton onClick={this.next.bind(this)}>\r\n                <ArrowForwardIos />\r\n              </IconButton>\r\n            </>}\r\n            title=\"Expense\"\r\n            subheader={this.state.filterDate}\r\n          />\r\n          <Divider />\r\n          <CardContent className={classes.cardContent}>\r\n            {this.state.data.map((data, index) =>\r\n                data.items.length > 0 ?\r\n                    <div key={index}>\r\n                        <Typography variant=\"overline\">\r\n                            {data.category.name}\r\n                            <span style={{float: 'right'}}>{formatMoney(data.subTotal)}</span>\r\n                        </Typography>\r\n                        <div className={classes.expenseItem}>\r\n                          {data.items.map((item, i)=> \r\n                              <Typography key={i} variant=\"caption\">{item.title}<span style={{float: 'right'}}>{formatMoney(item.amount)}</span></Typography>\r\n                          )}\r\n                        </div>\r\n                        <Divider light />\r\n                    </div>\r\n                : null\r\n            )}\r\n            {this.state.total === 0 ? <Typography variant=\"body1\" className={classes.nothingToDoHere}>no expense yet, go buy something, enjoy your money!</Typography> : null}\r\n          </CardContent>\r\n          <Divider />\r\n          <CardActions className={classes.cardFooter}>\r\n            <Typography component=\"p\">{formatMoney(this.state.total)}</Typography>\r\n          </CardActions>\r\n        </Card>\r\n      );\r\n  }\r\n}\r\n\r\nExpenseSummary.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ExpenseSummary);","import { budgetRepeatEnum, selectAllWhereDateBetween } from \"../helpers\";\r\nimport moment from \"moment\";\r\n\r\nexport const getExpensesOfBudgetLedger = (ledger, accountIds, categoryIds) => {\r\n    return new Promise((resolve, reject) => {\r\n        selectAllWhereDateBetween(\"expense\", \"date\", ledger.startDate, ledger.endDate).then((expenses) => {\r\n            if (accountIds.indexOf(0) !== -1 && categoryIds.indexOf(0) !== -1) {\r\n                resolve(expenses);\r\n            }\r\n            else {\r\n                let result = [];\r\n                for (var i=0; i<expenses.length; i++) {\r\n                    console.log(expenses[i], categoryIds, accountIds);\r\n                    if ((categoryIds.indexOf(expenses[i].categoryId) !== -1 || categoryIds.indexOf(0) !== -1) && \r\n                    (accountIds.indexOf(expenses[i].accountId) !== -1 || accountIds.indexOf(0) !== -1)) {\r\n                        result.push(expenses[i]);\r\n                    }\r\n                }\r\n                resolve(result);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport const getBudgetRepeatTypeForMoment = (budget) => {\r\n    if (budget.repeat === budgetRepeatEnum.daily) return \"day\";\r\n    else if (budget.repeat === budgetRepeatEnum.weekly) return \"week\";\r\n    else if (budget.repeat === budgetRepeatEnum.monthly) return \"month\";\r\n    return undefined;\r\n}\r\n\r\nexport const validateBudget = (budget) => {\r\n    let type = getBudgetRepeatTypeForMoment(budget);\r\n    if (type) {\r\n        if (moment(budget.startDate).startOf(type).toDate() <= moment().startOf(type).toDate() &&\r\n            (budget.noEndDate || moment(budget.endDate).endOf(type).toDate() >= moment().endOf(type))) {\r\n            let ledger = budget.ledger.find(m => m.startDate.toString() === moment().startOf(type).toDate().toString() && m.endDate.toString() === moment().endOf(type).toDate().toString());\r\n            if (ledger === undefined || ledger === null) {\r\n                ledger = { startDate: moment().startOf(type).toDate(), endDate: moment().endOf(type).toDate(), spent: 0, amount: budget.amount };\r\n            }\r\n            return ledger;\r\n        }\r\n    }\r\n    return null;\r\n}","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport { formatMoney } from \"../../../helpers\";\r\nimport { Typography, Card, CardContent, LinearProgress } from \"@material-ui/core\";\r\nimport { getExpensesOfBudgetLedger } from \"../../../modules/budget-module\";\r\n\r\nconst styles = {\r\n    card: {\r\n        minWidth: 275,\r\n        marginBottom: 10\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    progressGreen: {\r\n        backgroundColor: '#b2dfdb'\r\n    },\r\n    progressBarGreen: {\r\n        backgroundColor: '#00695c'\r\n    },\r\n    progressYellow: {\r\n        backgroundColor: '#eaec60'\r\n    },\r\n    progressBarYellow: {\r\n        backgroundColor: '#bfc11d'\r\n    },\r\n    progressRed: {\r\n        backgroundColor: '#ec8686'\r\n    },\r\n    progressBarRed: {\r\n        backgroundColor: '#de0b0b'\r\n    },\r\n    lineHeight: {\r\n        lineHeight: 1,\r\n        marginTop: 5,\r\n        display: 'inline-block'\r\n    },\r\n    floatRight: {\r\n        float: 'right',\r\n        textAlign: 'right'\r\n    },\r\n    textCenter: {\r\n        textAlign: 'center'\r\n    }\r\n}\r\n\r\n\r\nclass BudgetSummary extends Component {\r\n    state = {\r\n        spent: 0\r\n    };\r\n    componentDidMount () {\r\n        getExpensesOfBudgetLedger(this.props.budget.ledger[0], this.props.budget.accountIds, this.props.budget.categoryIds).then((expenses) => {\r\n            if (expenses.length > 0) {\r\n                let spent = 0;\r\n                for (var i =0; i<expenses.length; i++) {\r\n                    spent += expenses[i].amount;\r\n                }\r\n                this.setState({...this.state, spent});\r\n            }\r\n        });\r\n    }\r\n\r\n    progressBarClassName = (percent) => {\r\n        let result = {\r\n            colorPrimary: this.props.classes.progressGreen,\r\n            barColorPrimary: this.props.classes.progressBarGreen\r\n        }\r\n        if (percent > 50 && percent <= 75) {\r\n            result.colorPrimary = this.props.classes.progressYellow;\r\n            result.barColorPrimary = this.props.classes.progressBarYellow;\r\n        }\r\n        else if (percent > 75) {\r\n            result.colorPrimary = this.props.classes.progressRed;\r\n            result.barColorPrimary = this.props.classes.progressBarRed;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className={this.props.classes.card}>\r\n                <CardContent>\r\n                    <Typography className={this.props.classes.title} variant=\"title\" color=\"textPrimary\" gutterBottom>{this.props.budget.name}</Typography>\r\n                    <Typography variant=\"overline\" className={this.props.classes.textCenter}>Total: {formatMoney(this.props.budget.amount)}</Typography>\r\n                    <LinearProgress\r\n                        variant=\"determinate\" value={(this.state.spent / this.props.budget.amount) * 100}\r\n                        classes={this.progressBarClassName((this.state.spent / this.props.budget.amount) * 100)}\r\n                    />\r\n                    <div>\r\n                        <Typography variant=\"caption\" className={this.props.classes.lineHeight}>Spent<br />{formatMoney(this.state.spent)}</Typography>\r\n                        <Typography variant=\"caption\" className={`${this.props.classes.lineHeight} ${this.props.classes.floatRight}`}>Remaining<br />{formatMoney(this.props.budget.amount - this.state.spent)}</Typography>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nBudgetSummary.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(BudgetSummary);","import React, { Component } from 'react';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport { Typography, Fab, Backdrop } from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\";\r\nimport ExpenseSummary from \"./widgets/expense-summary\";\r\nimport BudgetSummary from \"./widgets/budget-summary\";\r\nimport { selectAll, budgetRepeatEnum } from \"../../helpers\";\r\nimport { validateBudget } from \"../../modules/budget-module\";\r\nimport File from \"@material-ui/icons/InsertDriveFile\";\r\n\r\n\r\nconst styles = {\r\n  fabPrimary: {\r\n    position: 'fixed', bottom: 15, right: 15, zIndex: 2\r\n  },\r\n  fabExpense: {\r\n    position: 'fixed', bottom: 90, right: 23, zIndex: 2\r\n  },\r\n  fabExpenseLabel: {\r\n    position: 'fixed',\r\n    zIndex: 2,\r\n    bottom: 98,\r\n    color: 'white',\r\n    backgroundColor: 'black',\r\n    right: 70,\r\n    padding: '3px 10px',\r\n    borderRadius: 5,\r\n  },\r\n  fabTemplate: {\r\n    position: 'fixed', right: 23, zIndex: 2\r\n  },\r\n  fabTemplateLabel: {\r\n    position: 'fixed',\r\n    zIndex: 2,\r\n    color: 'white',\r\n    backgroundColor: 'black',\r\n    right: 70,\r\n    padding: '3px 10px',\r\n    borderRadius: 5,\r\n  },\r\n  backdrop: {\r\n    zIndex: 1\r\n  },\r\n  divider: {\r\n    marginBottom: 20\r\n  }\r\n}\r\n\r\nclass Dashboard extends Component {\r\n  state = {\r\n    showMenu: false, daily: [], weekly: [], monthly: [], nonRepeating: [],\r\n    expenseTemplates: []\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadBudgets();\r\n    this.loadExpenseTemplates();\r\n  }\r\n\r\n  loadBudgets() {\r\n    selectAll(\"budget\").then((items) => {\r\n      let daily = [];\r\n      let weekly = [];\r\n      let monthly = [];\r\n      let nonRepeating = [];\r\n      for (var i = 0; i < items.length; i++) {\r\n        let budget = items[i];\r\n        if (budget.showInDashboard) {\r\n          if (budget.repeat) {\r\n            let ledger = validateBudget(budget);\r\n            if (ledger != null) {\r\n              budget.ledger = [ledger];\r\n              if (budget.repeat === budgetRepeatEnum.daily) daily.push(budget);\r\n              else if (budget.repeat === budgetRepeatEnum.weekly) weekly.push(budget);\r\n              else if (budget.repeat === budgetRepeatEnum.monthly) monthly.push(budget);\r\n            }\r\n          }\r\n          else {\r\n            budget.ledger[0].endDate = budget.noEndDate ? new Date() : budget.ledger[0].endDate;\r\n            nonRepeating.push(budget);\r\n          }\r\n        }\r\n      }\r\n      this.setState({ ...this.state, daily, weekly, monthly, nonRepeating });\r\n    });\r\n  }\r\n\r\n  async loadExpenseTemplates() {\r\n    var expenseTemplates = await selectAll(\"expenseTemplate\");\r\n    this.setState({...this.state, expenseTemplates});\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    this.setState({ ...this.state, showMenu: !this.state.showMenu });\r\n  }\r\n\r\n  newExpense = (id) => {\r\n    if (id === null) {\r\n      this.props.history.push('/expense/new');\r\n    }\r\n    else {\r\n      this.props.history.push(`/expense/new/${id}`);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{paddingBottom: '50px'}}>\r\n        <MyToolbarWithNavigation title=\"moneytoring\" buttons={[]} />\r\n        <div style={{ padding: '10px' }}>\r\n          <ExpenseSummary />\r\n        </div>\r\n        <div style={{ padding: '10px' }}>\r\n          <RenderBudgetGroup items={this.state.nonRepeating} />\r\n          <RenderBudgetGroup items={this.state.daily} />\r\n          <RenderBudgetGroup items={this.state.weekly} />\r\n          <RenderBudgetGroup items={this.state.monthly} />\r\n        </div>\r\n        {this.state.showMenu ?\r\n          <>\r\n            {this.state.expenseTemplates.map((template, index) => \r\n              <RenderTemplate key={index} keyIndex={Number(index)} data={template} classes={this.props.classes} templateClicked={this.newExpense.bind(this, template.expenseTemplateId)} />\r\n            )}\r\n            <Typography component=\"p\" className={this.props.classes.fabExpenseLabel}>new expense</Typography>\r\n            <Fab onClick={this.newExpense.bind(this, null)} color=\"secondary\" size=\"small\" aria-label=\"expense\" className={this.props.classes.fabExpense}>\r\n              <MoneyOffIcon />\r\n            </Fab>\r\n            <Backdrop onClick={this.toggleMenu} open={true} className={this.props.classes.backdrop} />\r\n          </>\r\n          : null}\r\n        <Fab onClick={this.toggleMenu} color=\"primary\" aria-label=\"Add\" className={this.props.classes.fabPrimary}>\r\n          {this.state.showMenu ? <CloseIcon /> : <AddIcon />}\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst RenderBudgetGroup = (props) => (\r\n  <>\r\n    {props.items.length > 0 ?\r\n      <>\r\n        {props.items.map((item, i) =>\r\n            <BudgetSummary key={i} budget={item} />\r\n        )}\r\n      </>\r\n      : null}\r\n  </>\r\n)\r\n\r\nconst RenderTemplate = (props) => (\r\n  <>\r\n    <Typography component=\"p\" style={{bottom: `${((props.keyIndex+1)*55)+90}px`}} className={props.classes.fabTemplateLabel}>{props.data.templateName}</Typography>\r\n    <Fab onClick={props.templateClicked} style={{bottom: `${((props.keyIndex+1)*50)+90}px`}} color=\"default\" size=\"small\" aria-label=\"expense\" className={props.classes.fabTemplate}>\r\n      <File />\r\n    </Fab>\r\n  </>\r\n)\r\n\r\nDashboard.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Dashboard);","import React, { Component } from 'react';\r\nimport moment from \"moment\";\r\nimport {\r\n    withStyles, Button, DialogActions,\r\n    DialogContent, DialogTitle, FormControl,\r\n    InputLabel, Select, MenuItem, TextField,\r\n    Input, Checkbox, ListItemText\r\n} from \"@material-ui/core\";\r\nimport PropTypes from 'prop-types';\r\nimport { selectAll } from '../../helpers';\r\n\r\nconst styles = {\r\n    menuProps: {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: 48 * 4.5 + 8,\r\n                width: 250,\r\n            },\r\n        },\r\n    }\r\n}\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            viewType: 'daily',\r\n            daily: {\r\n                date: moment().format('YYYY-MM-DD')\r\n            },\r\n            weekly: {\r\n                week: ''\r\n            },\r\n            monthly: {\r\n                month: ''\r\n            },\r\n            yearly: {\r\n                year: ''\r\n            },\r\n            custom: {\r\n                from: '',\r\n                to: ''\r\n            },\r\n            accounts: [],\r\n            selectedAccounts: [],\r\n            categories: [],\r\n            selectedCategories: [],\r\n            errors: {\r\n                daily: false,\r\n                weekly: false,\r\n                monthly: false,\r\n                yearly: false,\r\n                from: false,\r\n                to: false,\r\n                selectedAccounts: false,\r\n                selectedCategories: false\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let accounts = await selectAll(\"account\");\r\n        let categories = await selectAll(\"category\");\r\n        accounts.unshift({ accountId: 0, name: \"All\" })\r\n        categories.unshift({ categoryId: 0, name: \"All\" })\r\n        this.setState({ ...this.state, accounts, categories });\r\n\r\n        let currentFilter = localStorage.getItem(\"expensefilter\");\r\n        if (currentFilter !== null && currentFilter !== undefined) {\r\n            currentFilter = JSON.parse(currentFilter);\r\n            if (currentFilter.selectedAccounts !== undefined && currentFilter.selectedCategories !== undefined) {\r\n                if (currentFilter.selectedAccounts[0].accountId === 0) {\r\n                    this.setState({...this.state, selectedAccounts: accounts});\r\n                }\r\n                else {\r\n                    this.setState({ ...this.state, \r\n                        selectedAccounts: currentFilter.selectedAccounts.map(a => accounts.find(m => { return m.accountId === a.accountId }))\r\n                    });\r\n                }\r\n\r\n                if (currentFilter.selectedCategories[0].categoryId === 0) {\r\n                    this.setState({...this.state, selectedCategories: categories});\r\n                }\r\n                else {\r\n                    this.setState({ ...this.state, \r\n                        selectedCategories: currentFilter.selectedCategories.map(c => categories.find(m => { return m.categoryId === c.categoryId }))\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    changeViewType = (e) => {\r\n        this.setState({ ...this.state, viewType: e.target.value });\r\n    }\r\n\r\n    changeStateValue = (parentProperty, childProperty, e) => {\r\n        this.setState({ ...this.state, [parentProperty]: { ...this.state[parentProperty], [childProperty]: e.target.value } });\r\n    }\r\n\r\n    handleApply = () => {\r\n        let startDate = new Date();\r\n        let endDate = new Date();\r\n        let errors = {\r\n            daily: false,\r\n            weekly: false,\r\n            monthly: false,\r\n            yearly: false,\r\n            from: false,\r\n            to: false,\r\n            selectedAccounts: false,\r\n            selectedCategories: false\r\n        };\r\n        let hasError = false;\r\n        switch (this.state.viewType) {\r\n            case 'daily':\r\n                if (this.state.daily.date === '') {\r\n                    hasError = true;\r\n                    errors.daily = true;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.daily.date).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.daily.date).hours(23).minutes(59).seconds(59);\r\n                }\r\n                break;\r\n            case 'weekly':\r\n                if (this.state.weekly.week === '') {\r\n                    hasError = true;\r\n                    errors.weekly = true;\r\n                }\r\n                else {\r\n                    let weekParts = this.state.weekly.week.split('-');\r\n                    let weekNumber = Number(weekParts[1].replace('W', ''));\r\n                    startDate = moment().year(Number(weekParts[0])).week(weekNumber).startOf('week');\r\n                    endDate = moment().year(Number(weekParts[0])).week(weekNumber).endOf('week');\r\n                }\r\n                break;\r\n            case 'monthly':\r\n                if (this.state.monthly.month === '') {\r\n                    hasError = true;\r\n                    errors.monthly = true;\r\n                }\r\n                else {\r\n                    let monthParts = this.state.monthly.month.split('-');\r\n                    startDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).startOf('month');\r\n                    endDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).endOf('month');\r\n                }\r\n                break;\r\n            case 'yearly':\r\n                if (this.state.yearly.year === '' || isNaN(this.state.yearly.year)) {\r\n                    hasError = true;\r\n                    errors.yearly = true;\r\n                }\r\n                else {\r\n                    let year = Number(this.state.yearly.year);\r\n                    startDate = moment().year(year).startOf('year');\r\n                    endDate = moment().year(year).endOf('year');\r\n                }\r\n                break;\r\n            default: //custom range\r\n                if (this.state.custom.from === '') {\r\n                    hasError = true;\r\n                    errors.from = true;\r\n                }\r\n                else if (this.state.custom.to === '') {\r\n                    hasError = true;\r\n                    errors.to = true;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.custom.from).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.custom.to).hours(23).minutes(59).seconds(59);\r\n                }\r\n        }\r\n        \r\n        if (this.state.selectedAccounts.length === 0){\r\n            errors.selectedAccounts = true;\r\n            hasError = true;\r\n        }\r\n        if (this.state.selectedCategories.length === 0) {\r\n            errors.selectedCategories = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            this.props.applyFilter(startDate, endDate, this.state.viewType, this.state.selectedAccounts, this.state.selectedCategories);\r\n        }\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        \r\n        if (property === \"selectedAccounts\") {\r\n            let all = value.find(m => m.accountId === 0);\r\n            let allFromState = this.state.selectedAccounts.find(m => m.accountId === 0);\r\n            if (all !== null && all !== undefined && allFromState !== null && allFromState !== undefined) {\r\n                value.shift();\r\n            }\r\n            else if (all !== null && all !== undefined) {\r\n                value = this.state.accounts;\r\n            }\r\n        }\r\n        else if (property === \"selectedCategories\") {\r\n            let all = value.find(m => m.categoryId === 0);\r\n            let allFromState = this.state.selectedCategories.find(m => m.categoryId === 0);\r\n            if (all !== null && all !== undefined && allFromState !== null && allFromState !== undefined) {\r\n                value.shift();\r\n            }\r\n            else if (all !== null && all !== undefined) {\r\n                value = this.state.categories;\r\n            }\r\n        }\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <DialogTitle>Filter expense</DialogTitle>\r\n                <DialogContent>\r\n\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Accounts</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedAccounts}\r\n                            multiple\r\n                            value={this.state.selectedAccounts}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedAccounts')}\r\n                            input={<Input id=\"select-multiple-checkbox1\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.accounts.map((account, index) => (\r\n                                <MenuItem key={index} value={account}>\r\n                                    <Checkbox checked={this.state.selectedAccounts.map(f => { return f.accountId }).indexOf(account.accountId) > -1} />\r\n                                    <ListItemText primary={account.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Categories</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedCategories}\r\n                            multiple\r\n                            value={this.state.selectedCategories}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedCategories')}\r\n                            input={<Input id=\"select-multiple-checkbox2\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.categories.map((category, index) => (\r\n                                <MenuItem key={index} value={category}>\r\n                                    <Checkbox checked={this.state.selectedCategories.map(f => { return f.categoryId }).indexOf(category.categoryId) > -1} />\r\n                                    <ListItemText primary={category.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>View</InputLabel>\r\n                        <Select\r\n                            value={this.state.viewType} onChange={this.changeViewType.bind(this)}>\r\n                            <MenuItem value=\"daily\"><em>Daily</em></MenuItem>\r\n                            <MenuItem value=\"weekly\"><em>Weekly</em></MenuItem>\r\n                            <MenuItem value=\"monthly\"><em>Monthly</em></MenuItem>\r\n                            <MenuItem value=\"yearly\"><em>Yearly</em></MenuItem>\r\n                            <MenuItem value=\"custom\"><em>Custom</em></MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    {this.state.viewType === 'daily' ?\r\n                        <TextField\r\n                            error={this.state.errors.daily}\r\n                            ref=\"title\"\r\n                            label=\"Date\"\r\n                            value={this.state.daily.date}\r\n                            onChange={this.changeStateValue.bind(this, 'daily', 'date')}\r\n                            margin=\"normal\"\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                        />\r\n                        : null}\r\n                    {this.state.viewType === 'weekly' ?\r\n                        <TextField\r\n                            error={this.state.errors.weekly}\r\n                            ref=\"title\"\r\n                            label=\"Week\"\r\n                            value={this.state.weekly.week}\r\n                            onChange={this.changeStateValue.bind(this, 'weekly', 'week')}\r\n                            margin=\"normal\"\r\n                            type=\"week\"\r\n                            className=\"form-control\"\r\n                        />\r\n                        : null}\r\n                    {this.state.viewType === 'monthly' ?\r\n                        <TextField\r\n                            error={this.state.errors.monthly}\r\n                            ref=\"title\"\r\n                            label=\"Month\"\r\n                            value={this.state.monthly.month}\r\n                            onChange={this.changeStateValue.bind(this, 'monthly', 'month')}\r\n                            margin=\"normal\"\r\n                            type=\"month\"\r\n                            className=\"form-control\"\r\n                        />\r\n                        : null}\r\n                    {this.state.viewType === 'yearly' ?\r\n                        <TextField\r\n                            error={this.state.errors.yearly}\r\n                            ref=\"title\"\r\n                            label=\"Year\"\r\n                            value={this.state.yearly.year}\r\n                            onChange={this.changeStateValue.bind(this, 'yearly', 'year')}\r\n                            margin=\"normal\"\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                        />\r\n                        : null}\r\n                    {this.state.viewType === 'custom' ?\r\n                        <>\r\n                            <TextField\r\n                                error={this.state.errors.from}\r\n                                ref=\"title\"\r\n                                label=\"From\"\r\n                                value={this.state.custom.from}\r\n                                onChange={this.changeStateValue.bind(this, 'custom', 'from')}\r\n                                margin=\"normal\"\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                            />\r\n                            <TextField\r\n                                error={this.state.errors.to}\r\n                                ref=\"title\"\r\n                                label=\"To\"\r\n                                value={this.state.custom.to}\r\n                                onChange={this.changeStateValue.bind(this, 'custom', 'to')}\r\n                                margin=\"normal\"\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </>\r\n                        : null}\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.close} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={this.handleApply.bind(this)} color=\"primary\">Apply</Button>\r\n                </DialogActions>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nFilter.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Filter);","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport './expense.css';\r\nimport Filter from \"../common/filter\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport {\r\n  IconButton,\r\n  Dialog,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Fab,\r\n  AppBar,\r\n  Toolbar,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = {\r\n  appBar: {\r\n      position: 'fixed',\r\n      marginTop: 56,\r\n      zIndex: 1\r\n  },\r\n  filterLabel:{\r\n    flexGrow: 1,\r\n    textAlign: 'center'\r\n  }\r\n}\r\n\r\nclass Expense extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let filter = localStorage.getItem('expensefilter');\r\n    if (filter !== null) {\r\n      filter = JSON.parse(filter);\r\n      filter.from = moment(filter.from);\r\n      filter.to = moment(filter.to);\r\n    }\r\n    else {\r\n      filter = {\r\n        viewType: 'daily',\r\n        from: moment().hours(0).minutes(0).seconds(0),\r\n        to: moment().hours(23).minutes(59).seconds(59)\r\n      }\r\n    }\r\n\r\n    if (filter.selectedAccounts === undefined) {\r\n      filter.selectedAccounts= [{accountId: 0, name: \"All\"}];\r\n      filter.selectedCategories= [{categoryId: 0, name: \"All\"}];\r\n    }\r\n    this.state = {\r\n      currentFilter: '',\r\n      total: 0,\r\n      expenses: [],\r\n      showFilter: false,\r\n      filter\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadExpenses(this.state.filter.from, this.state.filter.to, this.state.filter.viewType, this.state.filter.selectedAccounts, this.state.filter.selectedCategories);\r\n  }\r\n\r\n  toggleFilter = () => {\r\n    this.setState({ ...this.state, showFilter: !this.state.showFilter });\r\n  }\r\n\r\n  loadExpenses = (from, to, viewType, selectedAccounts, selectedCategories) => {\r\n    let filter = { from, to, viewType, selectedAccounts, selectedCategories};\r\n    selectedAccounts = selectedAccounts.map(m => {return m.accountId});\r\n    selectedCategories = selectedCategories.map(m => {return m.categoryId});\r\n    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n    if (from.month() === to.month() && from.date() === to.date() && from.year() === to.year()) {\r\n      this.setState({ ...this.state, expenses: [], currentFilter: from.format('MMM DD'), total: 0, filter });\r\n    }\r\n    else {\r\n      this.setState({ ...this.state, expenses: [], currentFilter: from.format('MMM DD') + ' - ' + to.format('MMM DD'), total: 0, filter });\r\n    }\r\n\r\n    var range = null;\r\n    if (from && to) {\r\n      range = IDBKeyRange.bound(from.toDate(), to.toDate());\r\n    }\r\n    const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n    requestDatabase.onsuccess = (event) => {\r\n      var db = event.target.result;\r\n      var transaction = db.transaction([\"expense\"], \"readonly\");\r\n      var store = transaction.objectStore(\"expense\");\r\n      var selectall = range === null ? store.index('date').openCursor(null, 'prev') : store.index('date').openCursor(range, 'prev');\r\n      this.setState({ ...this.state, showFilter: false });\r\n      let shits = [];\r\n      let total = 0;\r\n      selectall.onsuccess = (event) => {\r\n        var cursor = event.target.result;\r\n        if (cursor) {\r\n          if ((selectedAccounts.indexOf(0) !== -1 || selectedAccounts.indexOf(cursor.value.accountId) !== -1) &&\r\n              (selectedCategories.indexOf(0) !== -1 || selectedCategories.indexOf(cursor.value.categoryId) !== -1)) {\r\n                shits.push(cursor.value);\r\n                total += cursor.value.amount;\r\n          }\r\n          cursor.continue();\r\n        }\r\n      }\r\n      transaction.oncomplete = () => {\r\n        this.renderShits(shits, total);\r\n      }\r\n    }\r\n  }\r\n\r\n  renderShits = (shits, total) => {\r\n    this.setState({ ...this.state, expenses: shits, total });\r\n  }\r\n\r\n  navigate = (type) => {\r\n    let filterType = \"days\";\r\n    filterType = this.state.filter.viewType === \"weekly\" ? \"weeks\" : filterType;\r\n    filterType = this.state.filter.viewType === \"monthly\" ? \"months\" : filterType;\r\n    filterType = this.state.filter.viewType === \"yearly\" ? \"years\" : filterType;\r\n    let from, to;\r\n    if (type === \"prev\") {\r\n      from = this.state.filter.from.subtract(1, filterType);\r\n      to = this.state.filter.to.subtract(1, filterType);\r\n    }\r\n    else {\r\n      from = this.state.filter.from.add(1, filterType);\r\n      to = this.state.filter.to.add(1, filterType);\r\n    }\r\n\r\n    if (filterType === \"months\") {\r\n      to.endOf(\"month\");\r\n    }\r\n    this.setState({ ...this.state, filter: { ...this.state.filter, from: from, to: to } });\r\n    this.loadExpenses(from, to, this.state.filter.viewType, this.state.filter.selectedAccounts, this.state.filter.selectedCategories);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyToolbarWithNavigation title=\"Expense\" buttons={[\r\n          <IconButton onClick={this.toggleFilter} color=\"inherit\" aria-label=\"Menu\">\r\n            <FilterList />\r\n          </IconButton>\r\n        ]} />\r\n        <AppBar className={this.props.classes.appBar} color=\"default\">\r\n          <Toolbar>\r\n            {this.state.filter.viewType !== \"custom\" ?\r\n              <IconButton onClick={this.navigate.bind(this, 'prev')}>\r\n                <ArrowBackIos />\r\n              </IconButton>\r\n              : null}\r\n            <Typography component=\"p\" className={this.props.classes.filterLabel}>\r\n              {this.state.currentFilter}<br /><small>{formatMoney(this.state.total)}</small>\r\n            </Typography>\r\n            {this.state.filter.viewType !== \"custom\" ?\r\n              <IconButton onClick={this.navigate.bind(this, 'next')}>\r\n                <ArrowForwardIos />\r\n              </IconButton>\r\n              : null}\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <div style={{ marginTop: '56px', overflowY: 'auto', minHeight: '100%' }}>\r\n          <List component=\"nav\">\r\n            {this.state.expenses.map(item =>\r\n              <Link key={item.expenseId} style={{ textDecoration: 'none' }} className=\"list-item\" to={'/expense/edit/' + item.expenseId}>\r\n                <ListItem button>\r\n                  <ListItemText primary={item.title} secondary={moment(item.date).format('MMM DD hh:mma (ddd)')} />\r\n                  <Typography className=\"float-right\">{formatMoney(item.amount)}</Typography >\r\n                </ListItem>\r\n                <Divider light />\r\n              </Link>\r\n            )}\r\n          </List>\r\n        </div>\r\n\r\n        <Dialog\r\n          onClose={this.toggleFilter}\r\n          open={this.state.showFilter}>\r\n          <Filter close={this.toggleFilter.bind(this)} applyFilter={this.loadExpenses.bind(this)} />\r\n        </Dialog>\r\n\r\n        <Fab onClick={() => { this.props.history.push(\"/expense/new\") }} color=\"primary\" aria-label=\"Add\" style={{ position: 'fixed', bottom: '15px', right: '15px' }}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExpense.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Expense);","import React, { Component } from 'react';\r\n\r\nclass Income extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n            <h1>Income index</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Income;\r\n  ","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 56\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass MyToolbar extends Component {\r\n  render(){\r\n    return (\r\n      <div style={styles.root}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            {this.props.showBackButton ? \r\n              <IconButton onClick={this.props.onBack} style={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <ArrowBack />\r\n              </IconButton>\r\n            : null}\r\n            <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\r\n              {this.props.title}\r\n            </Typography>\r\n            {this.props.buttons.map((item, index) => <span key={index}>{item}</span>)}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyToolbar;","import React, { Component } from 'react';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney, selectById } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Done from '@material-ui/icons/Done';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { selectAll, insert } from \"../../helpers\";\r\n\r\n\r\nclass NewExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 1,\r\n            description: '',\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            accounts: [],\r\n            categories: [],\r\n            errors: {\r\n                title: false,\r\n                category: false,\r\n                amount: false,\r\n                account: false,\r\n                date: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        selectAll(\"account\").then((accounts) => {\r\n            this.setState({ ...this.state, accounts });\r\n        });\r\n        selectAll(\"category\").then((categories) => {\r\n            this.setState({ ...this.state, categories });\r\n        });\r\n        this.loadTemplate();\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    async loadTemplate() {\r\n        let templateId = this.props.match.params.templateId;\r\n        if (templateId) {\r\n            var template = await selectById(\"expenseTemplate\", Number(templateId));\r\n            this.setState({...this.state, ...template, amount: template.amount.toString()});\r\n        }\r\n    }\r\n\r\n    handleSave() {\r\n        var data = {\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n\r\n        let hasError = false;\r\n        let errors = {\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false,\r\n            date: false\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.date || this.state.date === '') {\r\n            errors.date = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            insert(\"expense\", data, (success) => {\r\n                if (success) {\r\n                    let filter = {\r\n                        from: moment(data.date).hours(0).minutes(0).seconds(0),\r\n                        to: moment(data.date).hours(0).hours(23).minutes(59).seconds(59),\r\n                        viewType: 'daily'\r\n                    };\r\n                    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n                    this.props.history.push(\"/expense\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add expense\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Done /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Account</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.account}\r\n                            value={this.state.accountId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.title}\r\n                        label=\"Title\"\r\n                        value={this.state.title}\r\n                        onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.category}\r\n                            value={this.state.categoryId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.date}\r\n                        label=\"Date\"\r\n                        type=\"datetime-local\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleChangeProperty.bind(this, 'date')}\r\n                    />\r\n                    <TextField\r\n                        className=\"form-control\"\r\n                        label=\"Notes\"\r\n                        multiline\r\n                        rows=\"6\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewExpense;\r\n","import React, { Component } from 'react';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Done from '@material-ui/icons/Done';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { selectAll, update } from \"../../helpers\";\r\nimport { DialogTitle, Dialog, Button, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\n\r\nclass EditExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDelete: false,\r\n            expenseId: Number(this.props.match.params.id),\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 0,\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            description: '',\r\n            accounts: [],\r\n            categories: [],\r\n            errors: {\r\n                title: false,\r\n                category: false,\r\n                amount: false,\r\n                account: false,\r\n                date: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        selectAll(\"account\").then((accounts) => {\r\n            this.setState({ ...this.state, accounts });\r\n        });\r\n        selectAll(\"category\").then((categories) => {\r\n            this.setState({ ...this.state, categories });\r\n        });\r\n        this.loadExpense(this.state.expenseId, this);\r\n    }\r\n\r\n    loadExpense = (id, component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"expense\"], \"readonly\");\r\n\r\n            var store = transaction.objectStore(\"expense\");\r\n            var select = store.get(id);\r\n\r\n            transaction.oncomplete = (event) => {\r\n                if (!select.result) {\r\n                    this.props.history.push(\"/expense\");\r\n                    return;\r\n                }\r\n                component.setState({\r\n                    ...component.state,\r\n                    title: select.result.title,\r\n                    categoryId: select.result.categoryId,\r\n                    amount: formatMoney(select.result.amount),\r\n                    accountId: select.result.accountId,\r\n                    description: select.result.description,\r\n                    date: moment(select.result.date).format('YYYY-MM-DD[T]HH:mm')\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    handleSave() {\r\n        var self = this;\r\n        var data = {\r\n            expenseId: this.state.expenseId,\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n\r\n        let hasError = false;\r\n        let errors = {\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false,\r\n            date: false\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.date || this.state.date === '') {\r\n            errors.date = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            update(\"expense\", data, (success) => {\r\n                if (success) {\r\n                    let filter = {\r\n                        from: moment(data.date).hours(0).minutes(0).seconds(0),\r\n                        to: moment(data.date).hours(0).hours(23).minutes(59).seconds(59),\r\n                        viewType: 'daily'\r\n                    };\r\n                    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n                    self.props.history.push(\"/expense\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDelete = () => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction(\"expense\", \"readwrite\");\r\n            var store = transaction.objectStore(\"expense\");\r\n            store.delete(this.state.expenseId);\r\n            transaction.oncomplete = (event) => {\r\n                this.props.history.push(\"/expense\");\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleDeleteModal = () => {\r\n        this.setState({ ...this.state, showDelete: !this.state.showDelete });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add expense\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.toggleDeleteModal.bind(this)} color=\"inherit\"><Delete /></IconButton>),\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Done /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Account</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.account}\r\n                            value={this.state.accountId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.title}\r\n                        label=\"Title\"\r\n                        value={this.state.title}\r\n                        onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.category}\r\n                            value={this.state.categoryId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.date}\r\n                        label=\"Date\"\r\n                        type=\"datetime-local\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleChangeProperty.bind(this, 'date')}\r\n                    />\r\n                    <TextField\r\n                        className=\"form-control\"\r\n                        label=\"Notes\"\r\n                        multiline\r\n                        rows=\"6\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                        margin=\"normal\"\r\n                    />\r\n\r\n                    <Dialog\r\n                        onClose={this.toggleDeleteModal}\r\n                        open={this.state.showDelete}>\r\n                        <DialogTitle>Confirm</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>Are you sure you want to delete?</DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.toggleDeleteModal} color=\"primary\" autoFocus>Cancel</Button>\r\n                            <Button onClick={this.handleDelete} color=\"secondary\">Delete</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditExpense;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport { Typography, Fab, Select, MenuItem, Divider } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { selectAll } from \"../../helpers\";\r\nimport { budgetRepeatEnum } from \"../../helpers\";\r\nimport { validateBudget } from \"../../modules/budget-module\";\r\nimport BudgetSummary from \"../dashboard/widgets/budget-summary\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst styles = {\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: 15,\r\n        right: 15\r\n    },\r\n    filter: {\r\n        color: '#fff',\r\n        borderColor: '#fff'\r\n    },\r\n    divider: {\r\n        marginBottom: 20\r\n    }\r\n}\r\n\r\nclass Budget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nonRepeating: {\r\n                items: []\r\n            },\r\n            weekly: {\r\n                start: moment().startOf(\"week\"),\r\n                end: moment().endOf(\"week\"),\r\n                items: []\r\n            },\r\n            monthly: {\r\n                start: moment().startOf(\"month\"),\r\n                end: moment().endOf(\"month\"),\r\n                items: []\r\n            },\r\n            daily: {\r\n                start: moment().startOf(\"day\"),\r\n                end: moment().endOf(\"day\"),\r\n                items: []\r\n            },\r\n            display: 'all'\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        selectAll(\"budget\").then((items) => {\r\n            let daily = [];\r\n            let weekly = [];\r\n            let monthly = [];\r\n            let nonRepeating = [];\r\n            for (var i = 0; i < items.length; i++) {\r\n                let budget = items[i];\r\n                if (budget.repeat) {\r\n                    let ledger = validateBudget(budget);\r\n                    if (ledger != null) {\r\n                        budget.ledger = [ledger];\r\n                        if (budget.repeat === budgetRepeatEnum.daily) daily.push(budget);\r\n                        else if (budget.repeat === budgetRepeatEnum.weekly) weekly.push(budget);\r\n                        else if (budget.repeat === budgetRepeatEnum.monthly) monthly.push(budget);\r\n                    }\r\n                }\r\n                else {\r\n                    budget.ledger[0].endDate = budget.noEndDate ? new Date() : budget.ledger[0].endDate;\r\n                    nonRepeating.push(budget);\r\n                }\r\n            }\r\n            this.setState({\r\n                ...this.state,\r\n                daily: { ...this.state.daily, items: daily },\r\n                weekly: { ...this.state.weekly, items: weekly },\r\n                monthly: { ...this.state.monthly, items: monthly },\r\n                nonRepeating: { ...this.state.nonRepeating, items: nonRepeating }\r\n            });\r\n        });\r\n    }\r\n    \r\n    changeDisplay = (event) => {\r\n        this.setState({ ...this.state, display: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbarWithNavigation title=\"Budget\" buttons={[\r\n                    <Select\r\n                        className={this.props.classes.filter}\r\n                        value=\"all\" onChange={this.changeDisplay.bind(this)}>\r\n                        <MenuItem value=\"all\">All</MenuItem>\r\n                        <MenuItem value=\"daily\">Daily</MenuItem>\r\n                        <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                        <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                    </Select>\r\n                ]} />\r\n\r\n                {this.state.display === 'all' ?\r\n                    this.state.nonRepeating.items.map((item, i) =>\r\n                        <div key={i} className=\"content\">\r\n                            <Link style={{ textDecoration: 'none' }} to={`/budget/edit/${item.budgetId}`}>\r\n                                <BudgetSummary budget={item} />\r\n                            </Link>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                {this.state.display === 'all' || this.state.display === 'daily' ?\r\n                    <RenderItems items={this.state.daily.items} label=\"Daily\" classes={this.props.classes} />\r\n                    : null}\r\n\r\n                {this.state.display === 'all' || this.state.display === 'weekly' ?\r\n                    <RenderItems items={this.state.weekly.items} label=\"Weekly\" classes={this.props.classes} />\r\n                    : null}\r\n\r\n                {this.state.display === 'all' || this.state.display === 'monthly' ?\r\n                    <RenderItems items={this.state.monthly.items} label=\"Monthly\" classes={this.props.classes} />\r\n                    : null}\r\n\r\n                <Fab onClick={() => { this.props.history.push('budget/new') }} color=\"primary\" className={this.props.classes.fab}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst RenderItems = (props) => (\r\n    <>\r\n        {props.items.length > 0 ?\r\n            <>\r\n                <Divider className={props.classes.divider} />\r\n                <Typography variant=\"button\" align=\"center\">{props.label}</Typography>\r\n                {props.items.map((item, i) =>\r\n                    <div key={i} className=\"content\">\r\n                        <Link style={{ textDecoration: 'none' }} to={`/budget/edit/${item.budgetId}`}>\r\n                            <BudgetSummary budget={item} />\r\n                        </Link>\r\n                    </div>\r\n                )}\r\n            </>\r\n            : null}\r\n    </>\r\n)\r\n\r\nBudget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Budget);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney, budgetRepeatEnum } from \"../../helpers\";\r\nimport { select, selectAll, update, remove } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Done from '@material-ui/icons/Done';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { MenuItem, Input, Checkbox, ListItemText, Switch, FormControlLabel, DialogTitle, Dialog, Button, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\r\n\r\n\r\nconst styles = {\r\n    myClass: {\r\n        font: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    menuProps: {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: 48 * 4.5 + 8,\r\n                width: 250,\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nclass EditBudget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            budgetId: Number(this.props.match.params.id),\r\n            name: '',\r\n            selectedAccounts: [{ name: 'All', accountId: 0 }],\r\n            isActive: true,\r\n            repeat: budgetRepeatEnum.none,\r\n            startDate: '', //moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            endDate: '',//moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            amount: '0',\r\n            selectedCategories: [],\r\n            accounts: [],\r\n            categories: [],\r\n            showInDashboard: false,\r\n            noEndDate: false,\r\n            errors: {\r\n                name: false,\r\n                selectedAccounts: false,\r\n                repeat: false,\r\n                startDate: false,\r\n                endDate: false,\r\n                amount: false,\r\n                selectedCategories: false\r\n            },\r\n            showDelete: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        selectAll(\"account\").then((accounts) => {\r\n            accounts.unshift({ accountId: 0, name: 'All' });\r\n            this.setState({ ...this.state, accounts });\r\n            selectAll(\"category\").then((categories) => {\r\n                categories.unshift({ categoryId: 0, name: 'All' });\r\n                this.setState({ ...this.state, categories });\r\n                select(\"budget\", this.state.budgetId).then((budget) => {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        name: budget.name,\r\n                        selectedAccounts: budget.accountIds.map(a => accounts.find(m => { return m.accountId === a })),\r\n                        isActive: budget.isActive,\r\n                        repeat: budget.repeat,\r\n                        startDate: moment(budget.startDate).format('YYYY-MM-DD'),\r\n                        endDate: budget.endDate === null ? '' : moment(budget.endDate).format('YYYY-MM-DD'),\r\n                        amount: formatMoney(budget.amount),\r\n                        selectedCategories: budget.categoryIds.map(a => categories.find(m => { return m.categoryId === a })),\r\n                        noEndDate: budget.noEndDate,\r\n                        ledger: budget.ledger,\r\n                        showInDashboard: budget.showInDashboard\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    handleSave = () => {\r\n        var data = {\r\n            budgetId: this.state.budgetId,\r\n            name: this.state.name,\r\n            accountIds: this.state.selectedAccounts.map(m => m.accountId),\r\n            categoryIds: this.state.selectedCategories.map(m => m.categoryId),\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            repeat: this.state.repeat,\r\n            startDate: new Date(this.state.startDate),\r\n            noEndDate: this.state.noEndDate,\r\n            endDate: this.state.endDate,\r\n            isActive: true,\r\n            ledger: this.state.ledger,\r\n            showInDashboard: this.state.showInDashboard\r\n        };\r\n        let hasError = false;\r\n        let errors = {\r\n            name: false,\r\n            selectedAccounts: false,\r\n            repeat: false,\r\n            startDate: false,\r\n            endDate: false,\r\n            amount: false,\r\n            selectedCategories: false\r\n        }\r\n        if (data.name === '') {\r\n            hasError = true;\r\n            errors.name = true;\r\n        }\r\n        if (data.accountIds === null || data.accountIds === undefined || data.accountIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedAccounts = true;\r\n        }\r\n        if (data.categoryIds === null || data.categoryIds === undefined || data.categoryIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedCategories = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.startDate || this.state.startDate === '') {\r\n            hasError = true;\r\n            errors.startDate = true;\r\n        }\r\n        if (!data.noEndDate && (!this.state.endDate || this.state.endDate === '')) {\r\n            hasError = true;\r\n            errors.endDate = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            data.endDate = (data.noEndDate) ? null : new Date(data.endDate);\r\n\r\n            if (!data.repeat) {\r\n                data.ledger.push({\r\n                    startDate: moment(data.startDate).startOf(\"day\").toDate(),\r\n                    endDate: moment(data.endDate).endOf(\"day\").toDate(),\r\n                    spent: 0,\r\n                    amount: data.amount\r\n                });\r\n            }\r\n\r\n            update(\"budget\", data, (success) => {\r\n                if (success) {\r\n                    this.props.history.push(\"/budget\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === \"selectedAccounts\") {\r\n            let all = value.find(m => m.accountId === 0);\r\n            let allFromState = this.state.selectedAccounts.find(m => m.accountId === 0);\r\n            if (all !== null && all !== undefined && allFromState !== null && allFromState !== undefined) {\r\n                value.shift();\r\n            }\r\n            else if (all !== null && all !== undefined) {\r\n                value = this.state.accounts;\r\n            }\r\n        }\r\n        else if (property === \"selectedCategories\") {\r\n            let all = value.find(m => m.categoryId === 0);\r\n            let allFromState = this.state.selectedCategories.find(m => m.categoryId === 0);\r\n            if (all !== null && all !== undefined && allFromState !== null && allFromState !== undefined) {\r\n                value.shift();\r\n            }\r\n            else if (all !== null && all !== undefined) {\r\n                value = this.state.categories;\r\n            }\r\n        }\r\n        else if (property === \"noEndDate\" || property === \"showInDashboard\") {\r\n            value = value === \"true\";\r\n            if (value) {\r\n                this.setState({ ...this.state, endDate: '' });\r\n            }\r\n        }\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    handleDelete = () => {\r\n        remove(\"budget\", this.state.budgetId).then(() => {\r\n            this.props.history.push(\"/budget\");\r\n        });\r\n    }\r\n\r\n    toggleDeleteModal = () => {\r\n        this.setState({ ...this.state, showDelete: !this.state.showDelete });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add budget\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.toggleDeleteModal.bind(this)} color=\"inherit\"><Delete /></IconButton>),\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Done /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <TextField\r\n                        error={this.state.errors.name}\r\n                        label=\"Name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChangeProperty.bind(this, 'name')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Accounts</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedAccounts}\r\n                            multiple\r\n                            value={this.state.selectedAccounts}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedAccounts')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.accounts.map((account, index) => (\r\n                                <MenuItem key={index} value={account}>\r\n                                    <Checkbox checked={this.state.selectedAccounts.map(f => { return f.accountId }).indexOf(account.accountId) > -1} />\r\n                                    <ListItemText primary={account.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedCategories}\r\n                            multiple\r\n                            value={this.state.selectedCategories}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedCategories')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.categories.map((category, index) => (\r\n                                <MenuItem key={index} value={category}>\r\n                                    <Checkbox checked={this.state.selectedCategories.map(f => { return f.categoryId }).indexOf(category.categoryId) > -1} />\r\n                                    <ListItemText primary={category.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Repeat</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.repeat}\r\n                            value={this.state.repeat}\r\n                            onChange={this.handleChangeProperty.bind(this, 'repeat')}>\r\n                            <MenuItem value={budgetRepeatEnum.none}>None</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.daily}>Daily</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.weekly}>Weekly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.monthly}>Monthly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.custom}>Custom</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.startDate}\r\n                        label=\"Start date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.startDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'startDate')}\r\n                    />\r\n\r\n                    <TextField\r\n                        error={this.state.errors.endDate}\r\n                        label=\"End date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        disabled={this.state.noEndDate}\r\n                        value={this.state.endDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'endDate')}\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={this.state.noEndDate}\r\n                                onChange={this.handleChangeProperty.bind(this, 'noEndDate')}\r\n                                value={!this.state.noEndDate}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"no end date\"\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={this.state.showInDashboard}\r\n                                onChange={this.handleChangeProperty.bind(this, 'showInDashboard')}\r\n                                value={!this.state.showInDashboard}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"show widget on dashboard\"\r\n                    />\r\n                </div>\r\n\r\n                <Dialog\r\n                    onClose={this.toggleDeleteModal}\r\n                    open={this.state.showDelete}>\r\n                    <DialogTitle>Confirm</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>Are you sure you want to delete?</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.toggleDeleteModal} color=\"primary\" autoFocus>Cancel</Button>\r\n                        <Button onClick={this.handleDelete} color=\"secondary\">Delete</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nEditBudget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(EditBudget);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney, budgetRepeatEnum } from \"../../helpers\";\r\nimport { selectAll, insert } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Done from '@material-ui/icons/Done';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { MenuItem, Input, Checkbox, ListItemText, Switch, FormControlLabel } from \"@material-ui/core\";\r\n\r\n\r\nconst styles = {\r\n    myClass: {\r\n        font: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    menuProps: {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: 48 * 4.5 + 8,\r\n                width: 250,\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nclass NewBudget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            selectedAccounts: [{ name: 'All', accountId: 0 }],\r\n            isActive: true,\r\n            repeat: budgetRepeatEnum.none,\r\n            startDate: '', //moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            endDate: '',//moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            amount: '0',\r\n            showInDashboard: false,\r\n            selectedCategories: [],\r\n            accounts: [],\r\n            categories: [],\r\n            noEndDate: false,\r\n            errors: {\r\n                name: false,\r\n                selectedAccounts: false,\r\n                repeat: false,\r\n                startDate: false,\r\n                endDate: false,\r\n                amount: false,\r\n                selectedCategories: false\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSave = () => {\r\n        var data = {\r\n            name: this.state.name,\r\n            accountIds: this.state.selectedAccounts.map(m => m.accountId),\r\n            categoryIds: this.state.selectedCategories.map(m => m.categoryId),\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            repeat: this.state.repeat,\r\n            startDate: new Date(this.state.startDate),\r\n            noEndDate: this.state.noEndDate,\r\n            endDate: this.state.endDate,\r\n            isActive: true,\r\n            showInDashboard: this.state.showInDashboard,\r\n            ledger: []\r\n        };\r\n        let hasError = false;\r\n        let errors = {\r\n            name: false,\r\n            selectedAccounts: false,\r\n            repeat: false,\r\n            startDate: false,\r\n            endDate: false,\r\n            amount: false,\r\n            selectedCategories: false\r\n        }\r\n        if (data.name === '') {\r\n            hasError = true;\r\n            errors.name = true;\r\n        }\r\n        if (data.accountIds === null || data.accountIds === undefined || data.accountIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedAccounts = true;\r\n        }\r\n        if (data.categoryIds === null || data.categoryIds === undefined || data.categoryIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedCategories = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.startDate || this.state.startDate === '') {\r\n            hasError = true;\r\n            errors.startDate = true;\r\n        }\r\n        if (!data.noEndDate && (!this.state.endDate || this.state.endDate === '')) {\r\n            hasError = true;\r\n            errors.endDate = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            data.endDate = (data.noEndDate) ? null : new Date(data.endDate);\r\n\r\n            if (!data.repeat) {\r\n                data.ledger.push({\r\n                    startDate: moment(data.startDate).startOf(\"day\").toDate(),\r\n                    endDate: moment(data.endDate).endOf(\"day\").toDate(),\r\n                    spent: 0,\r\n                    amount: data.amount\r\n                });\r\n            }\r\n            \r\n            insert(\"budget\", data, (success) => {\r\n                if (success) {\r\n                    this.props.history.push(\"/budget\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        selectAll(\"account\").then((accounts) => {\r\n            accounts.unshift({ accountId: 0, name: 'All' });\r\n            this.setState({ ...this.state, accounts })\r\n        });\r\n        selectAll(\"category\").then((categories) => {\r\n            categories.unshift({ categoryId: 0, name: 'All' });\r\n            this.setState({ ...this.state, categories });\r\n        });\r\n    }\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === \"selectedAccounts\") {\r\n            let all = value.find(m => m.accountId === 0);\r\n            let allFromState = this.state.selectedAccounts.find(m => m.accountId === 0);\r\n            if (all !== null && all !== undefined && allFromState !== null && allFromState !== undefined) {\r\n                value.shift();\r\n            }\r\n            else if (all !== null && all !== undefined) {\r\n                value = this.state.accounts;\r\n            }\r\n        }\r\n        else if (property === \"selectedCategories\") {\r\n            let all = value.find(m => m.categoryId === 0);\r\n            let allFromState = this.state.selectedCategories.find(m => m.categoryId === 0);\r\n            if (all !== null && all !== undefined && allFromState !== null && allFromState !== undefined) {\r\n                value.shift();\r\n            }\r\n            else if (all !== null && all !== undefined) {\r\n                value = this.state.categories;\r\n            }\r\n        }\r\n        else if (property === \"noEndDate\" || property === \"showInDashboard\") {\r\n            value = value === \"true\";\r\n            if (value) {\r\n                this.setState({ ...this.state, endDate: '' });\r\n            }\r\n        }\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add budget\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Done /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <TextField\r\n                        error={this.state.errors.name}\r\n                        label=\"Name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChangeProperty.bind(this, 'name')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Accounts</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedAccounts}\r\n                            multiple\r\n                            value={this.state.selectedAccounts}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedAccounts')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.accounts.map((account, index) => (\r\n                                <MenuItem key={index} value={account}>\r\n                                    <Checkbox checked={this.state.selectedAccounts.map(f => { return f.accountId }).indexOf(account.accountId) > -1} />\r\n                                    <ListItemText primary={account.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedCategories}\r\n                            multiple\r\n                            value={this.state.selectedCategories}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedCategories')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.categories.map((category, index) => (\r\n                                <MenuItem key={index} value={category}>\r\n                                    <Checkbox checked={this.state.selectedCategories.map(f => { return f.categoryId }).indexOf(category.categoryId) > -1} />\r\n                                    <ListItemText primary={category.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Repeat</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.repeat}\r\n                            value={this.state.repeat}\r\n                            onChange={this.handleChangeProperty.bind(this, 'repeat')}>\r\n                            <MenuItem value={budgetRepeatEnum.none}>None</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.daily}>Daily</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.weekly}>Weekly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.monthly}>Monthly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.custom}>Custom</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.startDate}\r\n                        label=\"Start date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.startDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'startDate')}\r\n                    />\r\n\r\n                    <TextField\r\n                        error={this.state.errors.endDate}\r\n                        label=\"End date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        disabled={this.state.noEndDate}\r\n                        value={this.state.endDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'endDate')}\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={this.state.noEndDate}\r\n                                onChange={this.handleChangeProperty.bind(this, 'noEndDate')}\r\n                                value={!this.state.noEndDate}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"no end date\"\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={this.state.showInDashboard}\r\n                                onChange={this.handleChangeProperty.bind(this, 'showInDashboard')}\r\n                                value={!this.state.showInDashboard}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"show widget on dashboard\"\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nNewBudget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(NewBudget);","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n    link: {\r\n        textDecoration: 'none'\r\n    }\r\n}\r\n\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbarWithNavigation title=\"Settings\" buttons={[]} />\r\n                <List>\r\n                    <Link className={this.props.classes.link} to=\"/accounts\">\r\n                        <ListItem>\r\n                            <ListItemText primary=\"Accounts\" secondary=\"Create new accounts, edit existing ones, or delete an account.\" />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link className={this.props.classes.link} to=\"/categories\">\r\n                        <ListItem>\r\n                            <ListItemText primary=\"Categories\" secondary=\"Manage your categories.\" />\r\n                        </ListItem>\r\n                    </Link>\r\n                </List>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nSettings.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Settings);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Divider,\r\n    Fab, Dialog, DialogTitle, DialogContent,\r\n    DialogActions, Button, TextField,\r\n    ListItemSecondaryAction,\r\n    IconButton,\r\n    DialogContentText\r\n} from \"@material-ui/core\";\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport { selectAll, insertAsync, updateAsync, remove } from \"../../helpers\";\r\n\r\nconst styles = {\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    addButton: {\r\n        position: 'fixed',\r\n        bottom: 15,\r\n        right: 15\r\n    },\r\n}\r\n\r\n\r\nclass Account extends Component {\r\n    state = {\r\n        accounts: [],\r\n        new: {\r\n            showModal: false,\r\n            name: '',\r\n            error: false\r\n        },\r\n        edit: {\r\n            accountId: 0,\r\n            showModal: false,\r\n            name: '',\r\n            error: false\r\n        },\r\n        delete: {\r\n            accountId: 0,\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var accounts = await selectAll(\"account\");\r\n        this.setState({ ...this.state, accounts });\r\n    }\r\n\r\n    showEditModal(accountId) {\r\n        var account = this.state.accounts.find(m => m.accountId === accountId);\r\n        if (account !== null && account !== undefined && account.accountId !== 1) {\r\n            this.setState({ ...this.state, edit: { accountId: account.accountId, name: account.name, error: false, showModal: true } })\r\n        }\r\n    }\r\n\r\n    async saveAdd() {\r\n        var name = this.state.new.name;\r\n        this.setState({ ...this.state, new: { ...this.state.new, error: false } });\r\n        if (name === null || name === undefined || name === '') {\r\n            this.setState({ ...this.state, new: { ...this.state.new, error: true } });\r\n        }\r\n        else {\r\n            var result = await insertAsync(\"account\", { name });\r\n            if (result) {\r\n                var accounts = await selectAll(\"account\");\r\n                this.setState({ ...this.state, accounts, new: { ...this.state.new, showModal: false } });\r\n            }\r\n        }\r\n    }\r\n\r\n    async saveEdit() {\r\n        var name = this.state.edit.name;\r\n        this.setState({ ...this.state, edit: { ...this.state.edit, error: false } });\r\n        if (name === null || name === undefined || name === '') {\r\n            this.setState({ ...this.state, edit: { ...this.state.edit, error: true } });\r\n        }\r\n        else {\r\n            var result = await updateAsync(\"account\", { accountId: this.state.edit.accountId, name });\r\n            if (result) {\r\n                var accounts = await selectAll(\"account\");\r\n                this.setState({ ...this.state, accounts, edit: { ...this.state.edit, showModal: false } });\r\n            }\r\n        }\r\n    }\r\n\r\n    async delete() {\r\n        var result = await remove(\"account\", this.state.delete.accountId);\r\n        if (result) {\r\n            var accounts = await selectAll(\"account\");\r\n            this.setState({ ...this.state, accounts, delete: { accountId: 0, showModal: false } });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar onBack={() => { this.props.history.goBack() }} showBackButton={true} title=\"Accounts\" buttons={[]} />\r\n                <List>\r\n                    {this.state.accounts.map((account, index) =>\r\n                        <div key={index}>\r\n                            <ListItem button onClick={this.showEditModal.bind(this, account.accountId)}>\r\n                                <ListItemText primary={account.name} secondary={account.accountId === 1 ? \"This is the default account, you can't do anything about it.\" : \"\"} />\r\n                                {account.accountId !== 1 ?\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton onClick={() => this.setState({ ...this.state, delete: { accountId: account.accountId, showModal: true } })}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction> : null}\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </div>\r\n                    )}\r\n                </List>\r\n                <Fab color=\"primary\"\r\n                    onClick={() => this.setState({ ...this.state, new: { ...this.state.new, showModal: true } })}\r\n                    className={this.props.classes.addButton}>\r\n                    <AddIcon />\r\n                </Fab>\r\n                <NewModal\r\n                    isOpen={this.state.new.showModal}\r\n                    value={this.state.new.name}\r\n                    error={this.state.new.error}\r\n                    changeValue={(e) => { this.setState({ ...this.state, new: { ...this.state.new, name: e.target.value } }) }}\r\n                    close={() => this.setState({ ...this.state, new: { ...this.state.new, showModal: false, name: '' } })}\r\n                    save={this.saveAdd.bind(this)}\r\n                />\r\n                <EditModal\r\n                    isOpen={this.state.edit.showModal}\r\n                    value={this.state.edit.name}\r\n                    error={this.state.edit.error}\r\n                    changeValue={(e) => { this.setState({ ...this.state, edit: { ...this.state.edit, name: e.target.value } }) }}\r\n                    close={() => this.setState({ ...this.state, edit: { ...this.state.edit, showModal: false } })}\r\n                    save={this.saveEdit.bind(this)}\r\n                />\r\n                <DeleteModal\r\n                    isOpen={this.state.delete.showModal}\r\n                    close={() => this.setState({ ...this.state, delete: { ...this.state.delete, showModal: false } })}\r\n                    delete={this.delete.bind(this)}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst NewModal = (props) => (\r\n    <Dialog\r\n        open={props.isOpen}>\r\n        <DialogTitle>Add new account</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n            <TextField\r\n                error={props.error}\r\n                className=\"form-control\"\r\n                label=\"Account name\"\r\n                onChange={props.changeValue.bind(this)}\r\n                margin=\"normal\"\r\n            />\r\n        </DialogContent>\r\n        <Divider />\r\n        <DialogActions>\r\n            <Button onClick={props.close} color=\"default\">Cancel</Button>\r\n            <Button onClick={props.save} color=\"primary\" autoFocus>Save</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n)\r\n\r\nconst EditModal = (props) => (\r\n    <Dialog\r\n        open={props.isOpen}>\r\n        <DialogTitle>Edit account</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n            <TextField\r\n                error={props.error}\r\n                className=\"form-control\"\r\n                label=\"Account name\"\r\n                value={props.value}\r\n                onChange={props.changeValue.bind(this)}\r\n                margin=\"normal\"\r\n            />\r\n        </DialogContent>\r\n        <Divider />\r\n        <DialogActions>\r\n            <Button onClick={props.close} color=\"default\">Cancel</Button>\r\n            <Button onClick={props.save} color=\"primary\" autoFocus>Save</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n)\r\n\r\nconst DeleteModal = (props) => (\r\n    <Dialog\r\n        open={props.isOpen}>\r\n        <DialogTitle>Confirm</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>Are you sure you want to delete this account?</DialogContentText>\r\n            <DialogContentText>This action cannot be undone.</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={props.close} color=\"primary\" autoFocus>Cancel</Button>\r\n            <Button onClick={props.delete} color=\"secondary\">Delete</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n)\r\n\r\nAccount.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Account);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Divider,\r\n    Fab, Dialog, DialogTitle, DialogContent,\r\n    DialogActions, Button, TextField,\r\n    ListItemSecondaryAction,\r\n    IconButton,\r\n    DialogContentText\r\n} from \"@material-ui/core\";\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport { selectAll, insertAsync, updateAsync, remove } from \"../../helpers\";\r\n\r\nconst styles = {\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    addButton: {\r\n        position: 'fixed',\r\n        bottom: 15,\r\n        right: 15\r\n    },\r\n}\r\n\r\n\r\nclass Category extends Component {\r\n    state = {\r\n        categories: [],\r\n        new: {\r\n            showModal: false,\r\n            name: '',\r\n            error: false\r\n        },\r\n        edit: {\r\n            categoryId: 0,\r\n            showModal: false,\r\n            name: '',\r\n            error: false\r\n        },\r\n        delete: {\r\n            categoryId: 0,\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var categories = await selectAll(\"category\");\r\n        this.setState({ ...this.state, categories });\r\n    }\r\n\r\n    showEditModal(categoryId) {\r\n        var category = this.state.categories.find(m => m.categoryId === categoryId);\r\n        if (category !== null && category !== undefined && [1,2,3].indexOf(category.categoryId) === -1) {\r\n            this.setState({ ...this.state, edit: { categoryId: category.categoryId, name: category.name, error: false, showModal: true } })\r\n        }\r\n    }\r\n\r\n    async saveAdd() {\r\n        var name = this.state.new.name;\r\n        this.setState({ ...this.state, new: { ...this.state.new, error: false } });\r\n        if (name === null || name === undefined || name === '') {\r\n            this.setState({ ...this.state, new: { ...this.state.new, error: true } });\r\n        }\r\n        else {\r\n            var result = await insertAsync(\"category\", { name });\r\n            if (result) {\r\n                var categories = await selectAll(\"category\");\r\n                this.setState({ ...this.state, categories, new: { ...this.state.new, showModal: false } });\r\n            }\r\n        }\r\n    }\r\n\r\n    async saveEdit() {\r\n        var name = this.state.edit.name;\r\n        this.setState({ ...this.state, edit: { ...this.state.edit, error: false } });\r\n        if (name === null || name === undefined || name === '') {\r\n            this.setState({ ...this.state, edit: { ...this.state.edit, error: true } });\r\n        }\r\n        else {\r\n            var result = await updateAsync(\"category\", { categoryId: this.state.edit.categoryId, name });\r\n            if (result) {\r\n                var categories = await selectAll(\"category\");\r\n                this.setState({ ...this.state, categories, edit: { ...this.state.edit, showModal: false } });\r\n            }\r\n        }\r\n    }\r\n\r\n    async delete() {\r\n        var result = await remove(\"category\", this.state.delete.categoryId);\r\n        if (result) {\r\n            var categories = await selectAll(\"category\");\r\n            this.setState({ ...this.state, categories, delete: { categoryId: 0, showModal: false } });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar onBack={() => { this.props.history.goBack() }} showBackButton={true} title=\"Categories\" buttons={[]} />\r\n                <List>\r\n                    {this.state.categories.map((category, index) =>\r\n                        <div key={index}>\r\n                            <ListItem button onClick={this.showEditModal.bind(this, category.categoryId)}>\r\n                                <ListItemText primary={category.name} secondary={[1,2,3].indexOf(category.categoryId) !== -1 ? \"This is the default category, you can't do anything about it.\" : \"\"} />\r\n                                {[1,2,3].indexOf(category.categoryId) === -1 ?\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton onClick={() => this.setState({ ...this.state, delete: { categoryId: category.categoryId, showModal: true } })}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction> : null}\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </div>\r\n                    )}\r\n                </List>\r\n                <Fab color=\"primary\"\r\n                    onClick={() => this.setState({ ...this.state, new: { ...this.state.new, showModal: true } })}\r\n                    className={this.props.classes.addButton}>\r\n                    <AddIcon />\r\n                </Fab>\r\n                <NewModal\r\n                    isOpen={this.state.new.showModal}\r\n                    value={this.state.new.name}\r\n                    error={this.state.new.error}\r\n                    changeValue={(e) => { this.setState({ ...this.state, new: { ...this.state.new, name: e.target.value } }) }}\r\n                    close={() => this.setState({ ...this.state, new: { ...this.state.new, showModal: false, name: '' } })}\r\n                    save={this.saveAdd.bind(this)}\r\n                />\r\n                <EditModal\r\n                    isOpen={this.state.edit.showModal}\r\n                    value={this.state.edit.name}\r\n                    error={this.state.edit.error}\r\n                    changeValue={(e) => { this.setState({ ...this.state, edit: { ...this.state.edit, name: e.target.value } }) }}\r\n                    close={() => this.setState({ ...this.state, edit: { ...this.state.edit, showModal: false } })}\r\n                    save={this.saveEdit.bind(this)}\r\n                />\r\n                <DeleteModal\r\n                    isOpen={this.state.delete.showModal}\r\n                    close={() => this.setState({ ...this.state, delete: { ...this.state.delete, showModal: false } })}\r\n                    delete={this.delete.bind(this)}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst NewModal = (props) => (\r\n    <Dialog\r\n        open={props.isOpen}>\r\n        <DialogTitle>Add new category</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n            <TextField\r\n                error={props.error}\r\n                className=\"form-control\"\r\n                label=\"Category name\"\r\n                onChange={props.changeValue.bind(this)}\r\n                margin=\"normal\"\r\n            />\r\n        </DialogContent>\r\n        <Divider />\r\n        <DialogActions>\r\n            <Button onClick={props.close} color=\"default\">Cancel</Button>\r\n            <Button onClick={props.save} color=\"primary\" autoFocus>Save</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n)\r\n\r\nconst EditModal = (props) => (\r\n    <Dialog\r\n        open={props.isOpen}>\r\n        <DialogTitle>Edit category</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n            <TextField\r\n                error={props.error}\r\n                className=\"form-control\"\r\n                label=\"Category name\"\r\n                value={props.value}\r\n                onChange={props.changeValue.bind(this)}\r\n                margin=\"normal\"\r\n            />\r\n        </DialogContent>\r\n        <Divider />\r\n        <DialogActions>\r\n            <Button onClick={props.close} color=\"default\">Cancel</Button>\r\n            <Button onClick={props.save} color=\"primary\" autoFocus>Save</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n)\r\n\r\nconst DeleteModal = (props) => (\r\n    <Dialog\r\n        open={props.isOpen}>\r\n        <DialogTitle>Confirm</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>Are you sure you want to delete this category?</DialogContentText>\r\n            <DialogContentText>This action cannot be undone.</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={props.close} color=\"primary\" autoFocus>Cancel</Button>\r\n            <Button onClick={props.delete} color=\"secondary\">Delete</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n)\r\n\r\nCategory.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Category);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport {\r\n    List, ListItem, ListItemText,\r\n    ListItemSecondaryAction, IconButton,\r\n    Divider, Fab, Dialog, DialogTitle,\r\n    DialogContent, DialogContentText, DialogActions,\r\n    Button\r\n} from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport { selectAll, remove } from \"../../helpers\";\r\nimport ThinkingMeme from \"../../images/thinking-meme.png\";\r\n\r\nconst styles = {\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    addButton: {\r\n        position: 'fixed',\r\n        bottom: 15,\r\n        right: 15\r\n    },\r\n    thinkingMeme: {\r\n        width: 100,\r\n        position: 'absolute',\r\n        bottom: 0,\r\n        right: 100\r\n    },\r\n    noContent: {\r\n        color: 'primary',\r\n        fontSize: 20,\r\n        textAlign: 'center',\r\n        position: 'absolute',\r\n        bottom: 250,\r\n        width: '100%'\r\n    }\r\n}\r\n\r\nclass ExpenseTemplate extends Component {\r\n    state = {\r\n        templates: [],\r\n        showDelete: false,\r\n        idForDelete: 0\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var templates = await selectAll(\"expenseTemplate\");\r\n        this.setState({ ...this.state, templates });\r\n    }\r\n\r\n    toggleDelete = (id) => {\r\n        this.setState({...this.state, idForDelete: id, showDelete: !this.state.showDelete});\r\n    }\r\n\r\n    async delete() {\r\n        var result = await remove(\"expenseTemplate\", this.state.idForDelete);\r\n        if (result) {\r\n            var templates = await selectAll(\"expenseTemplate\");\r\n            this.setState({ ...this.state, templates, showDelete: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbarWithNavigation title=\"Expense templates\" buttons={[]} />\r\n                <List>\r\n                    {this.state.templates.map((template, index) =>\r\n                        <div key={index}>\r\n                            <ListItem button onClick={() => { this.props.history.push(`/expensetemplates/edit/${template.expenseTemplateId}`) }}>\r\n                                <ListItemText primary={template.templateName} />\r\n                                <ListItemSecondaryAction>\r\n                                    <IconButton onClick={this.toggleDelete.bind(this, template.expenseTemplateId)}>\r\n                                        <DeleteIcon />\r\n                                    </IconButton>\r\n                                </ListItemSecondaryAction>\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </div>\r\n                    )}\r\n                </List>\r\n                {this.state.templates.length === 0 ?\r\n                    <>\r\n                        <img src={ThinkingMeme} className={this.props.classes.thinkingMeme} />\r\n                    </>\r\n                    : null}\r\n                <Fab color=\"primary\"\r\n                    onClick={() => { this.props.history.push(\"/expensetemplates/new\") }}\r\n                    className={this.props.classes.addButton}>\r\n                    <AddIcon />\r\n                </Fab>\r\n\r\n                <Dialog\r\n                    open={this.state.showDelete}>\r\n                    <DialogTitle>Confirm</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>Are you sure you want to delete this template?</DialogContentText>\r\n                        <DialogContentText>This action cannot be undone.</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.toggleDelete.bind(this, 0)} color=\"primary\" autoFocus>Cancel</Button>\r\n                        <Button onClick={this.delete.bind(this)} color=\"secondary\">Delete</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nExpenseTemplate.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(ExpenseTemplate);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport { formatMoney, insertAsync, selectAll } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Done from '@material-ui/icons/Done';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst styles = {\r\n    myClass: {\r\n        font: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    }\r\n}\r\n\r\nclass NewExpenseTemplate extends Component {\r\n    state = {\r\n        templateName: '',\r\n        title: '',\r\n        categoryId: 0,\r\n        amount: '',\r\n        accountId: 0,\r\n        description: '',\r\n        accounts: [],\r\n        categories: [],\r\n        errors: {\r\n            templateName: false,\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var accounts = await selectAll(\"account\");\r\n        var categories = await selectAll(\"category\");\r\n        this.setState({...this.state, accounts, categories});\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n    \r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n\r\n    async handleSave() {\r\n        var data = {\r\n            templateName: this.state.templateName,\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description\r\n        };\r\n\r\n        let hasError = false;\r\n        let errors = {\r\n            templateName: false,\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false\r\n        }\r\n        if(data.templateName === '') {\r\n            errors.templateName = true;\r\n            hasError = true;\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            var result = await insertAsync(\"expenseTemplate\", data);\r\n            if (result) {\r\n                this.props.history.push(\"/expensetemplates\");\r\n            }\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add expense template\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Done /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <TextField\r\n                        error={this.state.errors.templateName}\r\n                        label=\"Template name\"\r\n                        value={this.state.templateName}\r\n                        onChange={this.handleChangeProperty.bind(this, 'templateName')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Account</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.account}\r\n                            value={this.state.accountId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.title}\r\n                        label=\"Title\"\r\n                        value={this.state.title}\r\n                        onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.category}\r\n                            value={this.state.categoryId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        className=\"form-control\"\r\n                        label=\"Notes\"\r\n                        multiline\r\n                        rows=\"6\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nNewExpenseTemplate.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(NewExpenseTemplate);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport { formatMoney, selectAll, selectById, updateAsync } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Done from '@material-ui/icons/Done';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst styles = {\r\n    myClass: {\r\n        font: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    }\r\n}\r\n\r\nclass EditExpenseTemplate extends Component {\r\n    state = {\r\n        expenseTemplateId: 0,\r\n        templateName: '',\r\n        title: '',\r\n        categoryId: 0,\r\n        amount: '',\r\n        accountId: 0,\r\n        description: '',\r\n        accounts: [],\r\n        categories: [],\r\n        errors: {\r\n            templateName: false,\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var accounts = await selectAll(\"account\");\r\n        var categories = await selectAll(\"category\");\r\n        var template = await selectById(\"expenseTemplate\", Number(this.props.match.params.id));\r\n        template.amount = template.amount.toString();\r\n        this.setState({...this.state, ...template, accounts, categories});\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n    \r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n\r\n    async handleSave() {\r\n        var data = {\r\n            expenseTemplateId: this.state.expenseTemplateId,\r\n            templateName: this.state.templateName,\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description\r\n        };\r\n\r\n        let hasError = false;\r\n        let errors = {\r\n            templateName: false,\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false\r\n        }\r\n        if(data.templateName === '') {\r\n            errors.templateName = true;\r\n            hasError = true;\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            var result = await updateAsync(\"expenseTemplate\", data);\r\n            if (result) {\r\n                this.props.history.push(\"/expensetemplates\");\r\n            }\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Edit expense template\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Done /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <TextField\r\n                        error={this.state.errors.templateName}\r\n                        label=\"Template name\"\r\n                        value={this.state.templateName}\r\n                        onChange={this.handleChangeProperty.bind(this, 'templateName')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Account</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.account}\r\n                            value={this.state.accountId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.title}\r\n                        label=\"Title\"\r\n                        value={this.state.title}\r\n                        onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.category}\r\n                            value={this.state.categoryId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        className=\"form-control\"\r\n                        label=\"Notes\"\r\n                        multiline\r\n                        rows=\"6\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nEditExpenseTemplate.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(EditExpenseTemplate);","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from '../dashboard/dashboard';\r\nimport Expense from '../expense/expense';\r\nimport Income from '../income/income';\r\nimport NewExpense from '../expense/new-expense';\r\nimport EditExpense from '../expense/edit-expense';\r\nimport Budget from '../budget/budget';\r\nimport EditBudget from '../budget/edit-budget';\r\nimport NewBudget from '../budget/new-budget';\r\nimport Settings from \"../settings/settings\";\r\nimport Account from \"../account/account\";\r\nimport Category from \"../category/category\";\r\nimport ExpenseTemplate from \"../expense-template/expense-template\";\r\nimport NewExpenseTemplate from \"../expense-template/new-expense-template\";\r\nimport EditExpenseTemplate from \"../expense-template/edit-expense-template\";\r\n\r\nclass Main extends Component {\r\n    render() {\r\n      return (\r\n        <main>\r\n            <Switch>\r\n                <Route path='/income' component={Income}/>\r\n                <Route path='/expense/edit/:id' component={EditExpense} />\r\n                <Route path='/expense/new/:templateId' component={NewExpense} />\r\n                <Route path='/expense' component={Expense}/>\r\n                <Route path='/budget/edit/:id' component={EditBudget}/>\r\n                <Route path='/budget/new' component={NewBudget}/>\r\n                <Route path='/budget' component={Budget}/>\r\n                <Route path='/settings' component={Settings}/>\r\n                <Route path='/accounts' component={Account}/>\r\n                <Route path='/categories' component={Category}/>\r\n                <Route path='/expensetemplates/edit/:id' component={EditExpenseTemplate} />\r\n                <Route path='/expensetemplates/new' component={NewExpenseTemplate}/>\r\n                <Route path='/expensetemplates' component={ExpenseTemplate}/>\r\n\r\n                <Route path='/' component={Dashboard}/>\r\n            </Switch>\r\n        </main>\r\n      );\r\n    }\r\n}\r\n  \r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\r\nimport Main from './components/common/main';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper animate slideInRight\">\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport { initialize } from './database';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\nimport './App.css';\r\nimport 'typeface-roboto';\r\n\r\nconst configureHistory = () => {\r\n  return window.matchMedia('(display-mode: standalone)').matches\r\n    ? createHashHistory()\r\n    : createBrowserHistory()\r\n}\r\nconst history = configureHistory();\r\ninitialize(); //initialize database\r\nReactDOM.render((\r\n    <Router history={history} basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n    </Router>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","\r\nexport const initialize = () => {\r\n    var request = window.indexedDB.open(\"Moneytoring\", 8);\r\n    \r\n    request.onupgradeneeded = function(event) {\r\n        var db = event.target.result;\r\n\r\n        if (!db.objectStoreNames.contains('expenseTemplate')) {\r\n            var table = db.createObjectStore(\"expenseTemplate\", { keyPath: \"expenseTemplateId\", autoIncrement: true });\r\n            table.createIndex(\"title\", \"title\", { unique: false });\r\n            table.createIndex(\"templateName\", \"templateName\", { unique: false });\r\n            table.createIndex(\"amount\", \"amount\", { unique: false });\r\n            table.createIndex(\"categoryId\", \"categoryId\", { unique: false });\r\n            table.createIndex(\"accountId\", \"accountId\", { unique: false });\r\n            table.createIndex(\"description\", \"description\", { unique: false });\r\n        }\r\n\r\n        if (!db.objectStoreNames.contains('expense')) {\r\n            var expenseTable = db.createObjectStore(\"expense\", { keyPath: \"expenseId\", autoIncrement: true });\r\n            expenseTable.createIndex(\"expenseId\", \"expenseId\", { unique: true });\r\n            expenseTable.createIndex(\"title\", \"title\", { unique: false });\r\n            expenseTable.createIndex(\"categoryId\", \"categoryId\", { unique: false });\r\n            expenseTable.createIndex(\"amount\", \"amount\", { unique: false });\r\n            expenseTable.createIndex(\"accountId\", \"accountId\", { unique: false });\r\n            expenseTable.createIndex(\"description\", \"description\", { unique: false });\r\n            expenseTable.createIndex(\"date\", \"date\", { unique: false });\r\n        }\r\n        \r\n        if (!db.objectStoreNames.contains('account')) {\r\n            var accountTable = db.createObjectStore(\"account\", { keyPath: \"accountId\", autoIncrement: true });\r\n            accountTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n\r\n        if (!db.objectStoreNames.contains('category')) {\r\n            var categoryTable = db.createObjectStore(\"category\", { keyPath: \"categoryId\", autoIncrement: true });\r\n            categoryTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n\r\n        if (!db.objectStoreNames.contains('budget')) {\r\n            var budgetTable = db.createObjectStore(\"budget\", {keyPath: \"budgetId\", autoIncrement: true});\r\n            budgetTable.createIndex(\"name\", \"name\", { unique: false});\r\n            budgetTable.createIndex(\"repeat\", \"repeat\", { unique: false});\r\n            budgetTable.createIndex(\"startDate\", \"startDate\", { unique: false});\r\n            budgetTable.createIndex(\"endDate\", \"endDate\", { unique: false});\r\n            budgetTable.createIndex(\"amount\", \"amount\", { unique: false});\r\n            budgetTable.createIndex(\"accountIds\", \"accountIds\", { unique: false});\r\n            budgetTable.createIndex(\"isActive\", \"isActive\", { unique: false});\r\n            budgetTable.createIndex(\"categoryIds\", \"categoryIds\", { unique: false});\r\n            budgetTable.createIndex(\"ledger\", \"ledger\", { unique: false});\r\n            budgetTable.createIndex(\"noEndDate\", \"noEndDate\", { unique: false});\r\n        }\r\n        else {\r\n            var budgetTable = event.currentTarget.transaction.objectStore(\"budget\");\r\n            if (!budgetTable.indexNames.contains(\"showInDashboard\")) {\r\n                budgetTable.createIndex(\"showInDashboard\", \"showInDashboard\", { unique: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    request.onsuccess = function (event) {\r\n        var db = event.target.result;\r\n\r\n        //---------------------------------------\r\n        //create default account (personal)\r\n        //---------------------------------------\r\n        var transaction = db.transaction([\"account\"], \"readonly\");\r\n        var accountStore = transaction.objectStore(\"account\");\r\n        var selectAccounts = accountStore.getAll();\r\n        transaction.oncomplete = function (event) {            \r\n            if (selectAccounts.result.length === 0) {\r\n                var addAccountTransaction = db.transaction([\"account\"], \"readwrite\");\r\n                var accountStore1 = addAccountTransaction.objectStore(\"account\");\r\n                accountStore1.put({name: \"Personal\"});\r\n            }\r\n        }\r\n        //----------------------------------------------------------------\r\n        //create default categories (food, transportation, clothing)\r\n        //----------------------------------------------------------------\r\n        var categoryTransaction = db.transaction([\"category\"], \"readonly\");\r\n        var categoryStore = categoryTransaction.objectStore(\"category\");\r\n        var selectCategories = categoryStore.getAll();\r\n        categoryTransaction.oncomplete = function (event) {\r\n            if (selectCategories.result.length === 0) {\r\n                var addCategoriesTransaction = db.transaction([\"category\"], \"readwrite\");\r\n                var addCategoryStore = addCategoriesTransaction.objectStore(\"category\");\r\n                addCategoryStore.put({name: \"Food\"});\r\n                addCategoryStore.put({name: \"Transportation\"});\r\n                addCategoryStore.put({name: \"Clothing\"});\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":""}