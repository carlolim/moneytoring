{"version":3,"sources":["components/common/navigation-links.js","components/common/my-toolbar-with-navigation.js","helpers.js","components/dashboard/widgets/expense-summary.js","components/dashboard/widgets/income-summary.js","components/dashboard/dashboard.js","components/common/filter.js","components/expense/expense.js","components/income/income.js","components/common/my-toolbar.js","modules/budget-module.js","components/expense/new-expense.js","components/expense/edit-expense.js","components/dashboard/widgets/budget-summary.js","components/budget/budget.js","components/budget/new-budget.js","components/common/main.js","App.js","serviceWorker.js","index.js","database.js"],"names":["NavigationLinks","react_default","a","createElement","style","width","List_default","Link","to","textDecoration","ListItem_default","ListItemIcon_default","Home_default","ListItemText_default","primary","MoneyOff_default","AttachMoney_default","ListAlt_default","Component","styles","root","flexGrow","paddingTop","grow","menuButton","marginLeft","marginRight","MyToolbarWithNavigation","state","isOpen","toggleDrawer","_this","setState","SwipeableDrawer_default","open","this","onClose","onOpen","disableBackdropTransition","tabIndex","role","onClick","onKeyDown","navigation_links","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Typography_default","variant","props","title","buttons","map","item","index","key","formatMoney","n","c","d","t","isNaN","Math","abs","undefined","s","i","String","parseInt","Number","toFixed","j","length","substr","replace","slice","selectAll","table","done","indexedDB","onsuccess","event","target","result","transaction","objectStore","getAll","insert","data","tx","put","oncomplete","onerror","update","budgetRepeatEnum","none","daily","weekly","monthly","custom","filterTypes","ExpenseSummary","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getExpensesForCategory","items","categoryId","filter","m","subTotal","reduce","currValue","amount","filterType","from","moment","hours","minutes","seconds","filterDate","total","loadSummary","format","objectSpread","_this2","range","IDBKeyRange","bound","toDate","expenses","categories","selectall","openCursor","selectAllCategory","cursor","push","value","continue","categoryItemProperties","category","generateFilterDate","add","subtract","classes","Card_default","className","card","CardHeader_default","action","Fragment","prev","bind","ArrowBackIos_default","next","ArrowForwardIos_default","subheader","Divider_default","CardContent_default","cardContent","name","float","expenseItem","light","nothingToDoHere","CardActions_default","cardFooter","component","withStyles","minWidth","height","overflowY","textAlign","marginBottom","fabPrimary","bottom","right","zIndex","fabExpense","fabIncome","backdrop","Dashboard","toggleMenu","showMenu","newExpense","history","my_toolbar_with_navigation","Fab_default","size","Backdrop_default","Close_default","Add_default","padding","expense_summary","Filter","changeViewType","e","viewType","changeStateValue","parentProperty","childProperty","defineProperty","handleApply","startDate","Date","endDate","errors","yearly","hasError","date","week","weekParts","split","weekNumber","year","startOf","endOf","month","monthParts","applyFilter","DialogTitle_default","DialogContent_default","FormControl_default","margin","InputLabel_default","Select_default","onChange","MenuItem_default","TextField_default","error","ref","label","type","DialogActions_default","Button_default","close","Expense","toggleFilter","showFilter","loadExpenses","localStorage","setItem","JSON","stringify","currentFilter","store","shits","renderShits","navigate","getItem","parse","index_es","FilterList_default","appBar","filterLabel","marginTop","minHeight","expenseId","button","secondary","common_filter","Income","MyToolbar","showBackButton","onBack","ArrowBack_default","getValidBudgetsForExpense","expense","Promise","resolve","reject","budgets","validBudgets","budget","categoryIds","indexOf","accountIds","accountId","noEndDate","alignBudgetLedgersForExpense","repeat","ledger","spent","ledgerFound","getBudgetRepeatTypeForMoment","NewExpense","description","accounts","account","property","_this3","parseFloat","success","then","alignedBudgets","putNext","_this4","my_toolbar","goBack","handleSave","Save_default","handleChangeProperty","onBlur","formatCurrency","multiline","rows","EditExpense","loadExpense","id","select","get","handleDelete","delete","toggleDeleteModal","showDelete","match","params","self","Delete_default","autoFocus","BudgetSummary","progressBarClassName","percent","colorPrimary","progressGreen","barColorPrimary","progressBarGreen","progressYellow","progressBarYellow","progressRed","progressBarRed","gutterBottom","textCenter","lineHeight","concat","floatRight","bullet","display","transform","fontSize","pos","backgroundColor","Budget","componentDidMount","nonRepeating","validateBudget","find","toString","changeDisplay","start","end","budget_summary","budget_RenderItems","fab","RenderItems","divider","align","borderColor","myClass","font","menuProps","PaperProps","maxHeight","NewBudget","selectedAccounts","selectedCategories","isActive","loadAccounts","loadCategories","unshift","all","multiple","input","renderValue","selected","join","MenuProps","checked","f","disabled","control","Main","Switch","Route","path","App","main","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","matchMedia","matches","createHashHistory","createBrowserHistory","request","onupgradeneeded","db","objectStoreNames","contains","expenseTable","createObjectStore","keyPath","autoIncrement","createIndex","unique","budgetTable","selectAccounts","categoryTransaction","selectCategories","addCategoryStore","initialize","ReactDOM","render","Router","basename","process","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.49a572bb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AttachMoneyICon from \"@material-ui/icons/AttachMoney\";\r\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\";\r\nimport ListAlt from \"@material-ui/icons/ListAlt\";\r\n\r\nclass NavigationLinks extends Component {\r\n    render() {\r\n      return (\r\n        <div style={{width: '250px'}}>\r\n          <List>\r\n            <Link to='/' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <HomeIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to='/expense' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <MoneyOffIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Expense\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to='/income' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <AttachMoneyICon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Income\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to='/budget' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <ListAlt />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Budget\" />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default NavigationLinks;","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NavigationLinks from \"./navigation-links\";\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 56\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass MyToolbarWithNavigation extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  toggleDrawer = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div style={styles.root}>\r\n        <SwipeableDrawer\r\n          open={this.state.isOpen}\r\n          onClose={this.toggleDrawer}\r\n          onOpen={this.toggleDrawer}\r\n          disableBackdropTransition={true}>\r\n              <div\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                onClick={this.toggleDrawer}\r\n                onKeyDown={this.toggleDrawer}>\r\n                  <NavigationLinks />\r\n              </div>\r\n        </SwipeableDrawer>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton onClick={this.toggleDrawer} style={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\r\n                {this.props.title}\r\n            </Typography>\r\n            {this.props.buttons.map((item, index) => <span color=\"inherit\" key={index}>{item}</span>)}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyToolbarWithNavigation;","import moment from \"moment\";\r\n\r\n\r\nexport const formatMoney = (n, c, d, t) => {\r\n  var c = isNaN(c = Math.abs(c)) ? 2 : c,\r\n    d = d === undefined ? \".\" : d,\r\n    t = t === undefined ? \",\" : t,\r\n    s = n < 0 ? \"-\" : \"\",\r\n    i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),\r\n    j = (j = i.length) > 3 ? j % 3 : 0;\r\n\r\n  return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\");\r\n};\r\n\r\nexport const selectAll = (table, done) => {\r\n  let db = indexedDB.open(\"Moneytoring\");\r\n  db.onsuccess = (event) => {\r\n    let tx = event.target.result.transaction([table], \"readonly\");\r\n    let store = tx.objectStore(table);\r\n    let allItems = store.getAll();\r\n    allItems.onsuccess = (event) => {\r\n      done(event.target.result);\r\n    }\r\n  }\r\n}\r\n\r\nexport const selectAllWhereDateBetween = (table, column, fromDate, toDate, done) => {\r\n  let db = indexedDB.open(\"Moneytoring\");\r\n  db.onsuccess = (event) => {\r\n    let tx = event.target.result.transaction([table], \"readonly\");\r\n    var store = tx.objectStore(table);\r\n    let range = IDBKeyRange.bound(fromDate, toDate);\r\n    var selectall = store.index(column).openCursor(range, 'prev');\r\n    let shits = [];\r\n    selectall.onsuccess = (event) => {\r\n      var cursor = event.target.result;\r\n      if (cursor) {\r\n        shits.push(cursor.value);\r\n        cursor.continue();\r\n      }\r\n    }\r\n    tx.oncomplete = () => {\r\n      done({ items: shits });\r\n    }\r\n  }\r\n}\r\n\r\nexport const insert = (table, data, done) => {\r\n  let db = indexedDB.open(\"Moneytoring\");\r\n  db.onsuccess = (event) => {\r\n    let tx = event.target.result.transaction([table], \"readwrite\");\r\n    let store = tx.objectStore(table);\r\n    store.put(data);\r\n    tx.oncomplete = (event) => {\r\n      done(true);\r\n    }\r\n    tx.onerror = (event) => {\r\n      done(false);\r\n    }\r\n  }\r\n}\r\n\r\nexport const update = (table, data, done) => {\r\n  let db = indexedDB.open(\"Moneytoring\");\r\n  db.onsuccess = (event) => {\r\n    let tx = event.target.result.transaction([table], \"readwrite\");\r\n    let store = tx.objectStore(table);\r\n    store.put(data);\r\n    tx.oncomplete = (event) => {\r\n      done(true);\r\n    }\r\n    tx.onerror = (event) => {\r\n      done(false);\r\n    }\r\n  }\r\n}\r\n\r\nexport const budgetRepeatEnum = {\r\n  none: 0,\r\n  daily: 1,\r\n  weekly: 2,\r\n  monthly: 3,\r\n  custom: 4\r\n}\r\n","import React, {Component} from 'react';\r\nimport moment from \"moment\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\nimport { formatMoney } from \"../../../helpers\";\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  cardContent: {\r\n    height: 150,\r\n    overflowY: 'auto'\r\n  },\r\n  cardFooter: {\r\n    float: 'right'\r\n  },\r\n  expenseItem:{\r\n    marginLeft: 20\r\n  },\r\n  nothingToDoHere: {\r\n    paddingTop: 35,\r\n    textAlign: 'center'\r\n  }\r\n};\r\n\r\nconst filterTypes = {daily: 1, weekly: 2, monthly: 3}\r\n\r\nclass ExpenseSummary extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      filterType: filterTypes.daily,\r\n      from: moment().hours(0).minutes(0).seconds(0),\r\n      to: moment().hours(23).minutes(59).seconds(59),\r\n      filterDate: '',\r\n      data: [],\r\n      total: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.loadSummary();\r\n  }\r\n\r\n  generateFilterDate () {\r\n    let filterDate = this.state.from.format(\"MMM DD [(]ddd[)]\");\r\n    if (this.state.filterType !== filterTypes.daily) {\r\n      filterDate = this.state.from.format(\"MMM DD\") + ' - ' + this.state.to.format(\"MMM DD\");\r\n    }\r\n    this.setState({...this.state, filterDate});\r\n  }\r\n  \r\n  loadSummary () {\r\n    var range = IDBKeyRange.bound(this.state.from.toDate(), this.state.to.toDate());\r\n    let expenses = [];\r\n    let categories = [];\r\n    let total = 0;\r\n    let data = [];\r\n\r\n    const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n    requestDatabase.onsuccess = (event) => {\r\n        var db = event.target.result;\r\n        var transaction = db.transaction([\"expense\", \"category\"], \"readonly\");\r\n        var store = transaction.objectStore(\"expense\");\r\n        var selectall = store.index('date').openCursor(range, 'prev');\r\n        var selectAllCategory = transaction.objectStore(\"category\").getAll();\r\n        selectall.onsuccess = (event) => {\r\n            var cursor = event.target.result;\r\n            if(cursor) {\r\n                expenses.push(cursor.value);\r\n                total += cursor.value.amount;\r\n                cursor.continue();\r\n            }\r\n        }\r\n\r\n        selectAllCategory.onsuccess = (event) => {\r\n          categories = event.target.result;\r\n        }\r\n\r\n        transaction.oncomplete = () => {\r\n          for(var i=0; i<categories.length; i++){\r\n            let categoryItemProperties = this.getExpensesForCategory(expenses, categories[i].categoryId);\r\n            data.push({\r\n              category: categories[i],\r\n              subTotal: categoryItemProperties.subTotal,\r\n              items: categoryItemProperties.data\r\n            });\r\n          }\r\n          this.setState({...this.state, data, total});\r\n          this.generateFilterDate();\r\n        }\r\n    }\r\n  }\r\n\r\n  getExpensesForCategory = (items, categoryId) => {\r\n    let data = items.filter(m => { return m.categoryId === categoryId });\r\n    return { \r\n      data,\r\n      subTotal: data.reduce((currValue, i) => { return i.amount + currValue; }, 0)\r\n    };\r\n  }\r\n\r\n  changeFilterType () {\r\n\r\n  }\r\n\r\n  next () {\r\n    this.setState({...this.state, from: this.state.from.add(1, \"days\"), to: this.state.to.add(1, \"days\")});\r\n    this.loadSummary();\r\n  }\r\n\r\n  prev () {\r\n    this.setState({...this.state, from: this.state.from.subtract(1, \"days\"), to: this.state.to.subtract(1, \"days\")});\r\n    this.loadSummary();\r\n  }\r\n\r\n  render() {\r\n      const { classes } = this.props;\r\n      return (\r\n        <Card className={classes.card}>\r\n          <CardHeader\r\n            action={\r\n            <>\r\n              <IconButton onClick={this.prev.bind(this)}>\r\n                <ArrowBackIos />\r\n              </IconButton>\r\n              <IconButton onClick={this.next.bind(this)}>\r\n                <ArrowForwardIos />\r\n              </IconButton>\r\n            </>}\r\n            title=\"Expense\"\r\n            subheader={this.state.filterDate}\r\n          />\r\n          <Divider />\r\n          <CardContent className={classes.cardContent}>\r\n            {this.state.data.map((data, index) =>\r\n                data.items.length > 0 ?\r\n                    <div key={index}>\r\n                        <Typography variant=\"overline\">\r\n                            {data.category.name}\r\n                            <span style={{float: 'right'}}>{formatMoney(data.subTotal)}</span>\r\n                        </Typography>\r\n                        <div className={classes.expenseItem}>\r\n                          {data.items.map((item, i)=> \r\n                              <Typography key={i} variant=\"caption\">{item.title}<span style={{float: 'right'}}>{formatMoney(item.amount)}</span></Typography>\r\n                          )}\r\n                        </div>\r\n                        <Divider light />\r\n                    </div>\r\n                : null\r\n            )}\r\n            {this.state.total === 0 ? <Typography variant=\"body1\" className={classes.nothingToDoHere}>to do here: nothing</Typography> : null}\r\n          </CardContent>\r\n          <Divider />\r\n          <CardActions className={classes.cardFooter}>\r\n            <Typography component=\"p\">{formatMoney(this.state.total)}</Typography>\r\n          </CardActions>\r\n        </Card>\r\n      );\r\n  }\r\n}\r\n\r\nExpenseSummary.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ExpenseSummary);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275,\r\n    marginBottom: '10px'\r\n  },\r\n  cardFooter: {\r\n    float: 'right'\r\n  }\r\n};\r\n\r\nfunction IncomeSummary(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        action={[\r\n          <IconButton color=\"inherit\" aria-label=\"Menu\">\r\n            <ArrowBackIos />\r\n          </IconButton>,\r\n          <IconButton>\r\n            <ArrowForwardIos />\r\n          </IconButton>\r\n        ]}\r\n        title=\"Income\"\r\n        subheader=\"January 2019\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        \r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.cardFooter}>\r\n        <Typography component=\"p\">0.00</Typography>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nIncomeSummary.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IncomeSummary);","import React, { Component } from 'react';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AttachMoneyICon from \"@material-ui/icons/AttachMoney\";\r\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport ExpenseSummary from \"./widgets/expense-summary\";\r\nimport IncomeSummary from \"./widgets/income-summary\";\r\n\r\n\r\nconst styles = {\r\n  fabPrimary: {\r\n    position: 'absolute', bottom: '15px', right: '15px', zIndex: 2\r\n  },\r\n  fabExpense: {\r\n    position: 'absolute', bottom: '150px',  right: '23px', zIndex: 2\r\n  },\r\n  fabIncome: {\r\n    position: 'absolute',bottom: '90px', right: '23px', zIndex: 2\r\n  },\r\n  backdrop: {\r\n    zIndex: 1\r\n  }\r\n}\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {showMenu: false}\r\n    }\r\n\r\n    toggleMenu = () => {\r\n      this.setState({...this.state, showMenu: !this.state.showMenu});\r\n    }\r\n\r\n    newExpense = () => {\r\n        this.props.history.push('/expense/new');\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <MyToolbarWithNavigation title=\"moneytoring\" buttons={[]} />\r\n            {this.state.showMenu ? \r\n              <>\r\n                <Fab onClick={this.newExpense} className=\"animated jello\" color=\"secondary\" size=\"small\" aria-label=\"expense\" style={styles.fabExpense}>\r\n                  <MoneyOffIcon />\r\n                </Fab>\r\n                <Fab className=\"animated jello\" color=\"default\" size=\"small\" aria-label=\"income\" style={styles.fabIncome}>\r\n                  <AttachMoneyICon />\r\n                </Fab>\r\n                <Backdrop onClick={this.toggleMenu} open={true} style={styles.backdrop} />\r\n              </>\r\n            : null }\r\n            <Fab onClick={this.toggleMenu} color=\"primary\" aria-label=\"Add\" style={styles.fabPrimary}>\r\n              {this.state.showMenu ? <CloseIcon /> : <AddIcon />}\r\n            </Fab>\r\n            <div style={{padding: '10px'}}>\r\n                <ExpenseSummary />\r\n            </div>\r\n            <div style={{padding: '10px'}}>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Dashboard;\r\n  ","import React, { Component } from 'react';\r\nimport moment from \"moment\";\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            viewType: 'daily',\r\n            daily: {\r\n                date: moment().format('YYYY-MM-DD')\r\n            },\r\n            weekly: {\r\n                week: ''\r\n            },\r\n            monthly: {\r\n                month: ''\r\n            },\r\n            yearly: {\r\n                year: ''\r\n            },\r\n            custom: {\r\n                from: '',\r\n                to:''\r\n            },\r\n            errors: {\r\n                daily: false,\r\n                weekly: false,\r\n                monthly: false,\r\n                yearly: false,\r\n                from: false,\r\n                to: false\r\n            }\r\n        }\r\n    }\r\n\r\n    changeViewType = (e) => {\r\n        this.setState({...this.state, viewType: e.target.value });\r\n    }\r\n\r\n    changeStateValue = (parentProperty, childProperty, e) => {\r\n        this.setState({...this.state, [parentProperty]: { ...this.state[parentProperty], [childProperty]: e.target.value }});\r\n    }\r\n\r\n    handleApply = () => {\r\n        let startDate = new Date();\r\n        let endDate = new Date();\r\n        let errors = {\r\n            daily: false,\r\n            weekly: false,\r\n            monthly: false,\r\n            yearly: false,\r\n            from: false,\r\n            to: false\r\n        };\r\n        let hasError = false;\r\n        switch(this.state.viewType) {\r\n            case 'daily':\r\n                if(this.state.daily.date === '') {\r\n                    hasError = true;\r\n                    errors.daily = true;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.daily.date).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.daily.date).hours(23).minutes(59).seconds(59);\r\n                }\r\n                break;\r\n            case 'weekly':\r\n                if (this.state.weekly.week === '') {\r\n                    hasError = true;\r\n                    errors.weekly = true;\r\n                }\r\n                else {\r\n                    let weekParts = this.state.weekly.week.split('-');\r\n                    let weekNumber = Number(weekParts[1].replace('W', ''));\r\n                    startDate = moment().year(Number(weekParts[0])).week(weekNumber).startOf('week');\r\n                    endDate = moment().year(Number(weekParts[0])).week(weekNumber).endOf('week');\r\n                }\r\n                break;\r\n            case 'monthly':\r\n                if (this.state.monthly.month === '') {\r\n                    hasError = true;\r\n                    errors.monthly = true;\r\n                }\r\n                else {\r\n                    let monthParts = this.state.monthly.month.split('-');\r\n                    startDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).startOf('month');\r\n                    endDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).endOf('month');\r\n                }\r\n                break;\r\n            case 'yearly':\r\n                if (this.state.yearly.year === '' || isNaN(this.state.yearly.year)) {\r\n                    hasError = true;\r\n                    errors.yearly = true;\r\n                }\r\n                else {\r\n                    let year = Number(this.state.yearly.year);\r\n                    startDate = moment().year(year).startOf('year');\r\n                    endDate = moment().year(year).endOf('year');\r\n                }\r\n                break;\r\n           default: //custom range\r\n                if(this.state.custom.from === ''){\r\n                    hasError = true;\r\n                    errors.from = true;\r\n                }\r\n                else if(this.state.custom.to === '') {\r\n                    hasError = true;\r\n                    errors.to = true;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.custom.from).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.custom.to).hours(23).minutes(59).seconds(59);\r\n                }\r\n        }\r\n        if(hasError) {\r\n            this.setState({...this.state, errors });\r\n        }\r\n        else {\r\n            this.props.applyFilter(startDate, endDate, this.state.viewType);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <DialogTitle>Filter expense</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>View</InputLabel>\r\n                        <Select\r\n                            value={this.state.viewType} onChange={this.changeViewType.bind(this)}>\r\n                                <MenuItem value=\"daily\"><em>Daily</em></MenuItem>\r\n                                <MenuItem value=\"weekly\"><em>Weekly</em></MenuItem>\r\n                                <MenuItem value=\"monthly\"><em>Monthly</em></MenuItem>\r\n                                <MenuItem value=\"yearly\"><em>Yearly</em></MenuItem>\r\n                                <MenuItem value=\"custom\"><em>Custom</em></MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    {this.state.viewType === 'daily' ?\r\n                        <TextField\r\n                            error={this.state.errors.daily}\r\n                            ref=\"title\"\r\n                            label=\"Date\"\r\n                            value={this.state.daily.date} \r\n                            onChange={this.changeStateValue.bind(this, 'daily', 'date')}\r\n                            margin=\"normal\"\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'weekly' ?\r\n                        <TextField\r\n                            error={this.state.errors.weekly}\r\n                            ref=\"title\"\r\n                            label=\"Week\"\r\n                            value={this.state.weekly.week} \r\n                            onChange={this.changeStateValue.bind(this, 'weekly', 'week')}\r\n                            margin=\"normal\"\r\n                            type=\"week\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'monthly' ?\r\n                        <TextField\r\n                            error={this.state.errors.monthly}\r\n                            ref=\"title\"\r\n                            label=\"Month\"\r\n                            value={this.state.monthly.month} \r\n                            onChange={this.changeStateValue.bind(this, 'monthly', 'month')}\r\n                            margin=\"normal\"\r\n                            type=\"month\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'yearly' ?\r\n                        <TextField\r\n                            error={this.state.errors.yearly}\r\n                            ref=\"title\"\r\n                            label=\"Year\"\r\n                            value={this.state.yearly.year} \r\n                            onChange={this.changeStateValue.bind(this, 'yearly', 'year')}\r\n                            margin=\"normal\"\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'custom' ?\r\n                        <>\r\n                            <TextField\r\n                                error={this.state.errors.from}\r\n                                ref=\"title\"\r\n                                label=\"From\"\r\n                                value={this.state.custom.from} \r\n                                onChange={this.changeStateValue.bind(this, 'custom', 'from')}\r\n                                margin=\"normal\"\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                            />\r\n                            <TextField\r\n                                error={this.state.errors.to}\r\n                                ref=\"title\"\r\n                                label=\"To\"\r\n                                value={this.state.custom.to} \r\n                                onChange={this.changeStateValue.bind(this, 'custom', 'to')}\r\n                                margin=\"normal\"\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </>\r\n                    : null }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.close} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={this.handleApply.bind(this)} color=\"primary\">Apply</Button>\r\n                </DialogActions>\r\n            </>\r\n        );\r\n    }\r\n}\r\n  \r\n  export default Filter;\r\n  ","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport './expense.css';\r\nimport Filter from \"../common/filter\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport {\r\n  IconButton,\r\n  Dialog,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Fab,\r\n  AppBar,\r\n  Toolbar,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = {\r\n  appBar: {\r\n      position: 'fixed',\r\n      marginTop: 56,\r\n      zIndex: 1\r\n  },\r\n  filterLabel:{\r\n    flexGrow: 1,\r\n    textAlign: 'center'\r\n  }\r\n}\r\n\r\nclass Expense extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let filter = localStorage.getItem('expensefilter');\r\n    if (filter !== null) {\r\n      filter = JSON.parse(filter);\r\n      filter.from = moment(filter.from);\r\n      filter.to = moment(filter.to);\r\n    }\r\n    else {\r\n      filter = {\r\n        viewType: 'daily',\r\n        from: moment().hours(0).minutes(0).seconds(0),\r\n        to: moment().hours(23).minutes(59).seconds(59)\r\n      }\r\n    }\r\n    this.state = {\r\n      currentFilter: '',\r\n      total: 0,\r\n      expenses: [],\r\n      showFilter: false,\r\n      filter\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadExpenses(this.state.filter.from, this.state.filter.to, this.state.filter.viewType);\r\n  }\r\n\r\n  toggleFilter = () => {\r\n    this.setState({ ...this.state, showFilter: !this.state.showFilter });\r\n  }\r\n\r\n  loadExpenses = (from, to, viewType) => {\r\n    let filter = { from, to, viewType};\r\n    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n    if (from.month() === to.month() && from.date() === to.date() && from.year() === to.year()) {\r\n      this.setState({ ...this.state, expenses: [], currentFilter: from.format('MMM DD'), total: 0, filter });\r\n    }\r\n    else {\r\n      this.setState({ ...this.state, expenses: [], currentFilter: from.format('MMM DD') + ' - ' + to.format('MMM DD'), total: 0, filter });\r\n    }\r\n\r\n    var range = null;\r\n    if (from && to) {\r\n      range = IDBKeyRange.bound(from.toDate(), to.toDate());\r\n    }\r\n    const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n    requestDatabase.onsuccess = (event) => {\r\n      var db = event.target.result;\r\n      var transaction = db.transaction([\"expense\"], \"readonly\");\r\n      var store = transaction.objectStore(\"expense\");\r\n      var selectall = range === null ? store.index('date').openCursor(null, 'prev') : store.index('date').openCursor(range, 'prev');\r\n      this.setState({ ...this.state, showFilter: false });\r\n      let shits = [];\r\n      let total = 0;\r\n      selectall.onsuccess = (event) => {\r\n        var cursor = event.target.result;\r\n        if (cursor) {\r\n          shits.push(cursor.value);\r\n          total += cursor.value.amount;\r\n          cursor.continue();\r\n        }\r\n      }\r\n      transaction.oncomplete = () => {\r\n        this.renderShits(shits, total);\r\n      }\r\n    }\r\n  }\r\n\r\n  renderShits = (shits, total) => {\r\n    this.setState({ ...this.state, expenses: shits, total });\r\n  }\r\n\r\n  navigate = (type) => {\r\n    let filterType = \"days\";\r\n    filterType = this.state.filter.viewType === \"weekly\" ? \"weeks\" : filterType;\r\n    filterType = this.state.filter.viewType === \"monthly\" ? \"months\" : filterType;\r\n    filterType = this.state.filter.viewType === \"yearly\" ? \"years\" : filterType;\r\n    let from, to;\r\n    if (type === \"prev\") {\r\n      from = this.state.filter.from.subtract(1, filterType);\r\n      to = this.state.filter.to.subtract(1, filterType);\r\n    }\r\n    else {\r\n      from = this.state.filter.from.add(1, filterType);\r\n      to = this.state.filter.to.add(1, filterType);\r\n    }\r\n\r\n    if (filterType === \"months\") {\r\n      to.endOf(\"month\");\r\n    }\r\n    this.setState({ ...this.state, filter: { ...this.state.filter, from: from, to: to } });\r\n    this.loadExpenses(from, to, this.state.filter.viewType);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyToolbarWithNavigation title=\"Expense\" buttons={[\r\n          <IconButton onClick={this.toggleFilter} color=\"inherit\" aria-label=\"Menu\">\r\n            <FilterList />\r\n          </IconButton>\r\n        ]} />\r\n        <AppBar className={this.props.classes.appBar} color=\"default\">\r\n          <Toolbar>\r\n            {this.state.filter.viewType !== \"custom\" ?\r\n              <IconButton onClick={this.navigate.bind(this, 'prev')}>\r\n                <ArrowBackIos />\r\n              </IconButton>\r\n              : null}\r\n            <Typography component=\"p\" className={this.props.classes.filterLabel}>\r\n              {this.state.currentFilter}<br /><small>{formatMoney(this.state.total)}</small>\r\n            </Typography>\r\n            {this.state.filter.viewType !== \"custom\" ?\r\n              <IconButton onClick={this.navigate.bind(this, 'next')}>\r\n                <ArrowForwardIos />\r\n              </IconButton>\r\n              : null}\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <div style={{ marginTop: '56px', overflowY: 'auto', minHeight: '100%' }}>\r\n          <List component=\"nav\">\r\n            {this.state.expenses.map(item =>\r\n              <Link key={item.expenseId} style={{ textDecoration: 'none' }} className=\"list-item\" to={'/expense/edit/' + item.expenseId}>\r\n                <ListItem button>\r\n                  <ListItemText primary={item.title} secondary={moment(item.date).format('MMM DD hh:mma (ddd)')} />\r\n                  <Typography className=\"float-right\">{formatMoney(item.amount)}</Typography >\r\n                </ListItem>\r\n                <Divider light />\r\n              </Link>\r\n            )}\r\n          </List>\r\n        </div>\r\n\r\n        <Dialog\r\n          onClose={this.toggleFilter}\r\n          open={this.state.showFilter}>\r\n          <Filter close={this.toggleFilter.bind(this)} applyFilter={this.loadExpenses.bind(this)} />\r\n        </Dialog>\r\n\r\n        <Fab onClick={() => { this.props.history.push(\"/expense/new\") }} color=\"primary\" aria-label=\"Add\" style={{ position: 'fixed', bottom: '15px', right: '15px' }}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExpense.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Expense);","import React, { Component } from 'react';\r\n\r\nclass Income extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n            <h1>Income index</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Income;\r\n  ","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 56\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass MyToolbar extends Component {\r\n  render(){\r\n    return (\r\n      <div style={styles.root}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            {this.props.showBackButton ? \r\n              <IconButton onClick={this.props.onBack} style={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <ArrowBack />\r\n              </IconButton>\r\n            : null}\r\n            <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\r\n              {this.props.title}\r\n            </Typography>\r\n            {this.props.buttons.map((item, index) => <span key={index}>{item}</span>)}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyToolbar;","import { update, selectAll, budgetRepeatEnum } from \"../helpers\";\r\nimport moment from \"moment\";\r\n\r\nexport const addSpentToBudget = (expense) => {\r\n    getValidBudgetsForExpense(expense).then((validBudgets) => {\r\n      alignBudgetLedgersForExpense(validBudgets, expense).then((alignedBudgets) => {\r\n        if (alignedBudgets.length > 0) {\r\n          let i = 0;\r\n          putNext(false);\r\n          function putNext(success) {\r\n            if (success) i++;\r\n            if (i < alignedBudgets.length) {\r\n              update(\"budget\", alignedBudgets[i], putNext);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    });\r\n  }\r\n  \r\n  export const getValidBudgetsForExpense = (expense) => {\r\n    return new Promise((resolve, reject) => {\r\n      selectAll(\"budget\", (budgets) => {\r\n        let validBudgets = [];\r\n        for (var i = 0; i < budgets.length; i++) {\r\n          let budget = budgets[i];\r\n          if ((budget.categoryIds.indexOf(expense.categoryId) !== -1 || budget.categoryIds.indexOf(0) !== -1) &&\r\n            (budget.accountIds.indexOf(expense.accountId) !== -1 || budget.accountIds.indexOf(0) !== -1) &&\r\n            (moment(budget.startDate).startOf(\"day\").toDate() <= expense.date &&\r\n              (budget.noEndDate || moment(budget.endDate).endOf(\"day\").toDate() >= expense.date))\r\n          ) {\r\n            validBudgets.push(budget);\r\n          }\r\n        }\r\n        resolve(validBudgets);\r\n      });\r\n    });\r\n  }\r\n  \r\n  export const alignBudgetLedgersForExpense = (validBudgets, expense) => {\r\n    return new Promise((resolve, reject) => {\r\n      for (var i = 0; i < validBudgets.length; i++) {\r\n        let budget = validBudgets[i];\r\n        if (budget.repeat === budgetRepeatEnum.none) {\r\n          validBudgets[i].ledger[0].spent += expense.amount;\r\n        }\r\n        else {\r\n          let ledgerFound = false;\r\n          for (var c = 0; c < budget.ledger.length; c++) {\r\n            let ledger = budget.ledger[c];\r\n            ledgerFound = false;\r\n            if (ledger !== null && ledger !== undefined) {\r\n              if (moment(ledger.startDate).startOf(\"day\").toDate() <= expense.date &&\r\n                (moment(ledger.endDate).endOf(\"day\").toDate() >= expense.date)) {\r\n                ledgerFound = true;\r\n                validBudgets[i].ledger[c].spent += expense.amount;\r\n                continue;\r\n              }\r\n            }\r\n          }\r\n          if (!ledgerFound) {\r\n            let type = getBudgetRepeatTypeForMoment(validBudgets[i]);\r\n            if (type) {\r\n              validBudgets[i].ledger.push({\r\n                amount: validBudgets[i].amount,\r\n                spent: expense.amount,\r\n                startDate: moment(expense.date).startOf(type).toDate(),\r\n                endDate: moment(expense.date).endOf(type).toDate()\r\n              })\r\n            }\r\n          }\r\n        }\r\n      }\r\n  \r\n      resolve(validBudgets);\r\n    });\r\n  }\r\n  \r\n  export const getBudgetRepeatTypeForMoment = (budget) => {\r\n    if (budget.repeat === budgetRepeatEnum.daily) return \"day\";\r\n    else if (budget.repeat === budgetRepeatEnum.weekly) return \"week\";\r\n    else if (budget.repeat === budgetRepeatEnum.monthly) return \"month\";\r\n    return undefined;\r\n  }","import React, { Component } from 'react';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport { addSpentToBudget } from \"../../modules/budget-module\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { selectAll, insert } from \"../../helpers\";\r\n\r\n\r\nclass NewExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 1,\r\n            description: '',\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            accounts: [],\r\n            categories: [],\r\n            errors: {\r\n                title: false,\r\n                category: false,\r\n                amount: false,\r\n                account: false,\r\n                date: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        selectAll(\"account\", (accounts) => {\r\n            this.setState({ ...this.state, accounts });\r\n        });\r\n        selectAll(\"category\", (categories) => {\r\n            this.setState({ ...this.state, categories });\r\n        });\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    handleSave() {\r\n        var data = {\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n\r\n        let hasError = false;\r\n        let errors = {\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false,\r\n            date: false\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.date || this.state.date === '') {\r\n            errors.date = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            insert(\"expense\", data, (success) => {\r\n                addSpentToBudget(data);\r\n                if (success) {\r\n                    let filter = {\r\n                        from: moment(data.date).hours(0).minutes(0).seconds(0),\r\n                        to: moment(data.date).hours(0).hours(23).minutes(59).seconds(59),\r\n                        viewType: 'daily'\r\n                    };\r\n                    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n                    this.props.history.push(\"/expense\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add expense\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Save /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Account</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.account}\r\n                            value={this.state.accountId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.title}\r\n                        label=\"Title\"\r\n                        value={this.state.title}\r\n                        onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.category}\r\n                            value={this.state.categoryId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.date}\r\n                        label=\"Date\"\r\n                        type=\"datetime-local\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleChangeProperty.bind(this, 'date')}\r\n                    />\r\n                    <TextField\r\n                        className=\"form-control\"\r\n                        label=\"Notes\"\r\n                        multiline\r\n                        rows=\"6\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewExpense;\r\n","import React, { Component } from 'react';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { selectAll, update } from \"../../helpers\";\r\nimport { DialogTitle, Dialog, Button, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\n\r\nclass EditExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDelete: false,\r\n            expenseId: Number(this.props.match.params.id),\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 0,\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            description: '',\r\n            accounts: [],\r\n            categories: [],\r\n            errors: {\r\n                title: false,\r\n                category: false,\r\n                amount: false,\r\n                account: false,\r\n                date: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        selectAll(\"account\", (accounts) => {\r\n            this.setState({ ...this.state, accounts });\r\n        });\r\n        selectAll(\"category\", (categories) => {\r\n            this.setState({ ...this.state, categories });\r\n        });\r\n        this.loadExpense(this.state.expenseId, this);\r\n    }\r\n\r\n    loadExpense = (id, component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"expense\"], \"readonly\");\r\n    \r\n            var store = transaction.objectStore(\"expense\");\r\n            var select = store.get(id);\r\n\r\n            transaction.oncomplete = (event) => {\r\n                if (!select.result){\r\n                    this.props.history.push(\"/expense\");\r\n                    return;\r\n                }\r\n                component.setState({\r\n                    ...component.state,\r\n                    title: select.result.title,\r\n                    categoryId: select.result.categoryId,\r\n                    amount: formatMoney(select.result.amount),\r\n                    accountId: select.result.accountId,\r\n                    description: select.result.description,\r\n                    date: moment(select.result.date).format('YYYY-MM-DD[T]HH:mm')\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeProperty (property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({...this.state, [property]: value});\r\n    }\r\n\r\n    formatCurrency (e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({...this.state, \"amount\": value});\r\n    }\r\n\r\n    handleSave () {\r\n        var self = this;\r\n        var data = {\r\n            expenseId: this.state.expenseId,\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n        \r\n        let hasError = false;\r\n        let errors = {\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false,\r\n            date: false\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.date || this.state.date === '') {\r\n            errors.date = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if(hasError) {\r\n            this.setState({...this.state, errors});\r\n        }\r\n        else {\r\n            update(\"expense\", data, (success) => {\r\n                if (success) {\r\n                    let filter = {\r\n                        from: moment(data.date).hours(0).minutes(0).seconds(0),\r\n                        to: moment(data.date).hours(0).hours(23).minutes(59).seconds(59),\r\n                        viewType: 'daily'\r\n                    };\r\n                    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n                    self.props.history.push(\"/expense\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDelete = () => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction(\"expense\", \"readwrite\");\r\n            var store = transaction.objectStore(\"expense\");\r\n            store.delete(this.state.expenseId);\r\n            transaction.oncomplete = (event) => {\r\n                this.props.history.push(\"/expense\");\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleDeleteModal = () => {\r\n        this.setState({...this.state, showDelete: !this.state.showDelete});\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n            <MyToolbar \r\n                onBack={() => {this.props.history.goBack()}}\r\n                showBackButton={true}\r\n                title=\"Add expense\"\r\n                buttons={[\r\n                    (<IconButton onClick={this.toggleDeleteModal.bind(this)}  color=\"inherit\"><Delete /></IconButton>),\r\n                    (<IconButton onClick={this.handleSave.bind(this)}  color=\"inherit\"><Save /></IconButton>)\r\n                ]}\r\n            />\r\n            <div className=\"content\">\r\n                <FormControl className=\"form-control\" margin=\"normal\">\r\n                    <InputLabel>Account</InputLabel>\r\n                    <Select\r\n                        error={this.state.errors.account}\r\n                        value={this.state.accountId}\r\n                        onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    error={this.state.errors.title}\r\n                    label=\"Title\"\r\n                    value={this.state.title}\r\n                    onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                    margin=\"normal\"\r\n                    className=\"form-control\"\r\n                />\r\n                <TextField\r\n                    error={this.state.errors.amount}\r\n                    label=\"Amount\"\r\n                    value={this.state.amount}\r\n                    onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                    margin=\"normal\"\r\n                    className=\"form-control\"\r\n                    onBlur={this.formatCurrency.bind(this)}\r\n                />\r\n                <FormControl className=\"form-control\" margin=\"normal\">\r\n                    <InputLabel>Category</InputLabel>\r\n                    <Select\r\n                        error={this.state.errors.category}\r\n                        value={this.state.categoryId}\r\n                        onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    error={this.state.errors.date}\r\n                    label=\"Date\"\r\n                    type=\"datetime-local\"\r\n                    margin=\"normal\"\r\n                    className=\"form-control\"\r\n                    value={this.state.date} \r\n                    onChange={this.handleChangeProperty.bind(this, 'date')}\r\n                />\r\n                <TextField\r\n                    className=\"form-control\"\r\n                    label=\"Notes\"\r\n                    multiline\r\n                    rows=\"6\"\r\n                    value={this.state.description} \r\n                    onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                    margin=\"normal\"\r\n                />\r\n                \r\n                <Dialog\r\n                    onClose={this.toggleDeleteModal}\r\n                    open={this.state.showDelete}>\r\n                <DialogTitle>Confirm</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>Are you sure you want to delete?</DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.toggleDeleteModal} color=\"primary\" autoFocus>\r\n                    Cancel\r\n                    </Button>\r\n                    <Button onClick={this.handleDelete} color=\"secondary\">\r\n                    Delete\r\n                    </Button>\r\n                </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default EditExpense;\r\n  ","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport { formatMoney } from \"../../../helpers\";\r\nimport { Typography, Card, CardActions, CardContent, Button, LinearProgress } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n    card: {\r\n        minWidth: 275,\r\n        marginBottom: 10\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    progressGreen: {\r\n        backgroundColor: '#b2dfdb'\r\n    },\r\n    progressBarGreen: {\r\n        backgroundColor: '#00695c'\r\n    },\r\n    progressYellow: {\r\n        backgroundColor: '#eaec60'\r\n    },\r\n    progressBarYellow: {\r\n        backgroundColor: '#bfc11d'\r\n    },\r\n    progressRed: {\r\n        backgroundColor: '#ec8686'\r\n    },\r\n    progressBarRed: {\r\n        backgroundColor: '#de0b0b'\r\n    },\r\n    lineHeight: {\r\n        lineHeight: 1,\r\n        marginTop: 5,\r\n        display: 'inline-block'\r\n    },\r\n    floatRight: {\r\n        float: 'right',\r\n        textAlign: 'right'\r\n    },\r\n    textCenter: {\r\n        textAlign: 'center'\r\n    }\r\n}\r\n\r\nclass BudgetSummary extends Component {\r\n\r\n    progressBarClassName = (percent) => {\r\n        let result = {\r\n            colorPrimary: this.props.classes.progressGreen,\r\n            barColorPrimary: this.props.classes.progressBarGreen\r\n        }\r\n        if (percent > 50 && percent <= 75) {\r\n            result.colorPrimary = this.props.classes.progressYellow;\r\n            result.barColorPrimary = this.props.classes.progressBarYellow;\r\n        }\r\n        else if (percent > 75) {\r\n            result.colorPrimary = this.props.classes.progressRed;\r\n            result.barColorPrimary = this.props.classes.progressBarRed;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className={this.props.classes.card}>\r\n                <CardContent>\r\n                    <Typography className={this.props.classes.title} variant=\"title\" color=\"textPrimary\" gutterBottom>{this.props.budget.name}</Typography>\r\n                    <Typography variant=\"overline\" className={this.props.classes.textCenter}>Total: {formatMoney(this.props.budget.amount)}</Typography>\r\n                    <LinearProgress\r\n                        variant=\"determinate\" value={(this.props.budget.spent / this.props.budget.amount) * 100}\r\n                        classes={this.progressBarClassName((this.props.budget.spent / this.props.budget.amount) * 100)}\r\n                    />\r\n                    <div>\r\n                        <Typography variant=\"caption\" className={this.props.classes.lineHeight}>Spent<br />{formatMoney(this.props.budget.spent)}</Typography>\r\n                        <Typography variant=\"caption\" className={`${this.props.classes.lineHeight} ${this.props.classes.floatRight}`}>Remaining<br />{formatMoney(this.props.budget.amount - this.props.budget.spent)}</Typography>\r\n                    </div>\r\n\r\n\r\n\r\n                    {/* <Typography variant=\"h5\" component=\"h2\">asdasd</Typography>\r\n                    <Typography className={this.props.classes.pos} color=\"textSecondary\">adjective</Typography>\r\n                    <Typography component=\"p\">well meaning and kindly.<br />{'\"a benevolent smile\"'}</Typography> */}\r\n                </CardContent>\r\n                {/* <CardActions>\r\n                    <Button size=\"small\">Learn More</Button>\r\n                </CardActions> */}\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nBudgetSummary.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(BudgetSummary);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport { Typography, Fab, Select, MenuItem, Divider } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { selectAll } from \"../../helpers\";\r\nimport { budgetRepeatEnum } from \"../../helpers\";\r\nimport { getBudgetRepeatTypeForMoment } from \"../../modules/budget-module\";\r\nimport BudgetSummary from \"../dashboard/widgets/budget-summary\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst styles = {\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: 15,\r\n        right: 15\r\n    },\r\n    filter: {\r\n        color: '#fff',\r\n        borderColor: '#fff'\r\n    },\r\n    divider: {\r\n        marginBottom: 20\r\n    }\r\n}\r\n\r\nclass Budget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nonRepeating: {\r\n                items: []\r\n            },\r\n            weekly: {\r\n                start: moment().startOf(\"week\"),\r\n                end: moment().endOf(\"week\"),\r\n                items: []\r\n            },\r\n            monthly: {\r\n                start: moment().startOf(\"month\"),\r\n                end: moment().endOf(\"month\"),\r\n                items: []\r\n            },\r\n            daily: {\r\n                start: moment().startOf(\"day\"),\r\n                end: moment().endOf(\"day\"),\r\n                items: []\r\n            },\r\n            display: 'all'\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        selectAll(\"budget\", (items) => {\r\n            let daily = [];\r\n            let weekly = [];\r\n            let monthly = [];\r\n            let nonRepeating = [];\r\n            for (var i = 0; i < items.length; i++) {\r\n                let budget = items[i];\r\n                if (budget.repeat) {\r\n                    let ledger = this.validateBudget(budget);\r\n                    if (ledger != null) {\r\n                        budget.ledger = [ledger];\r\n                        if (budget.repeat === budgetRepeatEnum.daily) daily.push(budget);\r\n                        else if (budget.repeat === budgetRepeatEnum.weekly) weekly.push(budget);\r\n                        else if (budget.repeat === budgetRepeatEnum.monthly) monthly.push(budget);\r\n                    }\r\n                }\r\n                else {\r\n                    nonRepeating.push(budget);\r\n                }\r\n            }\r\n            this.setState({\r\n                ...this.state,\r\n                daily: { ...this.state.daily, items: daily },\r\n                weekly: { ...this.state.weekly, items: weekly },\r\n                monthly: { ...this.state.monthly, items: monthly },\r\n                nonRepeating: { ...this.state.nonRepeating, items: nonRepeating }\r\n            });\r\n        });\r\n    }\r\n\r\n    validateBudget = (budget) => {\r\n        let type = getBudgetRepeatTypeForMoment(budget);\r\n        if (type) {\r\n            if (moment(budget.startDate).startOf(type).toDate() <= moment().startOf(type).toDate() &&\r\n                (budget.noEndDate || moment(budget.endDate).endOf(type).toDate() >= moment().endOf(type))) {\r\n                let ledger = budget.ledger.find(m => m.startDate.toString() === moment().startOf(type).toDate().toString() && m.endDate.toString() === moment().endOf(type).toDate().toString());\r\n                if (ledger === undefined || ledger === null) {\r\n                    ledger = { startDate: moment().startOf(type), endDate: moment().endOf(type), spent: 0, amount: budget.amount };\r\n                }\r\n                return ledger;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    progressBarClassName = (percent) => {\r\n        let result = {\r\n            colorPrimary: this.props.classes.progressGreen,\r\n            barColorPrimary: this.props.classes.progressBarGreen\r\n        }\r\n        if (percent > 50 && percent <= 75) {\r\n            result.colorPrimary = this.props.classes.progressYellow;\r\n            result.barColorPrimary = this.props.classes.progressBarYellow;\r\n        }\r\n        else if (percent > 75) {\r\n            result.colorPrimary = this.props.classes.progressRed;\r\n            result.barColorPrimary = this.props.classes.progressBarRed;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    changeDisplay = (event) => {\r\n        this.setState({ ...this.state, display: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbarWithNavigation title=\"Budget\" buttons={[\r\n                    <Select\r\n                        className={this.props.classes.filter}\r\n                        value=\"all\" onChange={this.changeDisplay.bind(this)}>\r\n                        <MenuItem value=\"all\">All</MenuItem>\r\n                        <MenuItem value=\"daily\">Daily</MenuItem>\r\n                        <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                        <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                    </Select>\r\n                ]} />\r\n\r\n                {this.state.display === 'all' ?\r\n                    this.state.nonRepeating.items.map((item, i) =>\r\n                        <div key={i} className=\"content\">\r\n                            <BudgetSummary budget={{ name: item.name, spent: item.ledger[0].spent, amount: item.ledger[0].amount }} />\r\n                        </div>\r\n                    ) : null}\r\n\r\n                {this.state.display === 'all' || this.state.display === 'daily' ?\r\n                    <RenderItems items={this.state.daily.items} label=\"Daily\" classes={this.props.classes} />\r\n                    : null}\r\n\r\n                {this.state.display === 'all' || this.state.display === 'weekly' ?\r\n                    <RenderItems items={this.state.weekly.items} label=\"Weekly\" classes={this.props.classes} />\r\n                    : null}\r\n\r\n                {this.state.display === 'all' || this.state.display === 'monthly' ?\r\n                    <RenderItems items={this.state.monthly.items} label=\"Monthly\" classes={this.props.classes} />\r\n                    : null}\r\n\r\n                <Fab onClick={() => { this.props.history.push('budget/new') }} color=\"primary\" className={this.props.classes.fab}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst RenderItems = (props) => (\r\n    <>\r\n        {props.items.length > 0 ?\r\n            <>\r\n                <Divider className={props.classes.divider} />\r\n                <Typography variant=\"button\" align=\"center\">{props.label}</Typography>\r\n                {props.items.map((item, i) =>\r\n                    <div key={i} className=\"content\">\r\n                        <BudgetSummary budget={{ name: item.name, spent: item.ledger[0].spent, amount: item.ledger[0].amount }} />\r\n                    </div>\r\n                )}\r\n            </>\r\n            : null}\r\n    </>\r\n)\r\n\r\nBudget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Budget);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney, budgetRepeatEnum } from \"../../helpers\";\r\nimport { selectAll, insert } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { MenuItem, Input, Checkbox, ListItemText, Switch, FormControlLabel } from \"@material-ui/core\";\r\n\r\n\r\nconst styles = {\r\n    myClass: {\r\n        font: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    menuProps: {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: 48 * 4.5 + 8,\r\n                width: 250,\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nclass NewBudget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            selectedAccounts: [{ name: 'All', accountId: 0 }],\r\n            isActive: true,\r\n            repeat: budgetRepeatEnum.none,\r\n            startDate: '', //moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            endDate: '',//moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            amount: '0',\r\n            selectedCategories: [],\r\n            accounts: [],\r\n            categories: [],\r\n            noEndDate: false,\r\n            errors: {\r\n                name: false,\r\n                selectedAccounts: false,\r\n                repeat: false,\r\n                startDate: false,\r\n                endDate: false,\r\n                amount: false,\r\n                selectedCategories: false\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSave = () => {\r\n        var data = {\r\n            name: this.state.name,\r\n            accountIds: this.state.selectedAccounts.map(m => m.accountId),\r\n            categoryIds: this.state.selectedCategories.map(m => m.categoryId),\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            repeat: this.state.repeat,\r\n            startDate: new Date(this.state.startDate),\r\n            noEndDate: this.state.noEndDate,\r\n            endDate: this.state.endDate,\r\n            isActive: true,\r\n            ledger: []\r\n        };\r\n        let hasError = false;\r\n        let errors = {\r\n            name: false,\r\n            selectedAccounts: false,\r\n            repeat: false,\r\n            startDate: false,\r\n            endDate: false,\r\n            amount: false,\r\n            selectedCategories: false\r\n        }\r\n        if (data.name === '') {\r\n            hasError = true;\r\n            errors.name = true;\r\n        }\r\n        if (data.accountIds === null || data.accountIds === undefined || data.accountIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedAccounts = true;\r\n        }\r\n        if (data.categoryIds === null || data.categoryIds === undefined || data.categoryIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedCategories = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.startDate || this.state.startDate === '') {\r\n            hasError = true;\r\n            errors.startDate = true;\r\n        }\r\n        if (!data.noEndDate && (!this.state.endDate || this.state.endDate === '')) {\r\n            hasError = true;\r\n            errors.endDate = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            data.endDate = (data.noEndDate) ? null : new Date(data.endDate);\r\n\r\n            if (!data.repeat) {\r\n                data.ledger.push({\r\n                    startDate: moment(data.startDate).startOf(\"day\").toDate(),\r\n                    endDate: moment(data.endDate).endOf(\"day\").toDate(),\r\n                    spent: 0,\r\n                    amount: data.amount\r\n                });\r\n            }\r\n            insert(\"budget\", data, (success) => {\r\n                if (success) {\r\n                    this.props.history.push(\"/budget\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        selectAll(\"account\", this.loadAccounts);\r\n        selectAll(\"category\", this.loadCategories);\r\n    }\r\n\r\n    loadAccounts = (accounts) => {\r\n        accounts.unshift({ accountId: 0, name: 'All' });\r\n        this.setState({ ...this.state, accounts })\r\n    }\r\n\r\n    loadCategories = (categories) => {\r\n        categories.unshift({ categoryId: 0, name: 'All' });\r\n        this.setState({ ...this.state, categories });\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === \"selectedAccounts\") {\r\n            let all = value.find(m => m.accountId === 0);\r\n            if (all !== null && all !== undefined) {\r\n                value = this.state.accounts;\r\n            }\r\n        }\r\n        else if (property === \"selectedCategories\") {\r\n            let all = value.find(m => m.categoryId === 0);\r\n            if (all !== null && all !== undefined) {\r\n                value = this.state.categories;\r\n            }\r\n        }\r\n        else if (property === \"noEndDate\") {\r\n            value = value === \"true\";\r\n            if (value) {\r\n                this.setState({ ...this.state, endDate: '' });\r\n            }\r\n        }\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add budget\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Save /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <TextField\r\n                        error={this.state.errors.name}\r\n                        label=\"Name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChangeProperty.bind(this, 'name')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Accounts</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedAccounts}\r\n                            multiple\r\n                            value={this.state.selectedAccounts}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedAccounts')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.accounts.map((account, index) => (\r\n                                <MenuItem key={index} value={account}>\r\n                                    <Checkbox checked={this.state.selectedAccounts.map(f => { return f.accountId }).indexOf(account.accountId) > -1} />\r\n                                    <ListItemText primary={account.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedCategories}\r\n                            multiple\r\n                            value={this.state.selectedCategories}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedCategories')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.categories.map((category, index) => (\r\n                                <MenuItem key={index} value={category}>\r\n                                    <Checkbox checked={this.state.selectedCategories.map(f => { return f.categoryId }).indexOf(category.categoryId) > -1} />\r\n                                    <ListItemText primary={category.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Repeat</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.repeat}\r\n                            value={this.state.repeat}\r\n                            onChange={this.handleChangeProperty.bind(this, 'repeat')}>\r\n                            <MenuItem value={budgetRepeatEnum.none}>None</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.daily}>Daily</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.weekly}>Weekly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.monthly}>Monthly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.custom}>Custom</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.startDate}\r\n                        label=\"Start date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.startDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'startDate')}\r\n                    />\r\n\r\n                    <TextField\r\n                        error={this.state.errors.endDate}\r\n                        label=\"End date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        disabled={this.state.noEndDate}\r\n                        value={this.state.endDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'endDate')}\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={this.state.noEndDate}\r\n                                onChange={this.handleChangeProperty.bind(this, 'noEndDate')}\r\n                                value={!this.state.noEndDate}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"no end date\"\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nNewBudget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(NewBudget);","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from '../dashboard/dashboard';\r\nimport Expense from '../expense/expense';\r\nimport Income from '../income/income';\r\nimport NewExpense from '../expense/new-expense';\r\nimport EditExpense from '../expense/edit-expense';\r\nimport Budget from '../budget/budget';\r\nimport NewBudget from '../budget/new-budget';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n      return (\r\n        <main>\r\n            <Switch>\r\n                <Route path='/income' component={Income}/>\r\n                <Route path='/expense/edit/:id' component={EditExpense} />\r\n                <Route path='/expense/new' component={NewExpense} />\r\n                <Route path='/expense' component={Expense}/>\r\n                <Route path='/budget/new' component={NewBudget}/>\r\n                <Route path='/budget' component={Budget}/>\r\n                <Route path='/' component={Dashboard}/>\r\n            </Switch>\r\n        </main>\r\n      );\r\n    }\r\n}\r\n  \r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\r\nimport Main from './components/common/main';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper animate slideInRight\">\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport { initialize } from './database';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\nimport './App.css';\r\nimport 'typeface-roboto';\r\n\r\nconst configureHistory = () => {\r\n  return window.matchMedia('(display-mode: standalone)').matches\r\n    ? createHashHistory()\r\n    : createBrowserHistory()\r\n}\r\nconst history = configureHistory();\r\ninitialize(); //initialize database\r\nReactDOM.render((\r\n    <Router history={history} basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n    </Router>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","\r\nexport const initialize = () => {\r\n    var request = window.indexedDB.open(\"Moneytoring\", 5);\r\n    \r\n    request.onupgradeneeded = function(event) {\r\n        var db = event.target.result;\r\n    \r\n        db.onerror = function(event) {\r\n            \r\n        };\r\n\r\n        if (!db.objectStoreNames.contains('expense')) {\r\n            var expenseTable = db.createObjectStore(\"expense\", { keyPath: \"expenseId\", autoIncrement: true });\r\n            expenseTable.createIndex(\"expenseId\", \"expenseId\", { unique: true });\r\n            expenseTable.createIndex(\"title\", \"title\", { unique: false });\r\n            expenseTable.createIndex(\"categoryId\", \"categoryId\", { unique: false });\r\n            expenseTable.createIndex(\"amount\", \"amount\", { unique: false });\r\n            expenseTable.createIndex(\"accountId\", \"accountId\", { unique: false });\r\n            expenseTable.createIndex(\"description\", \"description\", { unique: false });\r\n            expenseTable.createIndex(\"date\", \"date\", { unique: false });\r\n        }\r\n        \r\n        if (!db.objectStoreNames.contains('account')) {\r\n            var accountTable = db.createObjectStore(\"account\", { keyPath: \"accountId\", autoIncrement: true });\r\n            accountTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n\r\n        if (!db.objectStoreNames.contains('category')) {\r\n            var categoryTable = db.createObjectStore(\"category\", { keyPath: \"categoryId\", autoIncrement: true });\r\n            categoryTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n\r\n        if (!db.objectStoreNames.contains('budget')) {\r\n            var budgetTable = db.createObjectStore(\"budget\", {keyPath: \"budgetId\", autoIncrement: true});\r\n            budgetTable.createIndex(\"name\", \"name\", { unique: false});\r\n            budgetTable.createIndex(\"repeat\", \"repeat\", { unique: false});\r\n            budgetTable.createIndex(\"startDate\", \"startDate\", { unique: false});\r\n            budgetTable.createIndex(\"endDate\", \"endDate\", { unique: false});\r\n            budgetTable.createIndex(\"amount\", \"amount\", { unique: false});\r\n            budgetTable.createIndex(\"accountIds\", \"accountIds\", { unique: false});\r\n            budgetTable.createIndex(\"isActive\", \"isActive\", { unique: false});\r\n            budgetTable.createIndex(\"categoryIds\", \"categoryIds\", { unique: false});\r\n            budgetTable.createIndex(\"ledger\", \"ledger\", { unique: false});\r\n            budgetTable.createIndex(\"noEndDate\", \"noEndDate\", { unique: false});\r\n        }\r\n    }\r\n\r\n    request.onsuccess = function (event) {\r\n        var db = event.target.result;\r\n\r\n        //---------------------------------------\r\n        //create default account (personal)\r\n        //---------------------------------------\r\n        var transaction = db.transaction([\"account\"], \"readonly\");\r\n        var accountStore = transaction.objectStore(\"account\");\r\n        var selectAccounts = accountStore.getAll();\r\n        transaction.oncomplete = function (event) {            \r\n            if (selectAccounts.result.length === 0) {\r\n                var addAccountTransaction = db.transaction([\"account\"], \"readwrite\");\r\n                var accountStore1 = addAccountTransaction.objectStore(\"account\");\r\n                accountStore1.put({name: \"personal\"});\r\n            }\r\n        }\r\n        //----------------------------------------------------------------\r\n        //create default categories (food, transportation, clothing)\r\n        //----------------------------------------------------------------\r\n        var categoryTransaction = db.transaction([\"category\"], \"readonly\");\r\n        var categoryStore = categoryTransaction.objectStore(\"category\");\r\n        var selectCategories = categoryStore.getAll();\r\n        categoryTransaction.oncomplete = function (event) {\r\n            if (selectCategories.result.length === 0) {\r\n                var addCategoriesTransaction = db.transaction([\"category\"], \"readwrite\");\r\n                var addCategoryStore = addCategoriesTransaction.objectStore(\"category\");\r\n                addCategoryStore.put({name: \"food\"});\r\n                addCategoryStore.put({name: \"transportation\"});\r\n                addCategoryStore.put({name: \"clothing\"});\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":""}