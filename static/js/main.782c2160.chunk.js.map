{"version":3,"sources":["components/common/navigation-links.js","components/common/my-toolbar-with-navigation.js","components/dashboard/widgets/expense-summary.js","components/dashboard/widgets/income-summary.js","components/dashboard/dashboard.js","components/common/filter.js","helpers.js","components/expense/expense.js","components/income/income.js","components/common/my-toolbar.js","components/expense/new-expense.js","components/expense/edit-expense.js","components/common/main.js","App.js","serviceWorker.js","index.js","database.js"],"names":["NavigationLinks","react_default","a","createElement","style","width","List_default","Link","to","textDecoration","ListItem_default","ListItemIcon_default","Home_default","ListItemText_default","primary","MoneyOff_default","AttachMoney_default","Component","styles","root","flexGrow","paddingTop","grow","menuButton","marginLeft","marginRight","MyToolbarWithNavigation","state","isOpen","toggleDrawer","_this","setState","SwipeableDrawer_default","open","this","onClose","onOpen","tabIndex","role","onClick","onKeyDown","navigation_links","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Typography_default","variant","props","title","buttons","map","item","index","key","withStyles","card","minWidth","cardFooter","float","classes","Card_default","className","CardHeader_default","action","ArrowBackIos_default","ArrowForwardIos_default","subheader","Divider_default","CardContent_default","CardActions_default","component","marginBottom","fabPrimary","bottom","right","fabExpense","fabIncome","Dashboard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleMenu","objectSpread","showMenu","newExpense","history","push","my_toolbar_with_navigation","padding","expense_summary","income_summary","Fragment","Fab_default","size","Backdrop_default","Close_default","Add_default","Filter","changeViewType","e","viewType","target","value","changeStateValue","parentProperty","childProperty","defineProperty","handleApply","startDate","Date","endDate","errors","daily","weekly","monthly","yearly","from","hasError","date","moment","hours","minutes","seconds","week","weekParts","split","weekNumber","Number","replace","year","startOf","endOf","month","monthParts","isNaN","custom","applyFilter","format","DialogTitle_default","DialogContent_default","FormControl_default","margin","InputLabel_default","Select_default","onChange","bind","MenuItem_default","TextField_default","error","ref","label","type","DialogActions_default","Button_default","close","formatMoney","n","c","d","t","Math","abs","undefined","s","i","String","parseInt","toFixed","j","length","substr","slice","Expense","toggleFilter","showFilter","loadExpenses","expenses","currentFilter","total","range","IDBKeyRange","bound","toDate","indexedDB","onsuccess","event","transaction","result","store","objectStore","selectall","openCursor","shits","cursor","amount","continue","oncomplete","renderShits","_this2","FilterList_default","marginTop","zIndex","display","textAlign","overflowY","minHeight","expenseId","button","light","Dialog_default","filter","Income","MyToolbar","showBackButton","onBack","ArrowBack_default","NewExpense","loadAccounts","selectAccounts","getAll","accounts","loadCategories","selectcategory","categories","categoryId","accountId","description","category","account","property","data","parseFloat","put","_React$createElement","_this3","my_toolbar","goBack","handleSave","Save_default","handleChangeProperty","name","onBlur","formatCurrency","multiline","rows","EditExpense","loadExpense","id","select","get","handleDelete","delete","console","log","window","$","on","modal","match","params","self","Main","Switch","Route","path","App","main","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","matchMedia","matches","createHashHistory","createBrowserHistory","request","onupgradeneeded","db","onerror","objectStoreNames","contains","expenseTable","createObjectStore","keyPath","autoIncrement","createIndex","unique","categoryTransaction","selectCategories","addCategoryStore","initialize","ReactDOM","render","Router","basename","process","src_App","document","getElementById","URL","href","origin","addEventListener","concat","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.782c2160.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AttachMoneyICon from \"@material-ui/icons/AttachMoney\";\r\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\";\r\n\r\nclass NavigationLinks extends Component {\r\n    render() {\r\n      return (\r\n        <div style={{width: '250px'}}>\r\n          <List>\r\n            <Link to='/' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <HomeIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to='/expense' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <MoneyOffIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Expense\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to='/income' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <AttachMoneyICon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Income\" />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default NavigationLinks;","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NavigationLinks from \"./navigation-links\";\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 56\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass MyToolbarWithNavigation extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  toggleDrawer = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div style={styles.root}>\r\n        <SwipeableDrawer\r\n          open={this.state.isOpen}\r\n          onClose={this.toggleDrawer}\r\n          onOpen={this.toggleDrawer}>\r\n              <div\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                onClick={this.toggleDrawer}\r\n                onKeyDown={this.toggleDrawer}>\r\n                  <NavigationLinks />\r\n              </div>\r\n        </SwipeableDrawer>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton onClick={this.toggleDrawer} style={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\r\n                {this.props.title}\r\n            </Typography>\r\n            {this.props.buttons.map((item, index) => <span key={index}>{item}</span>)}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyToolbarWithNavigation;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  cardFooter: {\r\n    float: 'right'\r\n  }\r\n};\r\n\r\nfunction ExpenseSummary(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        action={[\r\n          <IconButton color=\"inherit\" aria-label=\"Menu\">\r\n            <ArrowBackIos />\r\n          </IconButton>,\r\n          <IconButton>\r\n            <ArrowForwardIos />\r\n          </IconButton>\r\n        ]}\r\n        title=\"Expense\"\r\n        subheader=\"September 14\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        \r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.cardFooter}>\r\n        <Typography component=\"p\">0.00</Typography>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nExpenseSummary.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ExpenseSummary);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275,\r\n    marginBottom: '10px'\r\n  },\r\n  cardFooter: {\r\n    float: 'right'\r\n  }\r\n};\r\n\r\nfunction IncomeSummary(props) {\r\n  const { classes } = props;\r\n\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardHeader\r\n        action={[\r\n          <IconButton color=\"inherit\" aria-label=\"Menu\">\r\n            <ArrowBackIos />\r\n          </IconButton>,\r\n          <IconButton>\r\n            <ArrowForwardIos />\r\n          </IconButton>\r\n        ]}\r\n        title=\"Income\"\r\n        subheader=\"January 2019\"\r\n      />\r\n      <Divider />\r\n      <CardContent>\r\n        \r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions className={classes.cardFooter}>\r\n        <Typography component=\"p\">0.00</Typography>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n\r\nIncomeSummary.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(IncomeSummary);","import React, { Component } from 'react';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AttachMoneyICon from \"@material-ui/icons/AttachMoney\";\r\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport ExpenseSummary from \"./widgets/expense-summary\";\r\nimport IncomeSummary from \"./widgets/income-summary\";\r\n\r\n\r\nconst styles = {\r\n  fabPrimary: {\r\n    position: 'absolute', bottom: '15px', right: '15px'\r\n  },\r\n  fabExpense: {\r\n    position: 'absolute', bottom: '150px',  right: '23px'\r\n  },\r\n  fabIncome: {\r\n    position: 'absolute',bottom: '90px', right: '23px'\r\n  }\r\n}\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {showMenu: false}\r\n    }\r\n\r\n    toggleMenu = () => {\r\n      this.setState({...this.state, showMenu: !this.state.showMenu});\r\n    }\r\n\r\n    newExpense = () => {\r\n        this.props.history.push('/expense/new');\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <MyToolbarWithNavigation title=\"moneytoring\" buttons={[]} />\r\n            <div style={{padding: '10px'}}>\r\n                <ExpenseSummary />\r\n            </div>\r\n            <div style={{padding: '10px'}}>\r\n                <IncomeSummary />\r\n            </div>\r\n            {this.state.showMenu ? \r\n              <>\r\n                <Fab onClick={this.newExpense} className=\"animated jello\" color=\"default\" size=\"small\" aria-label=\"expense\" style={styles.fabExpense}>\r\n                  <MoneyOffIcon />\r\n                </Fab>\r\n                <Fab className=\"animated jello\" color=\"default\" size=\"small\" aria-label=\"income\" style={styles.fabIncome}>\r\n                  <AttachMoneyICon />\r\n                </Fab>\r\n                <Backdrop onClick={this.toggleMenu} open={true} />\r\n              </>\r\n            : null }\r\n            <Fab onClick={this.toggleMenu} color=\"primary\" aria-label=\"Add\" style={styles.fabPrimary}>\r\n              {this.state.showMenu ? <CloseIcon /> : <AddIcon />}\r\n            </Fab>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Dashboard;\r\n  ","import React, { Component } from 'react';\r\nimport moment from \"moment\";\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            viewType: 'daily',\r\n            daily: {\r\n                date: moment().format('YYYY-MM-DD')\r\n            },\r\n            weekly: {\r\n                week: ''\r\n            },\r\n            monthly: {\r\n                month: ''\r\n            },\r\n            yearly: {\r\n                year: ''\r\n            },\r\n            custom: {\r\n                from: '',\r\n                to:''\r\n            },\r\n            errors: {\r\n                daily: false,\r\n                weekly: false,\r\n                monthly: false,\r\n                yearly: false,\r\n                from: false,\r\n                to: false\r\n            }\r\n        }\r\n    }\r\n\r\n    changeViewType = (e) => {\r\n        this.setState({...this.state, viewType: e.target.value });\r\n    }\r\n\r\n    changeStateValue = (parentProperty, childProperty, e) => {\r\n        this.setState({...this.state, [parentProperty]: { ...this.state[parentProperty], [childProperty]: e.target.value }});\r\n    }\r\n\r\n    handleApply = () => {\r\n        let startDate = new Date();\r\n        let endDate = new Date();\r\n        let errors = {\r\n            daily: false,\r\n            weekly: false,\r\n            monthly: false,\r\n            yearly: false,\r\n            from: false,\r\n            to: false\r\n        };\r\n        let hasError = false;\r\n        switch(this.state.viewType) {\r\n            case 'daily':\r\n                if(this.state.daily.date === '') {\r\n                    hasError = true;\r\n                    errors.daily = true;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.daily.date).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.daily.date).hours(23).minutes(59).seconds(59);\r\n                }\r\n                break;\r\n            case 'weekly':\r\n                if (this.state.weekly.week === '') {\r\n                    hasError = true;\r\n                    errors.weekly = true;\r\n                }\r\n                else {\r\n                    let weekParts = this.state.weekly.week.split('-');\r\n                    let weekNumber = Number(weekParts[1].replace('W', ''));\r\n                    startDate = moment().year(Number(weekParts[0])).week(weekNumber).startOf('week');\r\n                    endDate = moment().year(Number(weekParts[0])).week(weekNumber).endOf('week');\r\n                }\r\n                break;\r\n            case 'monthly':\r\n                if (this.state.monthly.month === '') {\r\n                    hasError = true;\r\n                    errors.monthly = true;\r\n                }\r\n                else {\r\n                    let monthParts = this.state.monthly.month.split('-');\r\n                    startDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).startOf('month');\r\n                    endDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).endOf('month');\r\n                }\r\n                break;\r\n            case 'yearly':\r\n                if (this.state.yearly.year === '' || isNaN(this.state.yearly.year)) {\r\n                    hasError = true;\r\n                    errors.yearly = true;\r\n                }\r\n                else {\r\n                    let year = Number(this.state.yearly.year);\r\n                    startDate = moment().year(year).startOf('year');\r\n                    endDate = moment().year(year).endOf('year');\r\n                }\r\n                break;\r\n           default: //custom range\r\n                if(this.state.custom.from === ''){\r\n                    hasError = true;\r\n                    errors.from = true;\r\n                }\r\n                else if(this.state.custom.to === '') {\r\n                    hasError = true;\r\n                    errors.to = true;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.custom.from).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.custom.to).hours(23).minutes(59).seconds(59);\r\n                }\r\n        }\r\n        if(hasError) {\r\n            this.setState({...this.state, errors });\r\n        }\r\n        else {\r\n            this.props.applyFilter(startDate, endDate);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <DialogTitle>Filter expense</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>View</InputLabel>\r\n                        <Select\r\n                            value={this.state.viewType} onChange={this.changeViewType.bind(this)}>\r\n                                <MenuItem value=\"daily\"><em>Daily</em></MenuItem>\r\n                                <MenuItem value=\"weekly\"><em>Weekly</em></MenuItem>\r\n                                <MenuItem value=\"monthly\"><em>Monthly</em></MenuItem>\r\n                                <MenuItem value=\"yearly\"><em>Yearly</em></MenuItem>\r\n                                <MenuItem value=\"custom\"><em>Custom</em></MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    {this.state.viewType === 'daily' ?\r\n                        <TextField\r\n                            error={this.state.errors.daily}\r\n                            ref=\"title\"\r\n                            label=\"Date\"\r\n                            value={this.state.daily.date} \r\n                            onChange={this.changeStateValue.bind(this, 'daily', 'date')}\r\n                            margin=\"normal\"\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'weekly' ?\r\n                        <TextField\r\n                            error={this.state.errors.weekly}\r\n                            ref=\"title\"\r\n                            label=\"Week\"\r\n                            value={this.state.weekly.week} \r\n                            onChange={this.changeStateValue.bind(this, 'weekly', 'week')}\r\n                            margin=\"normal\"\r\n                            type=\"week\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'monthly' ?\r\n                        <TextField\r\n                            error={this.state.errors.monthly}\r\n                            ref=\"title\"\r\n                            label=\"Month\"\r\n                            value={this.state.monthly.month} \r\n                            onChange={this.changeStateValue.bind(this, 'monthly', 'month')}\r\n                            margin=\"normal\"\r\n                            type=\"month\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'yearly' ?\r\n                        <TextField\r\n                            error={this.state.errors.yearly}\r\n                            ref=\"title\"\r\n                            label=\"Year\"\r\n                            value={this.state.yearly.year} \r\n                            onChange={this.changeStateValue.bind(this, 'yearly', 'year')}\r\n                            margin=\"normal\"\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'custom' ?\r\n                        <>\r\n                            <TextField\r\n                                error={this.state.errors.from}\r\n                                ref=\"title\"\r\n                                label=\"From\"\r\n                                value={this.state.custom.from} \r\n                                onChange={this.changeStateValue.bind(this, 'custom', 'from')}\r\n                                margin=\"normal\"\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                            />\r\n                            <TextField\r\n                                error={this.state.errors.to}\r\n                                ref=\"title\"\r\n                                label=\"To\"\r\n                                value={this.state.custom.to} \r\n                                onChange={this.changeStateValue.bind(this, 'custom', 'to')}\r\n                                margin=\"normal\"\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </>\r\n                    : null }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.close} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={this.handleApply.bind(this)} color=\"primary\">Apply</Button>\r\n                </DialogActions>\r\n            </>\r\n        );\r\n    }\r\n}\r\n  \r\n  export default Filter;\r\n  ","\r\nexport const formatMoney = (n, c, d, t) => {\r\n    var c = isNaN(c = Math.abs(c)) ? 2 : c,\r\n      d = d === undefined ? \".\" : d,\r\n      t = t === undefined ? \",\" : t,\r\n      s = n < 0 ? \"-\" : \"\",\r\n      i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),\r\n      j = (j = i.length) > 3 ? j % 3 : 0;\r\n\r\n    return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\");\r\n};","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport './expense.css';\r\nimport Filter from \"../common/filter\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nclass Expense extends Component {\r\n    constructor (props) {\r\n      super(props);\r\n      this.state = {\r\n        currentFilter: '',\r\n        total: 0,\r\n        expenses: [],\r\n        showFilter: false\r\n      }\r\n    }\r\n\r\n    componentDidMount () {\r\n      let from = moment().hours(0).minutes(0).seconds(0);\r\n      let to = moment().hours(23).minutes(59).seconds(59);\r\n      this.loadExpenses(from, to);\r\n    }\r\n\r\n    toggleFilter = () => {\r\n      this.setState({...this.state, showFilter: !this.state.showFilter});\r\n    }\r\n\r\n    loadExpenses = (from, to) => {\r\n      if (from.month() === to.month() && from.date() === to.date() && from.year() === to.year()){\r\n        this.setState({...this.state, expenses: [], currentFilter: from.format('MMM DD'), total: 0});\r\n      }\r\n      else {\r\n        this.setState({...this.state, expenses: [], currentFilter: from.format('MMM DD') + ' - ' + to.format('MMM DD'), total: 0});\r\n      }\r\n      var range = null;\r\n      if (from && to) {\r\n        range = IDBKeyRange.bound(from.toDate(), to.toDate());\r\n      }\r\n      const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n      requestDatabase.onsuccess = (event) => {\r\n          var db = event.target.result;\r\n          var transaction = db.transaction([\"expense\"], \"readonly\");\r\n          var store = transaction.objectStore(\"expense\");\r\n          var selectall = range === null ? store.index('date').openCursor(null, 'prev') : store.index('date').openCursor(range, 'prev');\r\n          this.setState({...this.state, showFilter: false});\r\n          let shits = [];\r\n          let total = 0;\r\n          selectall.onsuccess = (event) => {\r\n              var cursor = event.target.result;\r\n              if(cursor) {\r\n                  shits.push(cursor.value);\r\n                  total += cursor.value.amount;\r\n                  cursor.continue();\r\n              }\r\n          }\r\n          transaction.oncomplete = () => {\r\n            this.renderShits(shits, total);\r\n          }\r\n      }\r\n    }\r\n\r\n    renderShits = (shits, total) => {\r\n      this.setState({...this.state, expenses: shits, total});\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <MyToolbarWithNavigation title=\"Expense\" buttons={[\r\n            <IconButton onClick={this.toggleFilter} color=\"inherit\" aria-label=\"Menu\">\r\n                <FilterList />\r\n            </IconButton>\r\n          ]} />\r\n          <AppBar position=\"fixed\" style={{marginTop: '56px', zIndex: 1}} color=\"default\">\r\n            <Toolbar>\r\n              <Typography style={{display: \"block\", width: \"100%\", textAlign: \"center\"}} component=\"p\">\r\n                {this.state.currentFilter}<br/><small>{formatMoney(this.state.total)}</small>\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          \r\n          <div style={{marginTop: '56px', overflowY: 'auto', minHeight: '100%'}}>\r\n              <List component=\"nav\">\r\n                  {this.state.expenses.map(item =>\r\n                      <Link key={item.expenseId} style={{textDecoration:'none'}} className=\"list-item\" to={'/expense/edit/' + item.expenseId}>\r\n                          <ListItem button>\r\n                              <ListItemText primary={item.title} />\r\n                              <Typography className=\"float-right\">{formatMoney(item.amount)}</Typography >\r\n                          </ListItem>\r\n                          <Divider light />\r\n                      </Link>\r\n                  )}\r\n              </List>\r\n          </div>\r\n\r\n          <Dialog\r\n            onClose={this.toggleFilter}\r\n            open={this.state.showFilter}>\r\n              <Filter close={this.toggleFilter.bind(this)} applyFilter={this.loadExpenses.bind(this)} />\r\n          </Dialog>\r\n          \r\n          <Fab onClick={() => {this.props.history.push(\"/expense/new\")}} color=\"primary\" aria-label=\"Add\" style={{position: 'fixed', bottom: '15px', right: '15px'}}>\r\n              <AddIcon />\r\n          </Fab>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Expense;\r\n  ","import React, { Component } from 'react';\r\n\r\nclass Income extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n            <h1>Income index</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Income;\r\n  ","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 56\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass MyToolbar extends Component {\r\n  render(){\r\n    return (\r\n      <div style={styles.root}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            {this.props.showBackButton ? \r\n              <IconButton onClick={this.props.onBack} style={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <ArrowBack />\r\n              </IconButton>\r\n            : null}\r\n            <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\r\n              {this.props.title}\r\n            </Typography>\r\n            {this.props.buttons.map((item, index) => <span key={index}>{item}</span>)}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyToolbar;","import React, { Component } from 'react';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n\r\nclass NewExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 1,\r\n            description: '',\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            accounts: [],\r\n            categories: [],\r\n            errors: {\r\n                title: false,\r\n                category: false,\r\n                amount: false,\r\n                account: false,\r\n                date: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.loadAccounts(this);\r\n        this.loadCategories(this);\r\n    }\r\n\r\n    loadAccounts = (component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"account\"], \"readonly\");\r\n    \r\n            var accountStore = transaction.objectStore(\"account\");\r\n            var selectAccounts = accountStore.getAll();\r\n            transaction.oncomplete = function (event) { \r\n                component.setState({...component.state, accounts: selectAccounts.result});\r\n            }\r\n        }\r\n    }\r\n    \r\n    loadCategories = (component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"category\"], \"readonly\");\r\n    \r\n            var categoryStore = transaction.objectStore(\"category\");\r\n            var selectcategory = categoryStore.getAll();\r\n            transaction.oncomplete = function (event) { \r\n                component.setState({...component.state, categories: selectcategory.result});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeProperty (property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({...this.state, [property]: value});\r\n    }\r\n\r\n    formatCurrency (e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({...this.state, \"amount\": value});\r\n    }\r\n\r\n    handleSave () {\r\n        var data = {\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n        \r\n        let hasError = false;\r\n        let errors = {\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false,\r\n            date: false\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.date || this.state.date === '') {\r\n            errors.date = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if(hasError) {\r\n            this.setState({...this.state, errors});\r\n        }\r\n        else {\r\n            const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n            requestDatabase.onsuccess = (event) => {\r\n                var db = event.target.result;\r\n                var transaction = db.transaction(\"expense\", \"readwrite\");\r\n                var store = transaction.objectStore(\"expense\");\r\n                store.put(data);\r\n                transaction.oncomplete = (event) => {\r\n                    this.props.history.push(\"/expense\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n            <MyToolbar \r\n                onBack={() => {this.props.history.goBack()}}\r\n                showBackButton={true}\r\n                title=\"Add expense\"\r\n                buttons={[\r\n                    (<IconButton onClick={this.handleSave.bind(this)}  color=\"inherit\"><Save /></IconButton>)\r\n                ]}\r\n            />\r\n            <div className=\"content\">\r\n                <FormControl className=\"form-control\" margin=\"normal\">\r\n                    <InputLabel>Account</InputLabel>\r\n                    <Select\r\n                        ref=\"account\"\r\n                        error={this.state.errors.account}\r\n                        value={this.state.accountId}\r\n                        onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    ref=\"title\"\r\n                    error={this.state.errors.title}\r\n                    label=\"Title\"\r\n                    value={this.state.title}\r\n                    onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                    margin=\"normal\"\r\n                    className=\"form-control\"\r\n                />\r\n                <TextField\r\n                    ref=\"amount\"\r\n                    error={this.state.errors.amount}\r\n                    label=\"Amount\"\r\n                    value={this.state.amount}\r\n                    onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                    margin=\"normal\"\r\n                    className=\"form-control\"\r\n                    onBlur={this.formatCurrency.bind(this)}\r\n                />\r\n                <FormControl className=\"form-control\" margin=\"normal\">\r\n                    <InputLabel>Category</InputLabel>\r\n                    <Select\r\n                        ref=\"category\"\r\n                        error={this.state.errors.category}\r\n                        value={this.state.categoryId}\r\n                        onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    ref=\"date\"\r\n                    error={this.state.errors.date}\r\n                    label=\"Date\"\r\n                    type=\"datetime-local\"\r\n                    value={this.state.title}\r\n                    onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                    margin=\"normal\"\r\n                    className=\"form-control\"\r\n                    value={this.state.date} \r\n                    onChange={this.handleChangeProperty.bind(this, 'date')}\r\n                />\r\n                <TextField\r\n                    className=\"form-control\"\r\n                    label=\"Notes\"\r\n                    multiline\r\n                    rows=\"6\"\r\n                    value={this.state.description} \r\n                    onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                    margin=\"normal\"\r\n                />\r\n            </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default NewExpense;\r\n  ","import React, { Component } from 'react';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nclass EditExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            expenseId: Number(this.props.match.params.id),\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 0,\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            description: '',\r\n            accounts: [],\r\n            categories: [],\r\n            errors: {\r\n                title: false,\r\n                category: false,\r\n                amount: false,\r\n                account: false,\r\n                date: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.loadAccounts(this);\r\n        this.loadCategories(this);\r\n        this.loadExpense(this.state.expenseId, this);\r\n    }\r\n\r\n    loadExpense = (id, component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"expense\"], \"readonly\");\r\n    \r\n            var store = transaction.objectStore(\"expense\");\r\n            var select = store.get(id);\r\n\r\n            transaction.oncomplete = (event) => {\r\n                if (!select.result){\r\n                    this.props.history.push(\"/expense\");\r\n                    return;\r\n                }\r\n                component.setState({\r\n                    ...component.state,\r\n                    title: select.result.title,\r\n                    categoryId: select.result.categoryId,\r\n                    amount: formatMoney(select.result.amount),\r\n                    accountId: select.result.accountId,\r\n                    description: select.result.description,\r\n                    date: moment(select.result.date).format('YYYY-MM-DD[T]HH:mm')\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    loadAccounts = (component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"account\"], \"readonly\");\r\n    \r\n            var accountStore = transaction.objectStore(\"account\");\r\n            var selectAccounts = accountStore.getAll();\r\n            transaction.oncomplete = function (event) { \r\n                component.setState({...component.state, accounts: selectAccounts.result});\r\n            }\r\n        }\r\n    }\r\n    \r\n    loadCategories = (component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = function (event) {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"category\"], \"readonly\");\r\n    \r\n            var categoryStore = transaction.objectStore(\"category\");\r\n            var selectcategory = categoryStore.getAll();\r\n            transaction.oncomplete = function (event) { \r\n                component.setState({...component.state, categories: selectcategory.result});\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeProperty (property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({...this.state, [property]: value});\r\n    }\r\n\r\n    formatCurrency (e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({...this.state, \"amount\": value});\r\n    }\r\n\r\n    handleSave () {\r\n        var self = this;\r\n        var data = {\r\n            expenseId: this.state.expenseId,\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n        \r\n        let hasError = false;\r\n        let errors = {\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false,\r\n            date: false\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.date || this.state.date === '') {\r\n            errors.date = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if(hasError) {\r\n            this.setState({...this.state, errors});\r\n        }\r\n        else {\r\n            const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n            requestDatabase.onsuccess = function (event) {\r\n                var db = event.target.result;\r\n                var transaction = db.transaction(\"expense\", \"readwrite\");\r\n                var store = transaction.objectStore(\"expense\");\r\n                store.put(data);\r\n                transaction.oncomplete = function (event) {\r\n                    self.props.history.push(\"/expense\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    handleDelete = () => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction(\"expense\", \"readwrite\");\r\n            var store = transaction.objectStore(\"expense\");\r\n            store.delete(this.state.expenseId);\r\n            console.log(1);\r\n            transaction.oncomplete = (event) => {\r\n                window.$('#modalDanger').on('hidden.bs.modal', () => {\r\n                    this.props.history.push(\"/expense\");\r\n                });\r\n                window.$(\"#modalDanger\").modal('hide');\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n            <MyToolbar \r\n                onBack={() => {this.props.history.goBack()}}\r\n                showBackButton={true}\r\n                title=\"Add expense\"\r\n                buttons={[\r\n                    (<IconButton onClick={this.handleSave.bind(this)}  color=\"inherit\"><Save /></IconButton>)\r\n                ]}\r\n            />\r\n            <div className=\"content\">\r\n                <FormControl className=\"form-control\" margin=\"normal\">\r\n                    <InputLabel>Account</InputLabel>\r\n                    <Select\r\n                        ref=\"account\"\r\n                        error={this.state.errors.account}\r\n                        value={this.state.accountId}\r\n                        onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    ref=\"title\"\r\n                    error={this.state.errors.title}\r\n                    label=\"Title\"\r\n                    value={this.state.title}\r\n                    onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                    margin=\"normal\"\r\n                    className=\"form-control\"\r\n                />\r\n                <TextField\r\n                    ref=\"amount\"\r\n                    error={this.state.errors.amount}\r\n                    label=\"Amount\"\r\n                    value={this.state.amount}\r\n                    onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                    margin=\"normal\"\r\n                    className=\"form-control\"\r\n                    onBlur={this.formatCurrency.bind(this)}\r\n                />\r\n                <FormControl className=\"form-control\" margin=\"normal\">\r\n                    <InputLabel>Category</InputLabel>\r\n                    <Select\r\n                        ref=\"category\"\r\n                        error={this.state.errors.category}\r\n                        value={this.state.categoryId}\r\n                        onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                    </Select>\r\n                </FormControl>\r\n                <TextField\r\n                    ref=\"date\"\r\n                    error={this.state.errors.date}\r\n                    label=\"Date\"\r\n                    type=\"datetime-local\"\r\n                    value={this.state.title}\r\n                    onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                    margin=\"normal\"\r\n                    className=\"form-control\"\r\n                    value={this.state.date} \r\n                    onChange={this.handleChangeProperty.bind(this, 'date')}\r\n                />\r\n                <TextField\r\n                    className=\"form-control\"\r\n                    label=\"Notes\"\r\n                    multiline\r\n                    rows=\"6\"\r\n                    value={this.state.description} \r\n                    onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                    margin=\"normal\"\r\n                />\r\n            </div>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default EditExpense;\r\n  ","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from '../dashboard/dashboard';\r\nimport Expense from '../expense/expense';\r\nimport Income from '../income/income';\r\nimport NewExpense from '../expense/new-expense';\r\nimport EditExpense from '../expense/edit-expense';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n      return (\r\n        <main>\r\n            <Switch>\r\n                <Route path='/income' component={Income}/>\r\n                <Route path='/expense/edit/:id' component={EditExpense} />\r\n                <Route path='/expense/new' component={NewExpense} />\r\n                <Route path='/expense' component={Expense}/>\r\n                <Route path='/' component={Dashboard}/>\r\n            </Switch>\r\n        </main>\r\n      );\r\n    }\r\n}\r\n  \r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\r\nimport Main from './components/common/main';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper animate slideInRight\">\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport { initialize } from './database';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\nimport \"./animate.css\";\r\nimport './App.css';\r\nimport 'typeface-roboto';\r\n\r\nconst configureHistory = () => {\r\n  return window.matchMedia('(display-mode: standalone)').matches\r\n    ? createHashHistory()\r\n    : createBrowserHistory()\r\n}\r\nconst history = configureHistory();\r\ninitialize(); //initialize database\r\nReactDOM.render((\r\n    <Router history={history} basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n    </Router>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","\r\nexport const initialize = () => {\r\n    var request = window.indexedDB.open(\"Moneytoring\", 2);\r\n    \r\n    request.onupgradeneeded = function(event) {\r\n        var db = event.target.result;\r\n    \r\n        db.onerror = function(event) {\r\n            \r\n        };\r\n\r\n        if (!db.objectStoreNames.contains('expense')) {\r\n            var expenseTable = db.createObjectStore(\"expense\", { keyPath: \"expenseId\", autoIncrement: true });\r\n            expenseTable.createIndex(\"expenseId\", \"expenseId\", { unique: true });\r\n            expenseTable.createIndex(\"title\", \"title\", { unique: false });\r\n            expenseTable.createIndex(\"categoryId\", \"categoryId\", { unique: false });\r\n            expenseTable.createIndex(\"amount\", \"amount\", { unique: false });\r\n            expenseTable.createIndex(\"accountId\", \"accountId\", { unique: false });\r\n            expenseTable.createIndex(\"description\", \"description\", { unique: false });\r\n            expenseTable.createIndex(\"date\", \"date\", { unique: false });\r\n        }\r\n        \r\n        if (!db.objectStoreNames.contains('account')) {\r\n            var accountTable = db.createObjectStore(\"account\", { keyPath: \"accountId\", autoIncrement: true });\r\n            accountTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n\r\n        if (!db.objectStoreNames.contains('category')) {\r\n            var categoryTable = db.createObjectStore(\"category\", { keyPath: \"categoryId\", autoIncrement: true });\r\n            categoryTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n    }\r\n\r\n    request.onsuccess = function (event) {\r\n        var db = event.target.result;\r\n\r\n        //--------------------------------\r\n        //create default account (personal)\r\n        //--------------------------------\r\n        var transaction = db.transaction([\"account\"], \"readonly\");\r\n        var accountStore = transaction.objectStore(\"account\");\r\n        var selectAccounts = accountStore.getAll();\r\n        transaction.oncomplete = function (event) {            \r\n            if (selectAccounts.result.length === 0) {\r\n                var addAccountTransaction = db.transaction([\"account\"], \"readwrite\");\r\n                var accountStore1 = addAccountTransaction.objectStore(\"account\");\r\n                accountStore1.put({name: \"personal\"});\r\n            }\r\n        }\r\n        //----------------------------------------------------------------\r\n        //create default categories (food, transportation, clothing)\r\n        //----------------------------------------------------------------\r\n        var categoryTransaction = db.transaction([\"category\"], \"readonly\");\r\n        var categoryStore = categoryTransaction.objectStore(\"category\");\r\n        var selectCategories = categoryStore.getAll();\r\n        categoryTransaction.oncomplete = function (event) {\r\n            if (selectCategories.result.length === 0) {\r\n                var addCategoriesTransaction = db.transaction([\"category\"], \"readwrite\");\r\n                var addCategoryStore = addCategoriesTransaction.objectStore(\"category\");\r\n                addCategoryStore.put({name: \"food\"});\r\n                addCategoryStore.put({name: \"transportation\"});\r\n                addCategoryStore.put({name: \"clothing\"});\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":""}