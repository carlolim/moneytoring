{"version":3,"sources":["components/common/navigation-links.js","components/common/my-toolbar-with-navigation.js","helpers.js","components/dashboard/widgets/expense-summary.js","modules/budget-module.js","components/dashboard/widgets/budget-summary.js","components/dashboard/dashboard.js","components/common/filter.js","components/expense/expense.js","components/income/income.js","components/common/my-toolbar.js","components/expense/new-expense.js","components/expense/edit-expense.js","components/budget/budget.js","components/budget/edit-budget.js","components/budget/new-budget.js","components/settings/settings.js","components/account/account.js","components/category/category.js","components/common/main.js","App.js","serviceWorker.js","index.js","database.js"],"names":["NavigationLinks","react_default","a","createElement","style","width","index_es","Link","to","textDecoration","Home_default","primary","MoneyOff_default","ListAlt_default","Settings_default","Component","styles","root","flexGrow","paddingTop","grow","menuButton","marginLeft","marginRight","MyToolbarWithNavigation","state","isOpen","toggleDrawer","_this","setState","SwipeableDrawer_default","open","this","onClose","onOpen","disableBackdropTransition","tabIndex","role","onClick","onKeyDown","navigation_links","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Typography_default","variant","props","title","buttons","map","item","index","key","formatMoney","n","c","d","t","isNaN","Math","abs","undefined","s","i","String","parseInt","Number","toFixed","j","length","substr","replace","slice","selectAll","table","Promise","resolve","reject","indexedDB","onsuccess","event","target","result","transaction","objectStore","getAll","select","id","get","insert","data","done","tx","put","oncomplete","onerror","insertAsync","update","updateAsync","remove","delete","budgetRepeatEnum","none","daily","weekly","monthly","custom","filterTypes","ExpenseSummary","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getExpensesForCategory","items","categoryId","filter","m","subTotal","reduce","currValue","amount","filterType","from","moment","hours","minutes","seconds","filterDate","total","loadSummary","format","objectSpread","_this2","range","IDBKeyRange","bound","toDate","expenses","categories","selectall","openCursor","selectAllCategory","cursor","push","value","continue","categoryItemProperties","category","generateFilterDate","add","subtract","classes","Card_default","className","card","CardHeader_default","action","Fragment","prev","bind","ArrowBackIos_default","next","ArrowForwardIos_default","subheader","Divider_default","CardContent_default","cardContent","name","float","expenseItem","light","nothingToDoHere","CardActions_default","cardFooter","component","withStyles","minWidth","height","overflowY","textAlign","getExpensesOfBudgetLedger","ledger","accountIds","categoryIds","column","fromDate","startDate","endDate","store","shits","then","indexOf","console","log","accountId","validateBudget","budget","type","repeat","getBudgetRepeatTypeForMoment","startOf","noEndDate","endOf","find","toString","spent","BudgetSummary","progressBarClassName","percent","colorPrimary","progressGreen","barColorPrimary","progressBarGreen","progressYellow","progressBarYellow","progressRed","progressBarRed","gutterBottom","textCenter","lineHeight","concat","floatRight","marginBottom","bullet","display","margin","transform","fontSize","pos","backgroundColor","marginTop","fabPrimary","bottom","right","zIndex","fabExpense","fabExpenseLabel","padding","borderRadius","fabIncome","backdrop","divider","Dashboard","showMenu","nonRepeating","toggleMenu","newExpense","history","loadBudgets","showInDashboard","Date","paddingBottom","my_toolbar_with_navigation","expense_summary","dashboard_RenderBudget","size","Close_default","Add_default","RenderBudget","budget_summary","Filter","changeViewType","e","viewType","changeStateValue","parentProperty","childProperty","defineProperty","handleApply","errors","yearly","hasError","date","week","weekParts","split","weekNumber","year","month","monthParts","applyFilter","DialogTitle_default","DialogContent_default","FormControl_default","InputLabel_default","Select_default","onChange","MenuItem_default","TextField_default","error","ref","label","DialogActions_default","Button_default","close","Expense","toggleFilter","showFilter","loadExpenses","localStorage","setItem","JSON","stringify","currentFilter","renderShits","navigate","getItem","parse","FilterList_default","appBar","filterLabel","minHeight","expenseId","button","secondary","common_filter","Income","MyToolbar","showBackButton","onBack","ArrowBack_default","NewExpense","description","accounts","account","property","_this3","parseFloat","success","_this4","my_toolbar","goBack","handleSave","Save_default","handleChangeProperty","onBlur","formatCurrency","multiline","rows","EditExpense","loadExpense","handleDelete","toggleDeleteModal","showDelete","match","params","self","Delete_default","autoFocus","Budget","componentDidMount","changeDisplay","start","end","budgetId","budget_RenderItems","fab","RenderItems","align","borderColor","myClass","font","menuProps","PaperProps","maxHeight","EditBudget","unshift","selectedAccounts","isActive","selectedCategories","all","multiple","input","renderValue","selected","join","MenuProps","checked","f","disabled","control","NewBudget","Settings","link","Account","new","showModal","edit","showEditModal","addButton","account_NewModal","changeValue","save","saveAdd","account_EditModal","saveEdit","account_DeleteModal","NewModal","EditModal","DeleteModal","Category","category_NewModal","category_EditModal","category_DeleteModal","Main","Switch","Route","path","App","main","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","matchMedia","matches","createHashHistory","createBrowserHistory","request","onupgradeneeded","budgetTable","db","objectStoreNames","contains","expenseTable","createObjectStore","keyPath","autoIncrement","createIndex","unique","currentTarget","indexNames","selectAccounts","categoryTransaction","selectCategories","addCategoryStore","initialize","ReactDOM","render","Router","basename","process","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.53b2560b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { List, ListItem, ListItemIcon, ListItemText, Divider } from '@material-ui/core';\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\n//import AttachMoneyICon from \"@material-ui/icons/AttachMoney\";\r\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\";\r\nimport ListAlt from \"@material-ui/icons/ListAlt\";\r\nimport Settings from \"@material-ui/icons/Settings\";\r\n\r\nclass NavigationLinks extends Component {\r\n    render() {\r\n      return (\r\n        <div style={{width: '250px'}}>\r\n          <List>\r\n            <Link to='/' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <HomeIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to='/expense' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <MoneyOffIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Expense\" />\r\n              </ListItem>\r\n            </Link>\r\n            {/* <Link to='/income' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <AttachMoneyICon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Income\" />\r\n              </ListItem>\r\n            </Link> */}\r\n            <Link to='/budget' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <ListAlt />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Budget\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Divider />\r\n            <Link to='/settings' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <Settings />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Settings\" />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default NavigationLinks;","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NavigationLinks from \"./navigation-links\";\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 56\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass MyToolbarWithNavigation extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  toggleDrawer = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div style={styles.root}>\r\n        <SwipeableDrawer\r\n          open={this.state.isOpen}\r\n          onClose={this.toggleDrawer}\r\n          onOpen={this.toggleDrawer}\r\n          disableBackdropTransition={true}>\r\n              <div\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                onClick={this.toggleDrawer}\r\n                onKeyDown={this.toggleDrawer}>\r\n                  <NavigationLinks />\r\n              </div>\r\n        </SwipeableDrawer>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton onClick={this.toggleDrawer} style={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\r\n                {this.props.title}\r\n            </Typography>\r\n            {this.props.buttons.map((item, index) => <span color=\"inherit\" key={index}>{item}</span>)}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyToolbarWithNavigation;","\r\nexport const formatMoney = (n, c, d, t) => {\r\n  var c = isNaN(c = Math.abs(c)) ? 2 : c,\r\n    d = d === undefined ? \".\" : d,\r\n    t = t === undefined ? \",\" : t,\r\n    s = n < 0 ? \"-\" : \"\",\r\n    i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),\r\n    j = (j = i.length) > 3 ? j % 3 : 0;\r\n\r\n  return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\");\r\n};\r\n\r\nexport const selectAll = (table) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readonly\");\r\n      let store = tx.objectStore(table);\r\n      let allItems = store.getAll();\r\n      allItems.onsuccess = (event) => {\r\n        resolve(event.target.result);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const select = (table, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readonly\");\r\n      let store = tx.objectStore(table);\r\n      let item = store.get(id);\r\n      item.onsuccess = (event) => {\r\n        resolve(event.target.result);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const selectAllWhereDateBetween = (table, column, fromDate, toDate) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readonly\");\r\n      var store = tx.objectStore(table);\r\n      let range = IDBKeyRange.bound(fromDate, toDate);\r\n      var selectall = store.index(column).openCursor(range, 'prev');\r\n      let shits = [];\r\n      selectall.onsuccess = (event) => {\r\n        var cursor = event.target.result;\r\n        if (cursor) {\r\n          shits.push(cursor.value);\r\n          cursor.continue();\r\n        }\r\n      }\r\n      tx.oncomplete = () => {\r\n        resolve(shits);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const insert = (table, data, done) => {\r\n  let db = indexedDB.open(\"Moneytoring\");\r\n  db.onsuccess = (event) => {\r\n    let tx = event.target.result.transaction([table], \"readwrite\");\r\n    let store = tx.objectStore(table);\r\n    store.put(data);\r\n    tx.oncomplete = (event) => {\r\n      done(true);\r\n    }\r\n    tx.onerror = (event) => {\r\n      done(false);\r\n    }\r\n  }\r\n}\r\n\r\nexport const insertAsync = (table, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readwrite\");\r\n      let store = tx.objectStore(table);\r\n      store.put(data);\r\n      tx.oncomplete = (event) => {\r\n        resolve(true);\r\n      }\r\n      tx.onerror = (event) => {\r\n        reject(false);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const update = (table, data, done) => {\r\n  let db = indexedDB.open(\"Moneytoring\");\r\n  db.onsuccess = (event) => {\r\n    let tx = event.target.result.transaction([table], \"readwrite\");\r\n    let store = tx.objectStore(table);\r\n    store.put(data);\r\n    tx.oncomplete = (event) => {\r\n      done(true);\r\n    }\r\n    tx.onerror = (event) => {\r\n      done(false);\r\n    }\r\n  }\r\n}\r\n\r\nexport const updateAsync = (table, data) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readwrite\");\r\n      let store = tx.objectStore(table);\r\n      store.put(data);\r\n      tx.oncomplete = (event) => {\r\n        resolve(true);\r\n      }\r\n      tx.onerror = (event) => {\r\n        reject(false);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const remove = (table, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readwrite\");\r\n      let store = tx.objectStore(table);\r\n      store.delete(id);\r\n      tx.oncomplete = (event) => {\r\n        resolve(true);\r\n      }\r\n      tx.onerror = (event) => {\r\n        reject(false);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const budgetRepeatEnum = {\r\n  none: 0,\r\n  daily: 1,\r\n  weekly: 2,\r\n  monthly: 3,\r\n  custom: 4\r\n}\r\n","import React, {Component} from 'react';\r\nimport moment from \"moment\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\nimport { formatMoney } from \"../../../helpers\";\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  cardContent: {\r\n    height: 150,\r\n    overflowY: 'auto'\r\n  },\r\n  cardFooter: {\r\n    float: 'right'\r\n  },\r\n  expenseItem:{\r\n    marginLeft: 20\r\n  },\r\n  nothingToDoHere: {\r\n    paddingTop: 35,\r\n    textAlign: 'center'\r\n  }\r\n};\r\n\r\nconst filterTypes = {daily: 1, weekly: 2, monthly: 3}\r\n\r\nclass ExpenseSummary extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      filterType: filterTypes.daily,\r\n      from: moment().hours(0).minutes(0).seconds(0),\r\n      to: moment().hours(23).minutes(59).seconds(59),\r\n      filterDate: '',\r\n      data: [],\r\n      total: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.loadSummary();\r\n  }\r\n\r\n  generateFilterDate () {\r\n    let filterDate = this.state.from.format(\"MMM DD [(]ddd[)]\");\r\n    if (this.state.filterType !== filterTypes.daily) {\r\n      filterDate = this.state.from.format(\"MMM DD\") + ' - ' + this.state.to.format(\"MMM DD\");\r\n    }\r\n    this.setState({...this.state, filterDate});\r\n  }\r\n  \r\n  loadSummary () {\r\n    var range = IDBKeyRange.bound(this.state.from.toDate(), this.state.to.toDate());\r\n    let expenses = [];\r\n    let categories = [];\r\n    let total = 0;\r\n    let data = [];\r\n\r\n    const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n    requestDatabase.onsuccess = (event) => {\r\n        var db = event.target.result;\r\n        var transaction = db.transaction([\"expense\", \"category\"], \"readonly\");\r\n        var store = transaction.objectStore(\"expense\");\r\n        var selectall = store.index('date').openCursor(range, 'prev');\r\n        var selectAllCategory = transaction.objectStore(\"category\").getAll();\r\n        selectall.onsuccess = (event) => {\r\n            var cursor = event.target.result;\r\n            if(cursor) {\r\n                expenses.push(cursor.value);\r\n                total += cursor.value.amount;\r\n                cursor.continue();\r\n            }\r\n        }\r\n\r\n        selectAllCategory.onsuccess = (event) => {\r\n          categories = event.target.result;\r\n        }\r\n\r\n        transaction.oncomplete = () => {\r\n          for(var i=0; i<categories.length; i++){\r\n            let categoryItemProperties = this.getExpensesForCategory(expenses, categories[i].categoryId);\r\n            data.push({\r\n              category: categories[i],\r\n              subTotal: categoryItemProperties.subTotal,\r\n              items: categoryItemProperties.data\r\n            });\r\n          }\r\n          this.setState({...this.state, data, total});\r\n          this.generateFilterDate();\r\n        }\r\n    }\r\n  }\r\n\r\n  getExpensesForCategory = (items, categoryId) => {\r\n    let data = items.filter(m => { return m.categoryId === categoryId });\r\n    return { \r\n      data,\r\n      subTotal: data.reduce((currValue, i) => { return i.amount + currValue; }, 0)\r\n    };\r\n  }\r\n\r\n  changeFilterType () {\r\n\r\n  }\r\n\r\n  next () {\r\n    this.setState({...this.state, from: this.state.from.add(1, \"days\"), to: this.state.to.add(1, \"days\")});\r\n    this.loadSummary();\r\n  }\r\n\r\n  prev () {\r\n    this.setState({...this.state, from: this.state.from.subtract(1, \"days\"), to: this.state.to.subtract(1, \"days\")});\r\n    this.loadSummary();\r\n  }\r\n\r\n  render() {\r\n      const { classes } = this.props;\r\n      return (\r\n        <Card className={classes.card}>\r\n          <CardHeader\r\n            action={\r\n            <>\r\n              <IconButton onClick={this.prev.bind(this)}>\r\n                <ArrowBackIos />\r\n              </IconButton>\r\n              <IconButton onClick={this.next.bind(this)}>\r\n                <ArrowForwardIos />\r\n              </IconButton>\r\n            </>}\r\n            title=\"Expense\"\r\n            subheader={this.state.filterDate}\r\n          />\r\n          <Divider />\r\n          <CardContent className={classes.cardContent}>\r\n            {this.state.data.map((data, index) =>\r\n                data.items.length > 0 ?\r\n                    <div key={index}>\r\n                        <Typography variant=\"overline\">\r\n                            {data.category.name}\r\n                            <span style={{float: 'right'}}>{formatMoney(data.subTotal)}</span>\r\n                        </Typography>\r\n                        <div className={classes.expenseItem}>\r\n                          {data.items.map((item, i)=> \r\n                              <Typography key={i} variant=\"caption\">{item.title}<span style={{float: 'right'}}>{formatMoney(item.amount)}</span></Typography>\r\n                          )}\r\n                        </div>\r\n                        <Divider light />\r\n                    </div>\r\n                : null\r\n            )}\r\n            {this.state.total === 0 ? <Typography variant=\"body1\" className={classes.nothingToDoHere}>to do here: nothing</Typography> : null}\r\n          </CardContent>\r\n          <Divider />\r\n          <CardActions className={classes.cardFooter}>\r\n            <Typography component=\"p\">{formatMoney(this.state.total)}</Typography>\r\n          </CardActions>\r\n        </Card>\r\n      );\r\n  }\r\n}\r\n\r\nExpenseSummary.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ExpenseSummary);","import { budgetRepeatEnum, selectAllWhereDateBetween } from \"../helpers\";\r\nimport moment from \"moment\";\r\n\r\nexport const getExpensesOfBudgetLedger = (ledger, accountIds, categoryIds) => {\r\n    return new Promise((resolve, reject) => {\r\n        selectAllWhereDateBetween(\"expense\", \"date\", ledger.startDate, ledger.endDate).then((expenses) => {\r\n            if (accountIds.indexOf(0) !== -1 && categoryIds.indexOf(0) !== -1) {\r\n                resolve(expenses);\r\n            }\r\n            else {\r\n                let result = [];\r\n                for (var i=0; i<expenses.length; i++) {\r\n                    console.log(expenses[i], categoryIds, accountIds);\r\n                    if ((categoryIds.indexOf(expenses[i].categoryId) !== -1 || categoryIds.indexOf(0) !== -1) && \r\n                    (accountIds.indexOf(expenses[i].accountId) !== -1 || accountIds.indexOf(0) !== -1)) {\r\n                        result.push(expenses[i]);\r\n                    }\r\n                }\r\n                resolve(result);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport const getBudgetRepeatTypeForMoment = (budget) => {\r\n    if (budget.repeat === budgetRepeatEnum.daily) return \"day\";\r\n    else if (budget.repeat === budgetRepeatEnum.weekly) return \"week\";\r\n    else if (budget.repeat === budgetRepeatEnum.monthly) return \"month\";\r\n    return undefined;\r\n}\r\n\r\nexport const validateBudget = (budget) => {\r\n    let type = getBudgetRepeatTypeForMoment(budget);\r\n    if (type) {\r\n        if (moment(budget.startDate).startOf(type).toDate() <= moment().startOf(type).toDate() &&\r\n            (budget.noEndDate || moment(budget.endDate).endOf(type).toDate() >= moment().endOf(type))) {\r\n            let ledger = budget.ledger.find(m => m.startDate.toString() === moment().startOf(type).toDate().toString() && m.endDate.toString() === moment().endOf(type).toDate().toString());\r\n            if (ledger === undefined || ledger === null) {\r\n                ledger = { startDate: moment().startOf(type).toDate(), endDate: moment().endOf(type).toDate(), spent: 0, amount: budget.amount };\r\n            }\r\n            return ledger;\r\n        }\r\n    }\r\n    return null;\r\n}","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport { formatMoney } from \"../../../helpers\";\r\nimport { Typography, Card, CardContent, LinearProgress } from \"@material-ui/core\";\r\nimport { getExpensesOfBudgetLedger } from \"../../../modules/budget-module\";\r\n\r\nconst styles = {\r\n    card: {\r\n        minWidth: 275,\r\n        marginBottom: 10\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    progressGreen: {\r\n        backgroundColor: '#b2dfdb'\r\n    },\r\n    progressBarGreen: {\r\n        backgroundColor: '#00695c'\r\n    },\r\n    progressYellow: {\r\n        backgroundColor: '#eaec60'\r\n    },\r\n    progressBarYellow: {\r\n        backgroundColor: '#bfc11d'\r\n    },\r\n    progressRed: {\r\n        backgroundColor: '#ec8686'\r\n    },\r\n    progressBarRed: {\r\n        backgroundColor: '#de0b0b'\r\n    },\r\n    lineHeight: {\r\n        lineHeight: 1,\r\n        marginTop: 5,\r\n        display: 'inline-block'\r\n    },\r\n    floatRight: {\r\n        float: 'right',\r\n        textAlign: 'right'\r\n    },\r\n    textCenter: {\r\n        textAlign: 'center'\r\n    }\r\n}\r\n\r\n\r\nclass BudgetSummary extends Component {\r\n    state = {\r\n        spent: 0\r\n    };\r\n    componentDidMount () {\r\n        getExpensesOfBudgetLedger(this.props.budget.ledger[0], this.props.budget.accountIds, this.props.budget.categoryIds).then((expenses) => {\r\n            if (expenses.length > 0) {\r\n                let spent = 0;\r\n                for (var i =0; i<expenses.length; i++) {\r\n                    spent += expenses[i].amount;\r\n                }\r\n                this.setState({...this.state, spent});\r\n            }\r\n        });\r\n    }\r\n\r\n    progressBarClassName = (percent) => {\r\n        let result = {\r\n            colorPrimary: this.props.classes.progressGreen,\r\n            barColorPrimary: this.props.classes.progressBarGreen\r\n        }\r\n        if (percent > 50 && percent <= 75) {\r\n            result.colorPrimary = this.props.classes.progressYellow;\r\n            result.barColorPrimary = this.props.classes.progressBarYellow;\r\n        }\r\n        else if (percent > 75) {\r\n            result.colorPrimary = this.props.classes.progressRed;\r\n            result.barColorPrimary = this.props.classes.progressBarRed;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className={this.props.classes.card}>\r\n                <CardContent>\r\n                    <Typography className={this.props.classes.title} variant=\"title\" color=\"textPrimary\" gutterBottom>{this.props.budget.name}</Typography>\r\n                    <Typography variant=\"overline\" className={this.props.classes.textCenter}>Total: {formatMoney(this.props.budget.amount)}</Typography>\r\n                    <LinearProgress\r\n                        variant=\"determinate\" value={(this.state.spent / this.props.budget.amount) * 100}\r\n                        classes={this.progressBarClassName((this.state.spent / this.props.budget.amount) * 100)}\r\n                    />\r\n                    <div>\r\n                        <Typography variant=\"caption\" className={this.props.classes.lineHeight}>Spent<br />{formatMoney(this.state.spent)}</Typography>\r\n                        <Typography variant=\"caption\" className={`${this.props.classes.lineHeight} ${this.props.classes.floatRight}`}>Remaining<br />{formatMoney(this.props.budget.amount - this.state.spent)}</Typography>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nBudgetSummary.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(BudgetSummary);","import React, { Component } from 'react';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport { Typography, Fab, Backdrop, Divider } from \"@material-ui/core\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AttachMoneyICon from \"@material-ui/icons/AttachMoney\";\r\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\";\r\nimport ExpenseSummary from \"./widgets/expense-summary\";\r\nimport BudgetSummary from \"./widgets/budget-summary\";\r\nimport { selectAll, budgetRepeatEnum } from \"../../helpers\";\r\nimport { validateBudget } from \"../../modules/budget-module\";\r\n\r\n\r\nconst styles = {\r\n  fabPrimary: {\r\n    position: 'fixed', bottom: '15px', right: '15px', zIndex: 2\r\n  },\r\n  fabExpense: {\r\n    position: 'fixed', bottom: '90px', right: '23px', zIndex: 2\r\n  },\r\n  fabExpenseLabel: {\r\n    position: 'fixed',\r\n    zIndex: 2,\r\n    bottom: '98px',\r\n    color: 'white',\r\n    backgroundColor: 'black',\r\n    right: '70px',\r\n    padding: '3px 10px',\r\n    borderRadius: '5px',\r\n  },\r\n  fabIncome: {\r\n    position: 'fixed', bottom: '90px', right: '23px', zIndex: 2\r\n  },\r\n  backdrop: {\r\n    zIndex: 1\r\n  },\r\n  divider: {\r\n    marginBottom: 20\r\n  }\r\n}\r\n\r\nclass Dashboard extends Component {\r\n  state = { showMenu: false, daily: [], weekly: [], monthly: [], nonRepeating: [] }\r\n\r\n  componentDidMount() {\r\n    this.loadBudgets();\r\n  }\r\n\r\n  loadBudgets() {\r\n    selectAll(\"budget\").then((items) => {\r\n      let daily = [];\r\n      let weekly = [];\r\n      let monthly = [];\r\n      let nonRepeating = [];\r\n      for (var i = 0; i < items.length; i++) {\r\n        let budget = items[i];\r\n        if (budget.showInDashboard) {\r\n          if (budget.repeat) {\r\n            let ledger = validateBudget(budget);\r\n            if (ledger != null) {\r\n              budget.ledger = [ledger];\r\n              if (budget.repeat === budgetRepeatEnum.daily) daily.push(budget);\r\n              else if (budget.repeat === budgetRepeatEnum.weekly) weekly.push(budget);\r\n              else if (budget.repeat === budgetRepeatEnum.monthly) monthly.push(budget);\r\n            }\r\n          }\r\n          else {\r\n            budget.ledger[0].endDate = budget.noEndDate ? new Date() : budget.ledger[0].endDate;\r\n            nonRepeating.push(budget);\r\n          }\r\n        }\r\n      }\r\n      this.setState({ ...this.state, daily, weekly, monthly, nonRepeating });\r\n    });\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    this.setState({ ...this.state, showMenu: !this.state.showMenu });\r\n  }\r\n\r\n  newExpense = () => {\r\n    this.props.history.push('/expense/new');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{paddingBottom: '50px'}}>\r\n        <MyToolbarWithNavigation title=\"moneytoring\" buttons={[]} />\r\n        <div style={{ padding: '10px' }}>\r\n          <ExpenseSummary />\r\n        </div>\r\n        <div style={{ padding: '10px' }}>\r\n          <RenderBudget items={this.state.nonRepeating} />\r\n          <RenderBudget items={this.state.daily} />\r\n          <RenderBudget items={this.state.weekly} />\r\n          <RenderBudget items={this.state.monthly} />\r\n        </div>\r\n        {this.state.showMenu ?\r\n          <>\r\n            <Typography component=\"p\" style={styles.fabExpenseLabel}>new expense</Typography>\r\n            <Fab onClick={this.newExpense} color=\"secondary\" size=\"small\" aria-label=\"expense\" style={styles.fabExpense}>\r\n              <MoneyOffIcon />\r\n            </Fab>\r\n            <Backdrop onClick={this.toggleMenu} open={true} style={styles.backdrop} />\r\n          </>\r\n          : null}\r\n        <Fab onClick={this.toggleMenu} color=\"primary\" aria-label=\"Add\" style={styles.fabPrimary}>\r\n          {this.state.showMenu ? <CloseIcon /> : <AddIcon />}\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst RenderBudget = (props) => (\r\n  <>\r\n    {props.items.length > 0 ?\r\n      <>\r\n        {props.items.map((item, i) =>\r\n            <BudgetSummary key={i} budget={item} />\r\n        )}\r\n      </>\r\n      : null}\r\n  </>\r\n)\r\n\r\nexport default Dashboard;\r\n","import React, { Component } from 'react';\r\nimport moment from \"moment\";\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            viewType: 'daily',\r\n            daily: {\r\n                date: moment().format('YYYY-MM-DD')\r\n            },\r\n            weekly: {\r\n                week: ''\r\n            },\r\n            monthly: {\r\n                month: ''\r\n            },\r\n            yearly: {\r\n                year: ''\r\n            },\r\n            custom: {\r\n                from: '',\r\n                to:''\r\n            },\r\n            errors: {\r\n                daily: false,\r\n                weekly: false,\r\n                monthly: false,\r\n                yearly: false,\r\n                from: false,\r\n                to: false\r\n            }\r\n        }\r\n    }\r\n\r\n    changeViewType = (e) => {\r\n        this.setState({...this.state, viewType: e.target.value });\r\n    }\r\n\r\n    changeStateValue = (parentProperty, childProperty, e) => {\r\n        this.setState({...this.state, [parentProperty]: { ...this.state[parentProperty], [childProperty]: e.target.value }});\r\n    }\r\n\r\n    handleApply = () => {\r\n        let startDate = new Date();\r\n        let endDate = new Date();\r\n        let errors = {\r\n            daily: false,\r\n            weekly: false,\r\n            monthly: false,\r\n            yearly: false,\r\n            from: false,\r\n            to: false\r\n        };\r\n        let hasError = false;\r\n        switch(this.state.viewType) {\r\n            case 'daily':\r\n                if(this.state.daily.date === '') {\r\n                    hasError = true;\r\n                    errors.daily = true;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.daily.date).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.daily.date).hours(23).minutes(59).seconds(59);\r\n                }\r\n                break;\r\n            case 'weekly':\r\n                if (this.state.weekly.week === '') {\r\n                    hasError = true;\r\n                    errors.weekly = true;\r\n                }\r\n                else {\r\n                    let weekParts = this.state.weekly.week.split('-');\r\n                    let weekNumber = Number(weekParts[1].replace('W', ''));\r\n                    startDate = moment().year(Number(weekParts[0])).week(weekNumber).startOf('week');\r\n                    endDate = moment().year(Number(weekParts[0])).week(weekNumber).endOf('week');\r\n                }\r\n                break;\r\n            case 'monthly':\r\n                if (this.state.monthly.month === '') {\r\n                    hasError = true;\r\n                    errors.monthly = true;\r\n                }\r\n                else {\r\n                    let monthParts = this.state.monthly.month.split('-');\r\n                    startDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).startOf('month');\r\n                    endDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).endOf('month');\r\n                }\r\n                break;\r\n            case 'yearly':\r\n                if (this.state.yearly.year === '' || isNaN(this.state.yearly.year)) {\r\n                    hasError = true;\r\n                    errors.yearly = true;\r\n                }\r\n                else {\r\n                    let year = Number(this.state.yearly.year);\r\n                    startDate = moment().year(year).startOf('year');\r\n                    endDate = moment().year(year).endOf('year');\r\n                }\r\n                break;\r\n           default: //custom range\r\n                if(this.state.custom.from === ''){\r\n                    hasError = true;\r\n                    errors.from = true;\r\n                }\r\n                else if(this.state.custom.to === '') {\r\n                    hasError = true;\r\n                    errors.to = true;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.custom.from).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.custom.to).hours(23).minutes(59).seconds(59);\r\n                }\r\n        }\r\n        if(hasError) {\r\n            this.setState({...this.state, errors });\r\n        }\r\n        else {\r\n            this.props.applyFilter(startDate, endDate, this.state.viewType);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <DialogTitle>Filter expense</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>View</InputLabel>\r\n                        <Select\r\n                            value={this.state.viewType} onChange={this.changeViewType.bind(this)}>\r\n                                <MenuItem value=\"daily\"><em>Daily</em></MenuItem>\r\n                                <MenuItem value=\"weekly\"><em>Weekly</em></MenuItem>\r\n                                <MenuItem value=\"monthly\"><em>Monthly</em></MenuItem>\r\n                                <MenuItem value=\"yearly\"><em>Yearly</em></MenuItem>\r\n                                <MenuItem value=\"custom\"><em>Custom</em></MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    {this.state.viewType === 'daily' ?\r\n                        <TextField\r\n                            error={this.state.errors.daily}\r\n                            ref=\"title\"\r\n                            label=\"Date\"\r\n                            value={this.state.daily.date} \r\n                            onChange={this.changeStateValue.bind(this, 'daily', 'date')}\r\n                            margin=\"normal\"\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'weekly' ?\r\n                        <TextField\r\n                            error={this.state.errors.weekly}\r\n                            ref=\"title\"\r\n                            label=\"Week\"\r\n                            value={this.state.weekly.week} \r\n                            onChange={this.changeStateValue.bind(this, 'weekly', 'week')}\r\n                            margin=\"normal\"\r\n                            type=\"week\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'monthly' ?\r\n                        <TextField\r\n                            error={this.state.errors.monthly}\r\n                            ref=\"title\"\r\n                            label=\"Month\"\r\n                            value={this.state.monthly.month} \r\n                            onChange={this.changeStateValue.bind(this, 'monthly', 'month')}\r\n                            margin=\"normal\"\r\n                            type=\"month\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'yearly' ?\r\n                        <TextField\r\n                            error={this.state.errors.yearly}\r\n                            ref=\"title\"\r\n                            label=\"Year\"\r\n                            value={this.state.yearly.year} \r\n                            onChange={this.changeStateValue.bind(this, 'yearly', 'year')}\r\n                            margin=\"normal\"\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'custom' ?\r\n                        <>\r\n                            <TextField\r\n                                error={this.state.errors.from}\r\n                                ref=\"title\"\r\n                                label=\"From\"\r\n                                value={this.state.custom.from} \r\n                                onChange={this.changeStateValue.bind(this, 'custom', 'from')}\r\n                                margin=\"normal\"\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                            />\r\n                            <TextField\r\n                                error={this.state.errors.to}\r\n                                ref=\"title\"\r\n                                label=\"To\"\r\n                                value={this.state.custom.to} \r\n                                onChange={this.changeStateValue.bind(this, 'custom', 'to')}\r\n                                margin=\"normal\"\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </>\r\n                    : null }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.close} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={this.handleApply.bind(this)} color=\"primary\">Apply</Button>\r\n                </DialogActions>\r\n            </>\r\n        );\r\n    }\r\n}\r\n  \r\n  export default Filter;\r\n  ","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport './expense.css';\r\nimport Filter from \"../common/filter\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport {\r\n  IconButton,\r\n  Dialog,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Fab,\r\n  AppBar,\r\n  Toolbar,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = {\r\n  appBar: {\r\n      position: 'fixed',\r\n      marginTop: 56,\r\n      zIndex: 1\r\n  },\r\n  filterLabel:{\r\n    flexGrow: 1,\r\n    textAlign: 'center'\r\n  }\r\n}\r\n\r\nclass Expense extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let filter = localStorage.getItem('expensefilter');\r\n    if (filter !== null) {\r\n      filter = JSON.parse(filter);\r\n      filter.from = moment(filter.from);\r\n      filter.to = moment(filter.to);\r\n    }\r\n    else {\r\n      filter = {\r\n        viewType: 'daily',\r\n        from: moment().hours(0).minutes(0).seconds(0),\r\n        to: moment().hours(23).minutes(59).seconds(59)\r\n      }\r\n    }\r\n    this.state = {\r\n      currentFilter: '',\r\n      total: 0,\r\n      expenses: [],\r\n      showFilter: false,\r\n      filter\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadExpenses(this.state.filter.from, this.state.filter.to, this.state.filter.viewType);\r\n  }\r\n\r\n  toggleFilter = () => {\r\n    this.setState({ ...this.state, showFilter: !this.state.showFilter });\r\n  }\r\n\r\n  loadExpenses = (from, to, viewType) => {\r\n    let filter = { from, to, viewType};\r\n    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n    if (from.month() === to.month() && from.date() === to.date() && from.year() === to.year()) {\r\n      this.setState({ ...this.state, expenses: [], currentFilter: from.format('MMM DD'), total: 0, filter });\r\n    }\r\n    else {\r\n      this.setState({ ...this.state, expenses: [], currentFilter: from.format('MMM DD') + ' - ' + to.format('MMM DD'), total: 0, filter });\r\n    }\r\n\r\n    var range = null;\r\n    if (from && to) {\r\n      range = IDBKeyRange.bound(from.toDate(), to.toDate());\r\n    }\r\n    const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n    requestDatabase.onsuccess = (event) => {\r\n      var db = event.target.result;\r\n      var transaction = db.transaction([\"expense\"], \"readonly\");\r\n      var store = transaction.objectStore(\"expense\");\r\n      var selectall = range === null ? store.index('date').openCursor(null, 'prev') : store.index('date').openCursor(range, 'prev');\r\n      this.setState({ ...this.state, showFilter: false });\r\n      let shits = [];\r\n      let total = 0;\r\n      selectall.onsuccess = (event) => {\r\n        var cursor = event.target.result;\r\n        if (cursor) {\r\n          shits.push(cursor.value);\r\n          total += cursor.value.amount;\r\n          cursor.continue();\r\n        }\r\n      }\r\n      transaction.oncomplete = () => {\r\n        this.renderShits(shits, total);\r\n      }\r\n    }\r\n  }\r\n\r\n  renderShits = (shits, total) => {\r\n    this.setState({ ...this.state, expenses: shits, total });\r\n  }\r\n\r\n  navigate = (type) => {\r\n    let filterType = \"days\";\r\n    filterType = this.state.filter.viewType === \"weekly\" ? \"weeks\" : filterType;\r\n    filterType = this.state.filter.viewType === \"monthly\" ? \"months\" : filterType;\r\n    filterType = this.state.filter.viewType === \"yearly\" ? \"years\" : filterType;\r\n    let from, to;\r\n    if (type === \"prev\") {\r\n      from = this.state.filter.from.subtract(1, filterType);\r\n      to = this.state.filter.to.subtract(1, filterType);\r\n    }\r\n    else {\r\n      from = this.state.filter.from.add(1, filterType);\r\n      to = this.state.filter.to.add(1, filterType);\r\n    }\r\n\r\n    if (filterType === \"months\") {\r\n      to.endOf(\"month\");\r\n    }\r\n    this.setState({ ...this.state, filter: { ...this.state.filter, from: from, to: to } });\r\n    this.loadExpenses(from, to, this.state.filter.viewType);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyToolbarWithNavigation title=\"Expense\" buttons={[\r\n          <IconButton onClick={this.toggleFilter} color=\"inherit\" aria-label=\"Menu\">\r\n            <FilterList />\r\n          </IconButton>\r\n        ]} />\r\n        <AppBar className={this.props.classes.appBar} color=\"default\">\r\n          <Toolbar>\r\n            {this.state.filter.viewType !== \"custom\" ?\r\n              <IconButton onClick={this.navigate.bind(this, 'prev')}>\r\n                <ArrowBackIos />\r\n              </IconButton>\r\n              : null}\r\n            <Typography component=\"p\" className={this.props.classes.filterLabel}>\r\n              {this.state.currentFilter}<br /><small>{formatMoney(this.state.total)}</small>\r\n            </Typography>\r\n            {this.state.filter.viewType !== \"custom\" ?\r\n              <IconButton onClick={this.navigate.bind(this, 'next')}>\r\n                <ArrowForwardIos />\r\n              </IconButton>\r\n              : null}\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <div style={{ marginTop: '56px', overflowY: 'auto', minHeight: '100%' }}>\r\n          <List component=\"nav\">\r\n            {this.state.expenses.map(item =>\r\n              <Link key={item.expenseId} style={{ textDecoration: 'none' }} className=\"list-item\" to={'/expense/edit/' + item.expenseId}>\r\n                <ListItem button>\r\n                  <ListItemText primary={item.title} secondary={moment(item.date).format('MMM DD hh:mma (ddd)')} />\r\n                  <Typography className=\"float-right\">{formatMoney(item.amount)}</Typography >\r\n                </ListItem>\r\n                <Divider light />\r\n              </Link>\r\n            )}\r\n          </List>\r\n        </div>\r\n\r\n        <Dialog\r\n          onClose={this.toggleFilter}\r\n          open={this.state.showFilter}>\r\n          <Filter close={this.toggleFilter.bind(this)} applyFilter={this.loadExpenses.bind(this)} />\r\n        </Dialog>\r\n\r\n        <Fab onClick={() => { this.props.history.push(\"/expense/new\") }} color=\"primary\" aria-label=\"Add\" style={{ position: 'fixed', bottom: '15px', right: '15px' }}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExpense.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Expense);","import React, { Component } from 'react';\r\n\r\nclass Income extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n            <h1>Income index</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Income;\r\n  ","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 56\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass MyToolbar extends Component {\r\n  render(){\r\n    return (\r\n      <div style={styles.root}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            {this.props.showBackButton ? \r\n              <IconButton onClick={this.props.onBack} style={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <ArrowBack />\r\n              </IconButton>\r\n            : null}\r\n            <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\r\n              {this.props.title}\r\n            </Typography>\r\n            {this.props.buttons.map((item, index) => <span key={index}>{item}</span>)}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyToolbar;","import React, { Component } from 'react';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { selectAll, insert } from \"../../helpers\";\r\n\r\n\r\nclass NewExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 1,\r\n            description: '',\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            accounts: [],\r\n            categories: [],\r\n            errors: {\r\n                title: false,\r\n                category: false,\r\n                amount: false,\r\n                account: false,\r\n                date: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        selectAll(\"account\").then((accounts) => {\r\n            this.setState({ ...this.state, accounts });\r\n        });\r\n        selectAll(\"category\").then((categories) => {\r\n            this.setState({ ...this.state, categories });\r\n        });\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    handleSave() {\r\n        var data = {\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n\r\n        let hasError = false;\r\n        let errors = {\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false,\r\n            date: false\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.date || this.state.date === '') {\r\n            errors.date = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            insert(\"expense\", data, (success) => {\r\n                if (success) {\r\n                    let filter = {\r\n                        from: moment(data.date).hours(0).minutes(0).seconds(0),\r\n                        to: moment(data.date).hours(0).hours(23).minutes(59).seconds(59),\r\n                        viewType: 'daily'\r\n                    };\r\n                    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n                    this.props.history.push(\"/expense\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add expense\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Save /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Account</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.account}\r\n                            value={this.state.accountId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.title}\r\n                        label=\"Title\"\r\n                        value={this.state.title}\r\n                        onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.category}\r\n                            value={this.state.categoryId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.date}\r\n                        label=\"Date\"\r\n                        type=\"datetime-local\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleChangeProperty.bind(this, 'date')}\r\n                    />\r\n                    <TextField\r\n                        className=\"form-control\"\r\n                        label=\"Notes\"\r\n                        multiline\r\n                        rows=\"6\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewExpense;\r\n","import React, { Component } from 'react';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { selectAll, update } from \"../../helpers\";\r\nimport { DialogTitle, Dialog, Button, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\n\r\nclass EditExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDelete: false,\r\n            expenseId: Number(this.props.match.params.id),\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 0,\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            description: '',\r\n            accounts: [],\r\n            categories: [],\r\n            errors: {\r\n                title: false,\r\n                category: false,\r\n                amount: false,\r\n                account: false,\r\n                date: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        selectAll(\"account\").then((accounts) => {\r\n            this.setState({ ...this.state, accounts });\r\n        });\r\n        selectAll(\"category\").then((categories) => {\r\n            this.setState({ ...this.state, categories });\r\n        });\r\n        this.loadExpense(this.state.expenseId, this);\r\n    }\r\n\r\n    loadExpense = (id, component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"expense\"], \"readonly\");\r\n\r\n            var store = transaction.objectStore(\"expense\");\r\n            var select = store.get(id);\r\n\r\n            transaction.oncomplete = (event) => {\r\n                if (!select.result) {\r\n                    this.props.history.push(\"/expense\");\r\n                    return;\r\n                }\r\n                component.setState({\r\n                    ...component.state,\r\n                    title: select.result.title,\r\n                    categoryId: select.result.categoryId,\r\n                    amount: formatMoney(select.result.amount),\r\n                    accountId: select.result.accountId,\r\n                    description: select.result.description,\r\n                    date: moment(select.result.date).format('YYYY-MM-DD[T]HH:mm')\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    handleSave() {\r\n        var self = this;\r\n        var data = {\r\n            expenseId: this.state.expenseId,\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n\r\n        let hasError = false;\r\n        let errors = {\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false,\r\n            date: false\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.date || this.state.date === '') {\r\n            errors.date = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            update(\"expense\", data, (success) => {\r\n                if (success) {\r\n                    let filter = {\r\n                        from: moment(data.date).hours(0).minutes(0).seconds(0),\r\n                        to: moment(data.date).hours(0).hours(23).minutes(59).seconds(59),\r\n                        viewType: 'daily'\r\n                    };\r\n                    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n                    self.props.history.push(\"/expense\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDelete = () => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction(\"expense\", \"readwrite\");\r\n            var store = transaction.objectStore(\"expense\");\r\n            store.delete(this.state.expenseId);\r\n            transaction.oncomplete = (event) => {\r\n                this.props.history.push(\"/expense\");\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleDeleteModal = () => {\r\n        this.setState({ ...this.state, showDelete: !this.state.showDelete });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add expense\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.toggleDeleteModal.bind(this)} color=\"inherit\"><Delete /></IconButton>),\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Save /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Account</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.account}\r\n                            value={this.state.accountId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.title}\r\n                        label=\"Title\"\r\n                        value={this.state.title}\r\n                        onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.category}\r\n                            value={this.state.categoryId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.date}\r\n                        label=\"Date\"\r\n                        type=\"datetime-local\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleChangeProperty.bind(this, 'date')}\r\n                    />\r\n                    <TextField\r\n                        className=\"form-control\"\r\n                        label=\"Notes\"\r\n                        multiline\r\n                        rows=\"6\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                        margin=\"normal\"\r\n                    />\r\n\r\n                    <Dialog\r\n                        onClose={this.toggleDeleteModal}\r\n                        open={this.state.showDelete}>\r\n                        <DialogTitle>Confirm</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>Are you sure you want to delete?</DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.toggleDeleteModal} color=\"primary\" autoFocus>Cancel</Button>\r\n                            <Button onClick={this.handleDelete} color=\"secondary\">Delete</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditExpense;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport { Typography, Fab, Select, MenuItem, Divider } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { selectAll } from \"../../helpers\";\r\nimport { budgetRepeatEnum } from \"../../helpers\";\r\nimport { validateBudget } from \"../../modules/budget-module\";\r\nimport BudgetSummary from \"../dashboard/widgets/budget-summary\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst styles = {\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: 15,\r\n        right: 15\r\n    },\r\n    filter: {\r\n        color: '#fff',\r\n        borderColor: '#fff'\r\n    },\r\n    divider: {\r\n        marginBottom: 20\r\n    }\r\n}\r\n\r\nclass Budget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nonRepeating: {\r\n                items: []\r\n            },\r\n            weekly: {\r\n                start: moment().startOf(\"week\"),\r\n                end: moment().endOf(\"week\"),\r\n                items: []\r\n            },\r\n            monthly: {\r\n                start: moment().startOf(\"month\"),\r\n                end: moment().endOf(\"month\"),\r\n                items: []\r\n            },\r\n            daily: {\r\n                start: moment().startOf(\"day\"),\r\n                end: moment().endOf(\"day\"),\r\n                items: []\r\n            },\r\n            display: 'all'\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        selectAll(\"budget\").then((items) => {\r\n            let daily = [];\r\n            let weekly = [];\r\n            let monthly = [];\r\n            let nonRepeating = [];\r\n            for (var i = 0; i < items.length; i++) {\r\n                let budget = items[i];\r\n                if (budget.repeat) {\r\n                    let ledger = validateBudget(budget);\r\n                    if (ledger != null) {\r\n                        budget.ledger = [ledger];\r\n                        if (budget.repeat === budgetRepeatEnum.daily) daily.push(budget);\r\n                        else if (budget.repeat === budgetRepeatEnum.weekly) weekly.push(budget);\r\n                        else if (budget.repeat === budgetRepeatEnum.monthly) monthly.push(budget);\r\n                    }\r\n                }\r\n                else {\r\n                    budget.ledger[0].endDate = budget.noEndDate ? new Date() : budget.ledger[0].endDate;\r\n                    nonRepeating.push(budget);\r\n                }\r\n            }\r\n            this.setState({\r\n                ...this.state,\r\n                daily: { ...this.state.daily, items: daily },\r\n                weekly: { ...this.state.weekly, items: weekly },\r\n                monthly: { ...this.state.monthly, items: monthly },\r\n                nonRepeating: { ...this.state.nonRepeating, items: nonRepeating }\r\n            });\r\n        });\r\n    }\r\n    \r\n    changeDisplay = (event) => {\r\n        this.setState({ ...this.state, display: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbarWithNavigation title=\"Budget\" buttons={[\r\n                    <Select\r\n                        className={this.props.classes.filter}\r\n                        value=\"all\" onChange={this.changeDisplay.bind(this)}>\r\n                        <MenuItem value=\"all\">All</MenuItem>\r\n                        <MenuItem value=\"daily\">Daily</MenuItem>\r\n                        <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                        <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                    </Select>\r\n                ]} />\r\n\r\n                {this.state.display === 'all' ?\r\n                    this.state.nonRepeating.items.map((item, i) =>\r\n                        <div key={i} className=\"content\">\r\n                            <Link style={{ textDecoration: 'none' }} to={`/budget/edit/${item.budgetId}`}>\r\n                                <BudgetSummary budget={item} />\r\n                            </Link>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                {this.state.display === 'all' || this.state.display === 'daily' ?\r\n                    <RenderItems items={this.state.daily.items} label=\"Daily\" classes={this.props.classes} />\r\n                    : null}\r\n\r\n                {this.state.display === 'all' || this.state.display === 'weekly' ?\r\n                    <RenderItems items={this.state.weekly.items} label=\"Weekly\" classes={this.props.classes} />\r\n                    : null}\r\n\r\n                {this.state.display === 'all' || this.state.display === 'monthly' ?\r\n                    <RenderItems items={this.state.monthly.items} label=\"Monthly\" classes={this.props.classes} />\r\n                    : null}\r\n\r\n                <Fab onClick={() => { this.props.history.push('budget/new') }} color=\"primary\" className={this.props.classes.fab}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst RenderItems = (props) => (\r\n    <>\r\n        {props.items.length > 0 ?\r\n            <>\r\n                <Divider className={props.classes.divider} />\r\n                <Typography variant=\"button\" align=\"center\">{props.label}</Typography>\r\n                {props.items.map((item, i) =>\r\n                    <div key={i} className=\"content\">\r\n                        <Link style={{ textDecoration: 'none' }} to={`/budget/edit/${item.budgetId}`}>\r\n                            <BudgetSummary budget={item} />\r\n                        </Link>\r\n                    </div>\r\n                )}\r\n            </>\r\n            : null}\r\n    </>\r\n)\r\n\r\nBudget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Budget);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney, budgetRepeatEnum } from \"../../helpers\";\r\nimport { select, selectAll, update, remove } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { MenuItem, Input, Checkbox, ListItemText, Switch, FormControlLabel, DialogTitle, Dialog, Button, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\r\n\r\n\r\nconst styles = {\r\n    myClass: {\r\n        font: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    menuProps: {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: 48 * 4.5 + 8,\r\n                width: 250,\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nclass EditBudget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            budgetId: Number(this.props.match.params.id),\r\n            name: '',\r\n            selectedAccounts: [{ name: 'All', accountId: 0 }],\r\n            isActive: true,\r\n            repeat: budgetRepeatEnum.none,\r\n            startDate: '', //moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            endDate: '',//moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            amount: '0',\r\n            selectedCategories: [],\r\n            accounts: [],\r\n            categories: [],\r\n            showInDashboard: false,\r\n            noEndDate: false,\r\n            errors: {\r\n                name: false,\r\n                selectedAccounts: false,\r\n                repeat: false,\r\n                startDate: false,\r\n                endDate: false,\r\n                amount: false,\r\n                selectedCategories: false\r\n            },\r\n            showDelete: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        selectAll(\"account\").then((accounts) => {\r\n            accounts.unshift({ accountId: 0, name: 'All' });\r\n            this.setState({ ...this.state, accounts });\r\n            selectAll(\"category\").then((categories) => {\r\n                categories.unshift({ categoryId: 0, name: 'All' });\r\n                this.setState({ ...this.state, categories });\r\n                select(\"budget\", this.state.budgetId).then((budget) => {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        name: budget.name,\r\n                        selectedAccounts: budget.accountIds.map(a => accounts.find(m => { return m.accountId === a })),\r\n                        isActive: budget.isActive,\r\n                        repeat: budget.repeat,\r\n                        startDate: moment(budget.startDate).format('YYYY-MM-DD'),\r\n                        endDate: budget.endDate === null ? '' : moment(budget.endDate).format('YYYY-MM-DD'),\r\n                        amount: formatMoney(budget.amount),\r\n                        selectedCategories: budget.categoryIds.map(a => categories.find(m => { return m.categoryId === a })),\r\n                        noEndDate: budget.noEndDate,\r\n                        ledger: budget.ledger,\r\n                        showInDashboard: budget.showInDashboard\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    handleSave = () => {\r\n        var data = {\r\n            budgetId: this.state.budgetId,\r\n            name: this.state.name,\r\n            accountIds: this.state.selectedAccounts.map(m => m.accountId),\r\n            categoryIds: this.state.selectedCategories.map(m => m.categoryId),\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            repeat: this.state.repeat,\r\n            startDate: new Date(this.state.startDate),\r\n            noEndDate: this.state.noEndDate,\r\n            endDate: this.state.endDate,\r\n            isActive: true,\r\n            ledger: this.state.ledger,\r\n            showInDashboard: this.state.showInDashboard\r\n        };\r\n        let hasError = false;\r\n        let errors = {\r\n            name: false,\r\n            selectedAccounts: false,\r\n            repeat: false,\r\n            startDate: false,\r\n            endDate: false,\r\n            amount: false,\r\n            selectedCategories: false\r\n        }\r\n        if (data.name === '') {\r\n            hasError = true;\r\n            errors.name = true;\r\n        }\r\n        if (data.accountIds === null || data.accountIds === undefined || data.accountIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedAccounts = true;\r\n        }\r\n        if (data.categoryIds === null || data.categoryIds === undefined || data.categoryIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedCategories = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.startDate || this.state.startDate === '') {\r\n            hasError = true;\r\n            errors.startDate = true;\r\n        }\r\n        if (!data.noEndDate && (!this.state.endDate || this.state.endDate === '')) {\r\n            hasError = true;\r\n            errors.endDate = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            data.endDate = (data.noEndDate) ? null : new Date(data.endDate);\r\n\r\n            if (!data.repeat) {\r\n                data.ledger.push({\r\n                    startDate: moment(data.startDate).startOf(\"day\").toDate(),\r\n                    endDate: moment(data.endDate).endOf(\"day\").toDate(),\r\n                    spent: 0,\r\n                    amount: data.amount\r\n                });\r\n            }\r\n\r\n            update(\"budget\", data, (success) => {\r\n                if (success) {\r\n                    this.props.history.push(\"/budget\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === \"selectedAccounts\") {\r\n            let all = value.find(m => m.accountId === 0);\r\n            if (all !== null && all !== undefined) {\r\n                value = this.state.accounts;\r\n            }\r\n        }\r\n        else if (property === \"selectedCategories\") {\r\n            let all = value.find(m => m.categoryId === 0);\r\n            if (all !== null && all !== undefined) {\r\n                value = this.state.categories;\r\n            }\r\n        }\r\n        else if (property === \"noEndDate\" || property === \"showInDashboard\") {\r\n            value = value === \"true\";\r\n            if (value) {\r\n                this.setState({ ...this.state, endDate: '' });\r\n            }\r\n        }\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    handleDelete = () => {\r\n        remove(\"budget\", this.state.budgetId).then(() => {\r\n            this.props.history.push(\"/budget\");\r\n        });\r\n    }\r\n\r\n    toggleDeleteModal = () => {\r\n        this.setState({ ...this.state, showDelete: !this.state.showDelete });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add budget\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.toggleDeleteModal.bind(this)} color=\"inherit\"><Delete /></IconButton>),\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Save /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <TextField\r\n                        error={this.state.errors.name}\r\n                        label=\"Name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChangeProperty.bind(this, 'name')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Accounts</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedAccounts}\r\n                            multiple\r\n                            value={this.state.selectedAccounts}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedAccounts')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.accounts.map((account, index) => (\r\n                                <MenuItem key={index} value={account}>\r\n                                    <Checkbox checked={this.state.selectedAccounts.map(f => { return f.accountId }).indexOf(account.accountId) > -1} />\r\n                                    <ListItemText primary={account.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedCategories}\r\n                            multiple\r\n                            value={this.state.selectedCategories}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedCategories')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.categories.map((category, index) => (\r\n                                <MenuItem key={index} value={category}>\r\n                                    <Checkbox checked={this.state.selectedCategories.map(f => { return f.categoryId }).indexOf(category.categoryId) > -1} />\r\n                                    <ListItemText primary={category.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Repeat</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.repeat}\r\n                            value={this.state.repeat}\r\n                            onChange={this.handleChangeProperty.bind(this, 'repeat')}>\r\n                            <MenuItem value={budgetRepeatEnum.none}>None</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.daily}>Daily</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.weekly}>Weekly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.monthly}>Monthly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.custom}>Custom</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.startDate}\r\n                        label=\"Start date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.startDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'startDate')}\r\n                    />\r\n\r\n                    <TextField\r\n                        error={this.state.errors.endDate}\r\n                        label=\"End date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        disabled={this.state.noEndDate}\r\n                        value={this.state.endDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'endDate')}\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={this.state.noEndDate}\r\n                                onChange={this.handleChangeProperty.bind(this, 'noEndDate')}\r\n                                value={!this.state.noEndDate}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"no end date\"\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={this.state.showInDashboard}\r\n                                onChange={this.handleChangeProperty.bind(this, 'showInDashboard')}\r\n                                value={!this.state.showInDashboard}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"show widget on dashboard\"\r\n                    />\r\n                </div>\r\n\r\n                <Dialog\r\n                    onClose={this.toggleDeleteModal}\r\n                    open={this.state.showDelete}>\r\n                    <DialogTitle>Confirm</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>Are you sure you want to delete?</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.toggleDeleteModal} color=\"primary\" autoFocus>Cancel</Button>\r\n                        <Button onClick={this.handleDelete} color=\"secondary\">Delete</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nEditBudget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(EditBudget);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney, budgetRepeatEnum } from \"../../helpers\";\r\nimport { selectAll, insert } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { MenuItem, Input, Checkbox, ListItemText, Switch, FormControlLabel } from \"@material-ui/core\";\r\n\r\n\r\nconst styles = {\r\n    myClass: {\r\n        font: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    menuProps: {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: 48 * 4.5 + 8,\r\n                width: 250,\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nclass NewBudget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            selectedAccounts: [{ name: 'All', accountId: 0 }],\r\n            isActive: true,\r\n            repeat: budgetRepeatEnum.none,\r\n            startDate: '', //moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            endDate: '',//moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            amount: '0',\r\n            showInDashboard: false,\r\n            selectedCategories: [],\r\n            accounts: [],\r\n            categories: [],\r\n            noEndDate: false,\r\n            errors: {\r\n                name: false,\r\n                selectedAccounts: false,\r\n                repeat: false,\r\n                startDate: false,\r\n                endDate: false,\r\n                amount: false,\r\n                selectedCategories: false\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSave = () => {\r\n        var data = {\r\n            name: this.state.name,\r\n            accountIds: this.state.selectedAccounts.map(m => m.accountId),\r\n            categoryIds: this.state.selectedCategories.map(m => m.categoryId),\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            repeat: this.state.repeat,\r\n            startDate: new Date(this.state.startDate),\r\n            noEndDate: this.state.noEndDate,\r\n            endDate: this.state.endDate,\r\n            isActive: true,\r\n            showInDashboard: this.state.showInDashboard,\r\n            ledger: []\r\n        };\r\n        let hasError = false;\r\n        let errors = {\r\n            name: false,\r\n            selectedAccounts: false,\r\n            repeat: false,\r\n            startDate: false,\r\n            endDate: false,\r\n            amount: false,\r\n            selectedCategories: false\r\n        }\r\n        if (data.name === '') {\r\n            hasError = true;\r\n            errors.name = true;\r\n        }\r\n        if (data.accountIds === null || data.accountIds === undefined || data.accountIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedAccounts = true;\r\n        }\r\n        if (data.categoryIds === null || data.categoryIds === undefined || data.categoryIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedCategories = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.startDate || this.state.startDate === '') {\r\n            hasError = true;\r\n            errors.startDate = true;\r\n        }\r\n        if (!data.noEndDate && (!this.state.endDate || this.state.endDate === '')) {\r\n            hasError = true;\r\n            errors.endDate = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            data.endDate = (data.noEndDate) ? null : new Date(data.endDate);\r\n\r\n            if (!data.repeat) {\r\n                data.ledger.push({\r\n                    startDate: moment(data.startDate).startOf(\"day\").toDate(),\r\n                    endDate: moment(data.endDate).endOf(\"day\").toDate(),\r\n                    spent: 0,\r\n                    amount: data.amount\r\n                });\r\n            }\r\n            \r\n            insert(\"budget\", data, (success) => {\r\n                if (success) {\r\n                    this.props.history.push(\"/budget\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        selectAll(\"account\").then((accounts) => {\r\n            accounts.unshift({ accountId: 0, name: 'All' });\r\n            this.setState({ ...this.state, accounts })\r\n        });\r\n        selectAll(\"category\").then((categories) => {\r\n            categories.unshift({ categoryId: 0, name: 'All' });\r\n            this.setState({ ...this.state, categories });\r\n        });\r\n    }\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === \"selectedAccounts\") {\r\n            let all = value.find(m => m.accountId === 0);\r\n            if (all !== null && all !== undefined) {\r\n                value = this.state.accounts;\r\n            }\r\n        }\r\n        else if (property === \"selectedCategories\") {\r\n            let all = value.find(m => m.categoryId === 0);\r\n            if (all !== null && all !== undefined) {\r\n                value = this.state.categories;\r\n            }\r\n        }\r\n        else if (property === \"noEndDate\" || property === \"showInDashboard\") {\r\n            value = value === \"true\";\r\n            if (value) {\r\n                this.setState({ ...this.state, endDate: '' });\r\n            }\r\n        }\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add budget\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Save /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <TextField\r\n                        error={this.state.errors.name}\r\n                        label=\"Name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChangeProperty.bind(this, 'name')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Accounts</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedAccounts}\r\n                            multiple\r\n                            value={this.state.selectedAccounts}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedAccounts')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.accounts.map((account, index) => (\r\n                                <MenuItem key={index} value={account}>\r\n                                    <Checkbox checked={this.state.selectedAccounts.map(f => { return f.accountId }).indexOf(account.accountId) > -1} />\r\n                                    <ListItemText primary={account.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedCategories}\r\n                            multiple\r\n                            value={this.state.selectedCategories}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedCategories')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.categories.map((category, index) => (\r\n                                <MenuItem key={index} value={category}>\r\n                                    <Checkbox checked={this.state.selectedCategories.map(f => { return f.categoryId }).indexOf(category.categoryId) > -1} />\r\n                                    <ListItemText primary={category.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Repeat</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.repeat}\r\n                            value={this.state.repeat}\r\n                            onChange={this.handleChangeProperty.bind(this, 'repeat')}>\r\n                            <MenuItem value={budgetRepeatEnum.none}>None</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.daily}>Daily</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.weekly}>Weekly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.monthly}>Monthly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.custom}>Custom</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.startDate}\r\n                        label=\"Start date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.startDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'startDate')}\r\n                    />\r\n\r\n                    <TextField\r\n                        error={this.state.errors.endDate}\r\n                        label=\"End date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        disabled={this.state.noEndDate}\r\n                        value={this.state.endDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'endDate')}\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={this.state.noEndDate}\r\n                                onChange={this.handleChangeProperty.bind(this, 'noEndDate')}\r\n                                value={!this.state.noEndDate}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"no end date\"\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={this.state.showInDashboard}\r\n                                onChange={this.handleChangeProperty.bind(this, 'showInDashboard')}\r\n                                value={!this.state.showInDashboard}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"show widget on dashboard\"\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nNewBudget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(NewBudget);","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport { List, ListItem, ListItemText } from \"@material-ui/core\";\r\n\r\nconst styles = {\r\n    link: {\r\n        textDecoration: 'none'\r\n    }\r\n}\r\n\r\n\r\nclass Settings extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbarWithNavigation title=\"Settings\" buttons={[]} />\r\n                <List>\r\n                    <Link className={this.props.classes.link} to=\"/accounts\">\r\n                        <ListItem>\r\n                            <ListItemText primary=\"Accounts\" secondary=\"Create new accounts, edit existing ones, or delete an account.\" />\r\n                        </ListItem>\r\n                    </Link>\r\n                    <Link className={this.props.classes.link} to=\"/categories\">\r\n                        <ListItem>\r\n                            <ListItemText primary=\"Categories\" secondary=\"Manage your categories.\" />\r\n                        </ListItem>\r\n                    </Link>\r\n                </List>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nSettings.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Settings);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Divider,\r\n    Fab, Dialog, DialogTitle, DialogContent,\r\n    DialogActions, Button, TextField,\r\n    ListItemSecondaryAction,\r\n    IconButton,\r\n    DialogContentText\r\n} from \"@material-ui/core\";\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport { selectAll, insertAsync, updateAsync, remove } from \"../../helpers\";\r\n\r\nconst styles = {\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    addButton: {\r\n        position: 'fixed',\r\n        bottom: 15,\r\n        right: 15\r\n    },\r\n}\r\n\r\n\r\nclass Account extends Component {\r\n    state = {\r\n        accounts: [],\r\n        new: {\r\n            showModal: false,\r\n            name: '',\r\n            error: false\r\n        },\r\n        edit: {\r\n            accountId: 0,\r\n            showModal: false,\r\n            name: '',\r\n            error: false\r\n        },\r\n        delete: {\r\n            accountId: 0,\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var accounts = await selectAll(\"account\");\r\n        this.setState({ ...this.state, accounts });\r\n    }\r\n\r\n    showEditModal(accountId) {\r\n        var account = this.state.accounts.find(m => m.accountId === accountId);\r\n        if (account !== null && account !== undefined && account.accountId !== 1) {\r\n            this.setState({ ...this.state, edit: { accountId: account.accountId, name: account.name, error: false, showModal: true } })\r\n        }\r\n    }\r\n\r\n    async saveAdd() {\r\n        var name = this.state.new.name;\r\n        this.setState({ ...this.state, new: { ...this.state.new, error: false } });\r\n        if (name === null || name === undefined || name === '') {\r\n            this.setState({ ...this.state, new: { ...this.state.new, error: true } });\r\n        }\r\n        else {\r\n            var result = await insertAsync(\"account\", { name });\r\n            if (result) {\r\n                var accounts = await selectAll(\"account\");\r\n                this.setState({ ...this.state, accounts, new: { ...this.state.new, showModal: false } });\r\n            }\r\n        }\r\n    }\r\n\r\n    async saveEdit() {\r\n        var name = this.state.edit.name;\r\n        this.setState({ ...this.state, edit: { ...this.state.edit, error: false } });\r\n        if (name === null || name === undefined || name === '') {\r\n            this.setState({ ...this.state, edit: { ...this.state.edit, error: true } });\r\n        }\r\n        else {\r\n            var result = await updateAsync(\"account\", { accountId: this.state.edit.accountId, name });\r\n            if (result) {\r\n                var accounts = await selectAll(\"account\");\r\n                this.setState({ ...this.state, accounts, edit: { ...this.state.edit, showModal: false } });\r\n            }\r\n        }\r\n    }\r\n\r\n    async delete() {\r\n        var result = await remove(\"account\", this.state.delete.accountId);\r\n        if (result) {\r\n            var accounts = await selectAll(\"account\");\r\n            this.setState({ ...this.state, accounts, delete: { accountId: 0, showModal: false } });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar onBack={() => { this.props.history.goBack() }} showBackButton={true} title=\"Accounts\" buttons={[]} />\r\n                <List>\r\n                    {this.state.accounts.map((account, index) =>\r\n                        <div key={index}>\r\n                            <ListItem button onClick={this.showEditModal.bind(this, account.accountId)}>\r\n                                <ListItemText primary={account.name} secondary={account.accountId === 1 ? \"This is the default account, you can't do anything about it.\" : \"\"} />\r\n                                {account.accountId !== 1 ?\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton onClick={() => this.setState({ ...this.state, delete: { accountId: account.accountId, showModal: true } })}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction> : null}\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </div>\r\n                    )}\r\n                </List>\r\n                <Fab color=\"primary\"\r\n                    onClick={() => this.setState({ ...this.state, new: { ...this.state.new, showModal: true } })}\r\n                    className={this.props.classes.addButton}>\r\n                    <AddIcon />\r\n                </Fab>\r\n                <NewModal\r\n                    isOpen={this.state.new.showModal}\r\n                    value={this.state.new.name}\r\n                    error={this.state.new.error}\r\n                    changeValue={(e) => { this.setState({ ...this.state, new: { ...this.state.new, name: e.target.value } }) }}\r\n                    close={() => this.setState({ ...this.state, new: { ...this.state.new, showModal: false, name: '' } })}\r\n                    save={this.saveAdd.bind(this)}\r\n                />\r\n                <EditModal\r\n                    isOpen={this.state.edit.showModal}\r\n                    value={this.state.edit.name}\r\n                    error={this.state.edit.error}\r\n                    changeValue={(e) => { this.setState({ ...this.state, edit: { ...this.state.edit, name: e.target.value } }) }}\r\n                    close={() => this.setState({ ...this.state, edit: { ...this.state.edit, showModal: false } })}\r\n                    save={this.saveEdit.bind(this)}\r\n                />\r\n                <DeleteModal\r\n                    isOpen={this.state.delete.showModal}\r\n                    close={() => this.setState({ ...this.state, delete: { ...this.state.delete, showModal: false } })}\r\n                    delete={this.delete.bind(this)}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst NewModal = (props) => (\r\n    <Dialog\r\n        open={props.isOpen}>\r\n        <DialogTitle>Add new account</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n            <TextField\r\n                error={props.error}\r\n                className=\"form-control\"\r\n                label=\"Account name\"\r\n                onChange={props.changeValue.bind(this)}\r\n                margin=\"normal\"\r\n            />\r\n        </DialogContent>\r\n        <Divider />\r\n        <DialogActions>\r\n            <Button onClick={props.close} color=\"default\">Cancel</Button>\r\n            <Button onClick={props.save} color=\"primary\" autoFocus>Save</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n)\r\n\r\nconst EditModal = (props) => (\r\n    <Dialog\r\n        open={props.isOpen}>\r\n        <DialogTitle>Edit account</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n            <TextField\r\n                error={props.error}\r\n                className=\"form-control\"\r\n                label=\"Account name\"\r\n                value={props.value}\r\n                onChange={props.changeValue.bind(this)}\r\n                margin=\"normal\"\r\n            />\r\n        </DialogContent>\r\n        <Divider />\r\n        <DialogActions>\r\n            <Button onClick={props.close} color=\"default\">Cancel</Button>\r\n            <Button onClick={props.save} color=\"primary\" autoFocus>Save</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n)\r\n\r\nconst DeleteModal = (props) => (\r\n    <Dialog\r\n        open={props.isOpen}>\r\n        <DialogTitle>Confirm</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>Are you sure you want to delete this account?</DialogContentText>\r\n            <DialogContentText>This action cannot be undone.</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={props.close} color=\"primary\" autoFocus>Cancel</Button>\r\n            <Button onClick={props.delete} color=\"secondary\">Delete</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n)\r\n\r\nAccount.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Account);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n    List,\r\n    ListItem,\r\n    ListItemText,\r\n    Divider,\r\n    Fab, Dialog, DialogTitle, DialogContent,\r\n    DialogActions, Button, TextField,\r\n    ListItemSecondaryAction,\r\n    IconButton,\r\n    DialogContentText\r\n} from \"@material-ui/core\";\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport DeleteIcon from \"@material-ui/icons/Delete\"\r\nimport { selectAll, insertAsync, updateAsync, remove } from \"../../helpers\";\r\n\r\nconst styles = {\r\n    link: {\r\n        textDecoration: 'none'\r\n    },\r\n    addButton: {\r\n        position: 'fixed',\r\n        bottom: 15,\r\n        right: 15\r\n    },\r\n}\r\n\r\n\r\nclass Category extends Component {\r\n    state = {\r\n        categories: [],\r\n        new: {\r\n            showModal: false,\r\n            name: '',\r\n            error: false\r\n        },\r\n        edit: {\r\n            categoryId: 0,\r\n            showModal: false,\r\n            name: '',\r\n            error: false\r\n        },\r\n        delete: {\r\n            categoryId: 0,\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        var categories = await selectAll(\"category\");\r\n        this.setState({ ...this.state, categories });\r\n    }\r\n\r\n    showEditModal(categoryId) {\r\n        var category = this.state.categories.find(m => m.categoryId === categoryId);\r\n        if (category !== null && category !== undefined && [1,2,3].indexOf(category.categoryId) === -1) {\r\n            this.setState({ ...this.state, edit: { categoryId: category.categoryId, name: category.name, error: false, showModal: true } })\r\n        }\r\n    }\r\n\r\n    async saveAdd() {\r\n        var name = this.state.new.name;\r\n        this.setState({ ...this.state, new: { ...this.state.new, error: false } });\r\n        if (name === null || name === undefined || name === '') {\r\n            this.setState({ ...this.state, new: { ...this.state.new, error: true } });\r\n        }\r\n        else {\r\n            var result = await insertAsync(\"category\", { name });\r\n            if (result) {\r\n                var categories = await selectAll(\"category\");\r\n                this.setState({ ...this.state, categories, new: { ...this.state.new, showModal: false } });\r\n            }\r\n        }\r\n    }\r\n\r\n    async saveEdit() {\r\n        var name = this.state.edit.name;\r\n        this.setState({ ...this.state, edit: { ...this.state.edit, error: false } });\r\n        if (name === null || name === undefined || name === '') {\r\n            this.setState({ ...this.state, edit: { ...this.state.edit, error: true } });\r\n        }\r\n        else {\r\n            var result = await updateAsync(\"category\", { categoryId: this.state.edit.categoryId, name });\r\n            if (result) {\r\n                var categories = await selectAll(\"category\");\r\n                this.setState({ ...this.state, categories, edit: { ...this.state.edit, showModal: false } });\r\n            }\r\n        }\r\n    }\r\n\r\n    async delete() {\r\n        var result = await remove(\"category\", this.state.delete.categoryId);\r\n        if (result) {\r\n            var categories = await selectAll(\"category\");\r\n            this.setState({ ...this.state, categories, delete: { categoryId: 0, showModal: false } });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar onBack={() => { this.props.history.goBack() }} showBackButton={true} title=\"Categories\" buttons={[]} />\r\n                <List>\r\n                    {this.state.categories.map((category, index) =>\r\n                        <div key={index}>\r\n                            <ListItem button onClick={this.showEditModal.bind(this, category.categoryId)}>\r\n                                <ListItemText primary={category.name} secondary={[1,2,3].indexOf(category.categoryId) !== -1 ? \"This is the default category, you can't do anything about it.\" : \"\"} />\r\n                                {[1,2,3].indexOf(category.categoryId) === -1 ?\r\n                                    <ListItemSecondaryAction>\r\n                                        <IconButton onClick={() => this.setState({ ...this.state, delete: { categoryId: category.categoryId, showModal: true } })}>\r\n                                            <DeleteIcon />\r\n                                        </IconButton>\r\n                                    </ListItemSecondaryAction> : null}\r\n                            </ListItem>\r\n                            <Divider />\r\n                        </div>\r\n                    )}\r\n                </List>\r\n                <Fab color=\"primary\"\r\n                    onClick={() => this.setState({ ...this.state, new: { ...this.state.new, showModal: true } })}\r\n                    className={this.props.classes.addButton}>\r\n                    <AddIcon />\r\n                </Fab>\r\n                <NewModal\r\n                    isOpen={this.state.new.showModal}\r\n                    value={this.state.new.name}\r\n                    error={this.state.new.error}\r\n                    changeValue={(e) => { this.setState({ ...this.state, new: { ...this.state.new, name: e.target.value } }) }}\r\n                    close={() => this.setState({ ...this.state, new: { ...this.state.new, showModal: false, name: '' } })}\r\n                    save={this.saveAdd.bind(this)}\r\n                />\r\n                <EditModal\r\n                    isOpen={this.state.edit.showModal}\r\n                    value={this.state.edit.name}\r\n                    error={this.state.edit.error}\r\n                    changeValue={(e) => { this.setState({ ...this.state, edit: { ...this.state.edit, name: e.target.value } }) }}\r\n                    close={() => this.setState({ ...this.state, edit: { ...this.state.edit, showModal: false } })}\r\n                    save={this.saveEdit.bind(this)}\r\n                />\r\n                <DeleteModal\r\n                    isOpen={this.state.delete.showModal}\r\n                    close={() => this.setState({ ...this.state, delete: { ...this.state.delete, showModal: false } })}\r\n                    delete={this.delete.bind(this)}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst NewModal = (props) => (\r\n    <Dialog\r\n        open={props.isOpen}>\r\n        <DialogTitle>Add new category</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n            <TextField\r\n                error={props.error}\r\n                className=\"form-control\"\r\n                label=\"Category name\"\r\n                onChange={props.changeValue.bind(this)}\r\n                margin=\"normal\"\r\n            />\r\n        </DialogContent>\r\n        <Divider />\r\n        <DialogActions>\r\n            <Button onClick={props.close} color=\"default\">Cancel</Button>\r\n            <Button onClick={props.save} color=\"primary\" autoFocus>Save</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n)\r\n\r\nconst EditModal = (props) => (\r\n    <Dialog\r\n        open={props.isOpen}>\r\n        <DialogTitle>Edit category</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n            <TextField\r\n                error={props.error}\r\n                className=\"form-control\"\r\n                label=\"Category name\"\r\n                value={props.value}\r\n                onChange={props.changeValue.bind(this)}\r\n                margin=\"normal\"\r\n            />\r\n        </DialogContent>\r\n        <Divider />\r\n        <DialogActions>\r\n            <Button onClick={props.close} color=\"default\">Cancel</Button>\r\n            <Button onClick={props.save} color=\"primary\" autoFocus>Save</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n)\r\n\r\nconst DeleteModal = (props) => (\r\n    <Dialog\r\n        open={props.isOpen}>\r\n        <DialogTitle>Confirm</DialogTitle>\r\n        <DialogContent>\r\n            <DialogContentText>Are you sure you want to delete this category?</DialogContentText>\r\n            <DialogContentText>This action cannot be undone.</DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={props.close} color=\"primary\" autoFocus>Cancel</Button>\r\n            <Button onClick={props.delete} color=\"secondary\">Delete</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n)\r\n\r\nCategory.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Category);","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from '../dashboard/dashboard';\r\nimport Expense from '../expense/expense';\r\nimport Income from '../income/income';\r\nimport NewExpense from '../expense/new-expense';\r\nimport EditExpense from '../expense/edit-expense';\r\nimport Budget from '../budget/budget';\r\nimport EditBudget from '../budget/edit-budget';\r\nimport NewBudget from '../budget/new-budget';\r\nimport Settings from \"../settings/settings\";\r\nimport Account from \"../account/account\";\r\nimport Category from \"../category/category\";\r\n\r\nclass Main extends Component {\r\n    render() {\r\n      return (\r\n        <main>\r\n            <Switch>\r\n                <Route path='/income' component={Income}/>\r\n                <Route path='/expense/edit/:id' component={EditExpense} />\r\n                <Route path='/expense/new' component={NewExpense} />\r\n                <Route path='/expense' component={Expense}/>\r\n                <Route path='/budget/edit/:id' component={EditBudget}/>\r\n                <Route path='/budget/new' component={NewBudget}/>\r\n                <Route path='/budget' component={Budget}/>\r\n                <Route path='/settings' component={Settings}/>\r\n                <Route path='/accounts' component={Account}/>\r\n                <Route path='/categories' component={Category}/>\r\n\r\n                <Route path='/' component={Dashboard}/>\r\n            </Switch>\r\n        </main>\r\n      );\r\n    }\r\n}\r\n  \r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\r\nimport Main from './components/common/main';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper animate slideInRight\">\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport { initialize } from './database';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\nimport './App.css';\r\nimport 'typeface-roboto';\r\n\r\nconst configureHistory = () => {\r\n  return window.matchMedia('(display-mode: standalone)').matches\r\n    ? createHashHistory()\r\n    : createBrowserHistory()\r\n}\r\nconst history = configureHistory();\r\ninitialize(); //initialize database\r\nReactDOM.render((\r\n    <Router history={history} basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n    </Router>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","\r\nexport const initialize = () => {\r\n    var request = window.indexedDB.open(\"Moneytoring\", 7);\r\n    \r\n    request.onupgradeneeded = function(event) {\r\n        var db = event.target.result;\r\n\r\n        if (!db.objectStoreNames.contains('expense')) {\r\n            var expenseTable = db.createObjectStore(\"expense\", { keyPath: \"expenseId\", autoIncrement: true });\r\n            expenseTable.createIndex(\"expenseId\", \"expenseId\", { unique: true });\r\n            expenseTable.createIndex(\"title\", \"title\", { unique: false });\r\n            expenseTable.createIndex(\"categoryId\", \"categoryId\", { unique: false });\r\n            expenseTable.createIndex(\"amount\", \"amount\", { unique: false });\r\n            expenseTable.createIndex(\"accountId\", \"accountId\", { unique: false });\r\n            expenseTable.createIndex(\"description\", \"description\", { unique: false });\r\n            expenseTable.createIndex(\"date\", \"date\", { unique: false });\r\n        }\r\n        \r\n        if (!db.objectStoreNames.contains('account')) {\r\n            var accountTable = db.createObjectStore(\"account\", { keyPath: \"accountId\", autoIncrement: true });\r\n            accountTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n\r\n        if (!db.objectStoreNames.contains('category')) {\r\n            var categoryTable = db.createObjectStore(\"category\", { keyPath: \"categoryId\", autoIncrement: true });\r\n            categoryTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n\r\n        if (!db.objectStoreNames.contains('budget')) {\r\n            var budgetTable = db.createObjectStore(\"budget\", {keyPath: \"budgetId\", autoIncrement: true});\r\n            budgetTable.createIndex(\"name\", \"name\", { unique: false});\r\n            budgetTable.createIndex(\"repeat\", \"repeat\", { unique: false});\r\n            budgetTable.createIndex(\"startDate\", \"startDate\", { unique: false});\r\n            budgetTable.createIndex(\"endDate\", \"endDate\", { unique: false});\r\n            budgetTable.createIndex(\"amount\", \"amount\", { unique: false});\r\n            budgetTable.createIndex(\"accountIds\", \"accountIds\", { unique: false});\r\n            budgetTable.createIndex(\"isActive\", \"isActive\", { unique: false});\r\n            budgetTable.createIndex(\"categoryIds\", \"categoryIds\", { unique: false});\r\n            budgetTable.createIndex(\"ledger\", \"ledger\", { unique: false});\r\n            budgetTable.createIndex(\"noEndDate\", \"noEndDate\", { unique: false});\r\n        }\r\n        else {\r\n            var budgetTable = event.currentTarget.transaction.objectStore(\"budget\");\r\n            if (!budgetTable.indexNames.contains(\"showInDashboard\")) {\r\n                budgetTable.createIndex(\"showInDashboard\", \"showInDashboard\", { unique: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    request.onsuccess = function (event) {\r\n        var db = event.target.result;\r\n\r\n        //---------------------------------------\r\n        //create default account (personal)\r\n        //---------------------------------------\r\n        var transaction = db.transaction([\"account\"], \"readonly\");\r\n        var accountStore = transaction.objectStore(\"account\");\r\n        var selectAccounts = accountStore.getAll();\r\n        transaction.oncomplete = function (event) {            \r\n            if (selectAccounts.result.length === 0) {\r\n                var addAccountTransaction = db.transaction([\"account\"], \"readwrite\");\r\n                var accountStore1 = addAccountTransaction.objectStore(\"account\");\r\n                accountStore1.put({name: \"personal\"});\r\n            }\r\n        }\r\n        //----------------------------------------------------------------\r\n        //create default categories (food, transportation, clothing)\r\n        //----------------------------------------------------------------\r\n        var categoryTransaction = db.transaction([\"category\"], \"readonly\");\r\n        var categoryStore = categoryTransaction.objectStore(\"category\");\r\n        var selectCategories = categoryStore.getAll();\r\n        categoryTransaction.oncomplete = function (event) {\r\n            if (selectCategories.result.length === 0) {\r\n                var addCategoriesTransaction = db.transaction([\"category\"], \"readwrite\");\r\n                var addCategoryStore = addCategoriesTransaction.objectStore(\"category\");\r\n                addCategoryStore.put({name: \"food\"});\r\n                addCategoryStore.put({name: \"transportation\"});\r\n                addCategoryStore.put({name: \"clothing\"});\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":""}