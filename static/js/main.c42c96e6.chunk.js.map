{"version":3,"sources":["components/common/navigation-links.js","components/common/my-toolbar-with-navigation.js","helpers.js","components/dashboard/widgets/expense-summary.js","components/dashboard/dashboard.js","components/common/filter.js","components/expense/expense.js","components/income/income.js","components/common/my-toolbar.js","components/expense/new-expense.js","components/expense/edit-expense.js","modules/budget-module.js","components/dashboard/widgets/budget-summary.js","components/budget/budget.js","components/budget/edit-budget.js","components/budget/new-budget.js","components/common/main.js","App.js","serviceWorker.js","index.js","database.js"],"names":["NavigationLinks","react_default","a","createElement","style","width","List_default","Link","to","textDecoration","ListItem_default","ListItemIcon_default","Home_default","ListItemText_default","primary","MoneyOff_default","AttachMoney_default","ListAlt_default","Component","styles","root","flexGrow","paddingTop","grow","menuButton","marginLeft","marginRight","MyToolbarWithNavigation","state","isOpen","toggleDrawer","_this","setState","SwipeableDrawer_default","open","this","onClose","onOpen","disableBackdropTransition","tabIndex","role","onClick","onKeyDown","navigation_links","AppBar_default","position","Toolbar_default","IconButton_default","color","aria-label","Menu_default","Typography_default","variant","props","title","buttons","map","item","index","key","formatMoney","n","c","d","t","isNaN","Math","abs","undefined","s","i","String","parseInt","Number","toFixed","j","length","substr","replace","slice","selectAll","table","Promise","resolve","reject","indexedDB","onsuccess","event","target","result","transaction","objectStore","getAll","select","id","get","insert","data","done","tx","put","oncomplete","onerror","update","remove","delete","budgetRepeatEnum","none","daily","weekly","monthly","custom","filterTypes","ExpenseSummary","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getExpensesForCategory","items","categoryId","filter","m","subTotal","reduce","currValue","amount","filterType","from","moment","hours","minutes","seconds","filterDate","total","loadSummary","format","objectSpread","_this2","range","IDBKeyRange","bound","toDate","expenses","categories","selectall","openCursor","selectAllCategory","cursor","push","value","continue","categoryItemProperties","category","generateFilterDate","add","subtract","classes","Card_default","className","card","CardHeader_default","action","Fragment","prev","bind","ArrowBackIos_default","next","ArrowForwardIos_default","subheader","Divider_default","CardContent_default","cardContent","name","float","expenseItem","light","nothingToDoHere","CardActions_default","cardFooter","component","withStyles","minWidth","height","overflowY","textAlign","fabPrimary","bottom","right","zIndex","fabExpense","fabIncome","backdrop","Dashboard","toggleMenu","showMenu","newExpense","history","my_toolbar_with_navigation","Fab_default","size","Backdrop_default","Close_default","Add_default","padding","expense_summary","Filter","changeViewType","e","viewType","changeStateValue","parentProperty","childProperty","defineProperty","handleApply","startDate","Date","endDate","errors","yearly","hasError","date","week","weekParts","split","weekNumber","year","startOf","endOf","month","monthParts","applyFilter","DialogTitle_default","DialogContent_default","FormControl_default","margin","InputLabel_default","Select_default","onChange","MenuItem_default","TextField_default","error","ref","label","type","DialogActions_default","Button_default","close","Expense","toggleFilter","showFilter","loadExpenses","localStorage","setItem","JSON","stringify","currentFilter","store","shits","renderShits","navigate","getItem","parse","index_es","FilterList_default","appBar","filterLabel","marginTop","minHeight","expenseId","button","secondary","common_filter","Income","MyToolbar","showBackButton","onBack","ArrowBack_default","NewExpense","accountId","description","accounts","account","then","property","_this3","parseFloat","success","_this4","my_toolbar","goBack","handleSave","Save_default","handleChangeProperty","onBlur","formatCurrency","multiline","rows","EditExpense","loadExpense","handleDelete","toggleDeleteModal","showDelete","match","params","self","Delete_default","autoFocus","getExpensesOfBudgetLedger","ledger","accountIds","categoryIds","column","fromDate","indexOf","console","log","getBudgetRepeatTypeForMoment","budget","repeat","BudgetSummary","spent","progressBarClassName","percent","colorPrimary","progressGreen","barColorPrimary","progressBarGreen","progressYellow","progressBarYellow","progressRed","progressBarRed","gutterBottom","textCenter","lineHeight","concat","floatRight","marginBottom","bullet","display","transform","fontSize","pos","backgroundColor","Budget","componentDidMount","nonRepeating","validateBudget","noEndDate","find","toString","changeDisplay","start","end","budgetId","budget_summary","budget_RenderItems","fab","RenderItems","divider","align","borderColor","myClass","font","menuProps","PaperProps","maxHeight","EditBudget","unshift","selectedAccounts","isActive","selectedCategories","all","multiple","input","renderValue","selected","join","MenuProps","checked","f","disabled","control","NewBudget","Main","Switch","Route","path","App","main","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","matchMedia","matches","createHashHistory","createBrowserHistory","request","onupgradeneeded","db","objectStoreNames","contains","expenseTable","createObjectStore","keyPath","autoIncrement","createIndex","unique","budgetTable","selectAccounts","categoryTransaction","selectCategories","addCategoryStore","initialize","ReactDOM","render","Router","basename","process","src_App","document","getElementById","URL","href","origin","addEventListener","fetch","response","contentType","headers","status","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c42c96e6.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AttachMoneyICon from \"@material-ui/icons/AttachMoney\";\r\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\";\r\nimport ListAlt from \"@material-ui/icons/ListAlt\";\r\n\r\nclass NavigationLinks extends Component {\r\n    render() {\r\n      return (\r\n        <div style={{width: '250px'}}>\r\n          <List>\r\n            <Link to='/' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <HomeIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Dashboard\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to='/expense' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <MoneyOffIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Expense\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to='/income' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <AttachMoneyICon />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Income\" />\r\n              </ListItem>\r\n            </Link>\r\n            <Link to='/budget' style={{textDecoration: 'none'}}>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                    <ListAlt />\r\n                </ListItemIcon>\r\n                <ListItemText primary=\"Budget\" />\r\n              </ListItem>\r\n            </Link>\r\n          </List>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default NavigationLinks;","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NavigationLinks from \"./navigation-links\";\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 56\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass MyToolbarWithNavigation extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  toggleDrawer = () => {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n\r\n  render(){\r\n    return (\r\n      <div style={styles.root}>\r\n        <SwipeableDrawer\r\n          open={this.state.isOpen}\r\n          onClose={this.toggleDrawer}\r\n          onOpen={this.toggleDrawer}\r\n          disableBackdropTransition={true}>\r\n              <div\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                onClick={this.toggleDrawer}\r\n                onKeyDown={this.toggleDrawer}>\r\n                  <NavigationLinks />\r\n              </div>\r\n        </SwipeableDrawer>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            <IconButton onClick={this.toggleDrawer} style={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <MenuIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\r\n                {this.props.title}\r\n            </Typography>\r\n            {this.props.buttons.map((item, index) => <span color=\"inherit\" key={index}>{item}</span>)}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyToolbarWithNavigation;","\r\nexport const formatMoney = (n, c, d, t) => {\r\n  var c = isNaN(c = Math.abs(c)) ? 2 : c,\r\n    d = d === undefined ? \".\" : d,\r\n    t = t === undefined ? \",\" : t,\r\n    s = n < 0 ? \"-\" : \"\",\r\n    i = String(parseInt(n = Math.abs(Number(n) || 0).toFixed(c))),\r\n    j = (j = i.length) > 3 ? j % 3 : 0;\r\n\r\n  return s + (j ? i.substr(0, j) + t : \"\") + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + t) + (c ? d + Math.abs(n - i).toFixed(c).slice(2) : \"\");\r\n};\r\n\r\nexport const selectAll = (table) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readonly\");\r\n      let store = tx.objectStore(table);\r\n      let allItems = store.getAll();\r\n      allItems.onsuccess = (event) => {\r\n        resolve(event.target.result);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const select = (table, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readonly\");\r\n      let store = tx.objectStore(table);\r\n      let item = store.get(id);\r\n      item.onsuccess = (event) => {\r\n        resolve(event.target.result);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const selectAllWhereDateBetween = (table, column, fromDate, toDate) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readonly\");\r\n      var store = tx.objectStore(table);\r\n      let range = IDBKeyRange.bound(fromDate, toDate);\r\n      var selectall = store.index(column).openCursor(range, 'prev');\r\n      let shits = [];\r\n      selectall.onsuccess = (event) => {\r\n        var cursor = event.target.result;\r\n        if (cursor) {\r\n          shits.push(cursor.value);\r\n          cursor.continue();\r\n        }\r\n      }\r\n      tx.oncomplete = () => {\r\n        resolve(shits);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const insert = (table, data, done) => {\r\n  let db = indexedDB.open(\"Moneytoring\");\r\n  db.onsuccess = (event) => {\r\n    let tx = event.target.result.transaction([table], \"readwrite\");\r\n    let store = tx.objectStore(table);\r\n    store.put(data);\r\n    tx.oncomplete = (event) => {\r\n      done(true);\r\n    }\r\n    tx.onerror = (event) => {\r\n      done(false);\r\n    }\r\n  }\r\n}\r\n\r\nexport const update = (table, data, done) => {\r\n  let db = indexedDB.open(\"Moneytoring\");\r\n  db.onsuccess = (event) => {\r\n    let tx = event.target.result.transaction([table], \"readwrite\");\r\n    let store = tx.objectStore(table);\r\n    store.put(data);\r\n    tx.oncomplete = (event) => {\r\n      done(true);\r\n    }\r\n    tx.onerror = (event) => {\r\n      done(false);\r\n    }\r\n  }\r\n}\r\n\r\nexport const remove = (table, id) => {\r\n  return new Promise((resolve, reject) => {\r\n    let db = indexedDB.open(\"Moneytoring\");\r\n    db.onsuccess = (event) => {\r\n      let tx = event.target.result.transaction([table], \"readwrite\");\r\n      let store = tx.objectStore(table);\r\n      store.delete(id);\r\n      tx.oncomplete = (event) => {\r\n        resolve(true);\r\n      }\r\n      tx.onerror = (event) => {\r\n        reject(false);\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport const budgetRepeatEnum = {\r\n  none: 0,\r\n  daily: 1,\r\n  weekly: 2,\r\n  monthly: 3,\r\n  custom: 4\r\n}\r\n","import React, {Component} from 'react';\r\nimport moment from \"moment\";\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\nimport { formatMoney } from \"../../../helpers\";\r\n\r\nconst styles = {\r\n  card: {\r\n    minWidth: 275,\r\n  },\r\n  cardContent: {\r\n    height: 150,\r\n    overflowY: 'auto'\r\n  },\r\n  cardFooter: {\r\n    float: 'right'\r\n  },\r\n  expenseItem:{\r\n    marginLeft: 20\r\n  },\r\n  nothingToDoHere: {\r\n    paddingTop: 35,\r\n    textAlign: 'center'\r\n  }\r\n};\r\n\r\nconst filterTypes = {daily: 1, weekly: 2, monthly: 3}\r\n\r\nclass ExpenseSummary extends Component {\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      filterType: filterTypes.daily,\r\n      from: moment().hours(0).minutes(0).seconds(0),\r\n      to: moment().hours(23).minutes(59).seconds(59),\r\n      filterDate: '',\r\n      data: [],\r\n      total: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount () {\r\n    this.loadSummary();\r\n  }\r\n\r\n  generateFilterDate () {\r\n    let filterDate = this.state.from.format(\"MMM DD [(]ddd[)]\");\r\n    if (this.state.filterType !== filterTypes.daily) {\r\n      filterDate = this.state.from.format(\"MMM DD\") + ' - ' + this.state.to.format(\"MMM DD\");\r\n    }\r\n    this.setState({...this.state, filterDate});\r\n  }\r\n  \r\n  loadSummary () {\r\n    var range = IDBKeyRange.bound(this.state.from.toDate(), this.state.to.toDate());\r\n    let expenses = [];\r\n    let categories = [];\r\n    let total = 0;\r\n    let data = [];\r\n\r\n    const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n    requestDatabase.onsuccess = (event) => {\r\n        var db = event.target.result;\r\n        var transaction = db.transaction([\"expense\", \"category\"], \"readonly\");\r\n        var store = transaction.objectStore(\"expense\");\r\n        var selectall = store.index('date').openCursor(range, 'prev');\r\n        var selectAllCategory = transaction.objectStore(\"category\").getAll();\r\n        selectall.onsuccess = (event) => {\r\n            var cursor = event.target.result;\r\n            if(cursor) {\r\n                expenses.push(cursor.value);\r\n                total += cursor.value.amount;\r\n                cursor.continue();\r\n            }\r\n        }\r\n\r\n        selectAllCategory.onsuccess = (event) => {\r\n          categories = event.target.result;\r\n        }\r\n\r\n        transaction.oncomplete = () => {\r\n          for(var i=0; i<categories.length; i++){\r\n            let categoryItemProperties = this.getExpensesForCategory(expenses, categories[i].categoryId);\r\n            data.push({\r\n              category: categories[i],\r\n              subTotal: categoryItemProperties.subTotal,\r\n              items: categoryItemProperties.data\r\n            });\r\n          }\r\n          this.setState({...this.state, data, total});\r\n          this.generateFilterDate();\r\n        }\r\n    }\r\n  }\r\n\r\n  getExpensesForCategory = (items, categoryId) => {\r\n    let data = items.filter(m => { return m.categoryId === categoryId });\r\n    return { \r\n      data,\r\n      subTotal: data.reduce((currValue, i) => { return i.amount + currValue; }, 0)\r\n    };\r\n  }\r\n\r\n  changeFilterType () {\r\n\r\n  }\r\n\r\n  next () {\r\n    this.setState({...this.state, from: this.state.from.add(1, \"days\"), to: this.state.to.add(1, \"days\")});\r\n    this.loadSummary();\r\n  }\r\n\r\n  prev () {\r\n    this.setState({...this.state, from: this.state.from.subtract(1, \"days\"), to: this.state.to.subtract(1, \"days\")});\r\n    this.loadSummary();\r\n  }\r\n\r\n  render() {\r\n      const { classes } = this.props;\r\n      return (\r\n        <Card className={classes.card}>\r\n          <CardHeader\r\n            action={\r\n            <>\r\n              <IconButton onClick={this.prev.bind(this)}>\r\n                <ArrowBackIos />\r\n              </IconButton>\r\n              <IconButton onClick={this.next.bind(this)}>\r\n                <ArrowForwardIos />\r\n              </IconButton>\r\n            </>}\r\n            title=\"Expense\"\r\n            subheader={this.state.filterDate}\r\n          />\r\n          <Divider />\r\n          <CardContent className={classes.cardContent}>\r\n            {this.state.data.map((data, index) =>\r\n                data.items.length > 0 ?\r\n                    <div key={index}>\r\n                        <Typography variant=\"overline\">\r\n                            {data.category.name}\r\n                            <span style={{float: 'right'}}>{formatMoney(data.subTotal)}</span>\r\n                        </Typography>\r\n                        <div className={classes.expenseItem}>\r\n                          {data.items.map((item, i)=> \r\n                              <Typography key={i} variant=\"caption\">{item.title}<span style={{float: 'right'}}>{formatMoney(item.amount)}</span></Typography>\r\n                          )}\r\n                        </div>\r\n                        <Divider light />\r\n                    </div>\r\n                : null\r\n            )}\r\n            {this.state.total === 0 ? <Typography variant=\"body1\" className={classes.nothingToDoHere}>to do here: nothing</Typography> : null}\r\n          </CardContent>\r\n          <Divider />\r\n          <CardActions className={classes.cardFooter}>\r\n            <Typography component=\"p\">{formatMoney(this.state.total)}</Typography>\r\n          </CardActions>\r\n        </Card>\r\n      );\r\n  }\r\n}\r\n\r\nExpenseSummary.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(ExpenseSummary);","import React, { Component } from 'react';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AttachMoneyICon from \"@material-ui/icons/AttachMoney\";\r\nimport MoneyOffIcon from \"@material-ui/icons/MoneyOff\";\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport ExpenseSummary from \"./widgets/expense-summary\";\r\n\r\n\r\nconst styles = {\r\n  fabPrimary: {\r\n    position: 'absolute', bottom: '15px', right: '15px', zIndex: 2\r\n  },\r\n  fabExpense: {\r\n    position: 'absolute', bottom: '150px',  right: '23px', zIndex: 2\r\n  },\r\n  fabIncome: {\r\n    position: 'absolute',bottom: '90px', right: '23px', zIndex: 2\r\n  },\r\n  backdrop: {\r\n    zIndex: 1\r\n  }\r\n}\r\n\r\nclass Dashboard extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {showMenu: false}\r\n    }\r\n\r\n    toggleMenu = () => {\r\n      this.setState({...this.state, showMenu: !this.state.showMenu});\r\n    }\r\n\r\n    newExpense = () => {\r\n        this.props.history.push('/expense/new');\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n            <MyToolbarWithNavigation title=\"moneytoring\" buttons={[]} />\r\n            {this.state.showMenu ? \r\n              <>\r\n                <Fab onClick={this.newExpense} className=\"animated jello\" color=\"secondary\" size=\"small\" aria-label=\"expense\" style={styles.fabExpense}>\r\n                  <MoneyOffIcon />\r\n                </Fab>\r\n                <Fab className=\"animated jello\" color=\"default\" size=\"small\" aria-label=\"income\" style={styles.fabIncome}>\r\n                  <AttachMoneyICon />\r\n                </Fab>\r\n                <Backdrop onClick={this.toggleMenu} open={true} style={styles.backdrop} />\r\n              </>\r\n            : null }\r\n            <Fab onClick={this.toggleMenu} color=\"primary\" aria-label=\"Add\" style={styles.fabPrimary}>\r\n              {this.state.showMenu ? <CloseIcon /> : <AddIcon />}\r\n            </Fab>\r\n            <div style={{padding: '10px'}}>\r\n                <ExpenseSummary />\r\n            </div>\r\n            <div style={{padding: '10px'}}>\r\n            </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Dashboard;\r\n  ","import React, { Component } from 'react';\r\nimport moment from \"moment\";\r\nimport Button from '@material-ui/core/Button';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            viewType: 'daily',\r\n            daily: {\r\n                date: moment().format('YYYY-MM-DD')\r\n            },\r\n            weekly: {\r\n                week: ''\r\n            },\r\n            monthly: {\r\n                month: ''\r\n            },\r\n            yearly: {\r\n                year: ''\r\n            },\r\n            custom: {\r\n                from: '',\r\n                to:''\r\n            },\r\n            errors: {\r\n                daily: false,\r\n                weekly: false,\r\n                monthly: false,\r\n                yearly: false,\r\n                from: false,\r\n                to: false\r\n            }\r\n        }\r\n    }\r\n\r\n    changeViewType = (e) => {\r\n        this.setState({...this.state, viewType: e.target.value });\r\n    }\r\n\r\n    changeStateValue = (parentProperty, childProperty, e) => {\r\n        this.setState({...this.state, [parentProperty]: { ...this.state[parentProperty], [childProperty]: e.target.value }});\r\n    }\r\n\r\n    handleApply = () => {\r\n        let startDate = new Date();\r\n        let endDate = new Date();\r\n        let errors = {\r\n            daily: false,\r\n            weekly: false,\r\n            monthly: false,\r\n            yearly: false,\r\n            from: false,\r\n            to: false\r\n        };\r\n        let hasError = false;\r\n        switch(this.state.viewType) {\r\n            case 'daily':\r\n                if(this.state.daily.date === '') {\r\n                    hasError = true;\r\n                    errors.daily = true;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.daily.date).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.daily.date).hours(23).minutes(59).seconds(59);\r\n                }\r\n                break;\r\n            case 'weekly':\r\n                if (this.state.weekly.week === '') {\r\n                    hasError = true;\r\n                    errors.weekly = true;\r\n                }\r\n                else {\r\n                    let weekParts = this.state.weekly.week.split('-');\r\n                    let weekNumber = Number(weekParts[1].replace('W', ''));\r\n                    startDate = moment().year(Number(weekParts[0])).week(weekNumber).startOf('week');\r\n                    endDate = moment().year(Number(weekParts[0])).week(weekNumber).endOf('week');\r\n                }\r\n                break;\r\n            case 'monthly':\r\n                if (this.state.monthly.month === '') {\r\n                    hasError = true;\r\n                    errors.monthly = true;\r\n                }\r\n                else {\r\n                    let monthParts = this.state.monthly.month.split('-');\r\n                    startDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).startOf('month');\r\n                    endDate = moment().year(Number(monthParts[0])).month(Number(monthParts[1]) - 1).endOf('month');\r\n                }\r\n                break;\r\n            case 'yearly':\r\n                if (this.state.yearly.year === '' || isNaN(this.state.yearly.year)) {\r\n                    hasError = true;\r\n                    errors.yearly = true;\r\n                }\r\n                else {\r\n                    let year = Number(this.state.yearly.year);\r\n                    startDate = moment().year(year).startOf('year');\r\n                    endDate = moment().year(year).endOf('year');\r\n                }\r\n                break;\r\n           default: //custom range\r\n                if(this.state.custom.from === ''){\r\n                    hasError = true;\r\n                    errors.from = true;\r\n                }\r\n                else if(this.state.custom.to === '') {\r\n                    hasError = true;\r\n                    errors.to = true;\r\n                }\r\n                else {\r\n                    startDate = moment(this.state.custom.from).hours(0).minutes(0).seconds(0);\r\n                    endDate = moment(this.state.custom.to).hours(23).minutes(59).seconds(59);\r\n                }\r\n        }\r\n        if(hasError) {\r\n            this.setState({...this.state, errors });\r\n        }\r\n        else {\r\n            this.props.applyFilter(startDate, endDate, this.state.viewType);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <DialogTitle>Filter expense</DialogTitle>\r\n                <DialogContent>\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>View</InputLabel>\r\n                        <Select\r\n                            value={this.state.viewType} onChange={this.changeViewType.bind(this)}>\r\n                                <MenuItem value=\"daily\"><em>Daily</em></MenuItem>\r\n                                <MenuItem value=\"weekly\"><em>Weekly</em></MenuItem>\r\n                                <MenuItem value=\"monthly\"><em>Monthly</em></MenuItem>\r\n                                <MenuItem value=\"yearly\"><em>Yearly</em></MenuItem>\r\n                                <MenuItem value=\"custom\"><em>Custom</em></MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n\r\n                    {this.state.viewType === 'daily' ?\r\n                        <TextField\r\n                            error={this.state.errors.daily}\r\n                            ref=\"title\"\r\n                            label=\"Date\"\r\n                            value={this.state.daily.date} \r\n                            onChange={this.changeStateValue.bind(this, 'daily', 'date')}\r\n                            margin=\"normal\"\r\n                            type=\"date\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'weekly' ?\r\n                        <TextField\r\n                            error={this.state.errors.weekly}\r\n                            ref=\"title\"\r\n                            label=\"Week\"\r\n                            value={this.state.weekly.week} \r\n                            onChange={this.changeStateValue.bind(this, 'weekly', 'week')}\r\n                            margin=\"normal\"\r\n                            type=\"week\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'monthly' ?\r\n                        <TextField\r\n                            error={this.state.errors.monthly}\r\n                            ref=\"title\"\r\n                            label=\"Month\"\r\n                            value={this.state.monthly.month} \r\n                            onChange={this.changeStateValue.bind(this, 'monthly', 'month')}\r\n                            margin=\"normal\"\r\n                            type=\"month\"\r\n                            className=\"form-control\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'yearly' ?\r\n                        <TextField\r\n                            error={this.state.errors.yearly}\r\n                            ref=\"title\"\r\n                            label=\"Year\"\r\n                            value={this.state.yearly.year} \r\n                            onChange={this.changeStateValue.bind(this, 'yearly', 'year')}\r\n                            margin=\"normal\"\r\n                            className=\"form-control\"\r\n                            type=\"number\"\r\n                        />\r\n                    : null }\r\n                    {this.state.viewType === 'custom' ?\r\n                        <>\r\n                            <TextField\r\n                                error={this.state.errors.from}\r\n                                ref=\"title\"\r\n                                label=\"From\"\r\n                                value={this.state.custom.from} \r\n                                onChange={this.changeStateValue.bind(this, 'custom', 'from')}\r\n                                margin=\"normal\"\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                            />\r\n                            <TextField\r\n                                error={this.state.errors.to}\r\n                                ref=\"title\"\r\n                                label=\"To\"\r\n                                value={this.state.custom.to} \r\n                                onChange={this.changeStateValue.bind(this, 'custom', 'to')}\r\n                                margin=\"normal\"\r\n                                type=\"date\"\r\n                                className=\"form-control\"\r\n                            />\r\n                        </>\r\n                    : null }\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={this.props.close} color=\"secondary\">Cancel</Button>\r\n                    <Button onClick={this.handleApply.bind(this)} color=\"primary\">Apply</Button>\r\n                </DialogActions>\r\n            </>\r\n        );\r\n    }\r\n}\r\n  \r\n  export default Filter;\r\n  ","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport './expense.css';\r\nimport Filter from \"../common/filter\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport {\r\n  IconButton,\r\n  Dialog,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Typography,\r\n  Fab,\r\n  AppBar,\r\n  Toolbar,\r\n  Divider\r\n} from '@material-ui/core';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowBackIos from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIos from '@material-ui/icons/ArrowForwardIos';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst styles = {\r\n  appBar: {\r\n      position: 'fixed',\r\n      marginTop: 56,\r\n      zIndex: 1\r\n  },\r\n  filterLabel:{\r\n    flexGrow: 1,\r\n    textAlign: 'center'\r\n  }\r\n}\r\n\r\nclass Expense extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    let filter = localStorage.getItem('expensefilter');\r\n    if (filter !== null) {\r\n      filter = JSON.parse(filter);\r\n      filter.from = moment(filter.from);\r\n      filter.to = moment(filter.to);\r\n    }\r\n    else {\r\n      filter = {\r\n        viewType: 'daily',\r\n        from: moment().hours(0).minutes(0).seconds(0),\r\n        to: moment().hours(23).minutes(59).seconds(59)\r\n      }\r\n    }\r\n    this.state = {\r\n      currentFilter: '',\r\n      total: 0,\r\n      expenses: [],\r\n      showFilter: false,\r\n      filter\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadExpenses(this.state.filter.from, this.state.filter.to, this.state.filter.viewType);\r\n  }\r\n\r\n  toggleFilter = () => {\r\n    this.setState({ ...this.state, showFilter: !this.state.showFilter });\r\n  }\r\n\r\n  loadExpenses = (from, to, viewType) => {\r\n    let filter = { from, to, viewType};\r\n    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n    if (from.month() === to.month() && from.date() === to.date() && from.year() === to.year()) {\r\n      this.setState({ ...this.state, expenses: [], currentFilter: from.format('MMM DD'), total: 0, filter });\r\n    }\r\n    else {\r\n      this.setState({ ...this.state, expenses: [], currentFilter: from.format('MMM DD') + ' - ' + to.format('MMM DD'), total: 0, filter });\r\n    }\r\n\r\n    var range = null;\r\n    if (from && to) {\r\n      range = IDBKeyRange.bound(from.toDate(), to.toDate());\r\n    }\r\n    const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n    requestDatabase.onsuccess = (event) => {\r\n      var db = event.target.result;\r\n      var transaction = db.transaction([\"expense\"], \"readonly\");\r\n      var store = transaction.objectStore(\"expense\");\r\n      var selectall = range === null ? store.index('date').openCursor(null, 'prev') : store.index('date').openCursor(range, 'prev');\r\n      this.setState({ ...this.state, showFilter: false });\r\n      let shits = [];\r\n      let total = 0;\r\n      selectall.onsuccess = (event) => {\r\n        var cursor = event.target.result;\r\n        if (cursor) {\r\n          shits.push(cursor.value);\r\n          total += cursor.value.amount;\r\n          cursor.continue();\r\n        }\r\n      }\r\n      transaction.oncomplete = () => {\r\n        this.renderShits(shits, total);\r\n      }\r\n    }\r\n  }\r\n\r\n  renderShits = (shits, total) => {\r\n    this.setState({ ...this.state, expenses: shits, total });\r\n  }\r\n\r\n  navigate = (type) => {\r\n    let filterType = \"days\";\r\n    filterType = this.state.filter.viewType === \"weekly\" ? \"weeks\" : filterType;\r\n    filterType = this.state.filter.viewType === \"monthly\" ? \"months\" : filterType;\r\n    filterType = this.state.filter.viewType === \"yearly\" ? \"years\" : filterType;\r\n    let from, to;\r\n    if (type === \"prev\") {\r\n      from = this.state.filter.from.subtract(1, filterType);\r\n      to = this.state.filter.to.subtract(1, filterType);\r\n    }\r\n    else {\r\n      from = this.state.filter.from.add(1, filterType);\r\n      to = this.state.filter.to.add(1, filterType);\r\n    }\r\n\r\n    if (filterType === \"months\") {\r\n      to.endOf(\"month\");\r\n    }\r\n    this.setState({ ...this.state, filter: { ...this.state.filter, from: from, to: to } });\r\n    this.loadExpenses(from, to, this.state.filter.viewType);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyToolbarWithNavigation title=\"Expense\" buttons={[\r\n          <IconButton onClick={this.toggleFilter} color=\"inherit\" aria-label=\"Menu\">\r\n            <FilterList />\r\n          </IconButton>\r\n        ]} />\r\n        <AppBar className={this.props.classes.appBar} color=\"default\">\r\n          <Toolbar>\r\n            {this.state.filter.viewType !== \"custom\" ?\r\n              <IconButton onClick={this.navigate.bind(this, 'prev')}>\r\n                <ArrowBackIos />\r\n              </IconButton>\r\n              : null}\r\n            <Typography component=\"p\" className={this.props.classes.filterLabel}>\r\n              {this.state.currentFilter}<br /><small>{formatMoney(this.state.total)}</small>\r\n            </Typography>\r\n            {this.state.filter.viewType !== \"custom\" ?\r\n              <IconButton onClick={this.navigate.bind(this, 'next')}>\r\n                <ArrowForwardIos />\r\n              </IconButton>\r\n              : null}\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <div style={{ marginTop: '56px', overflowY: 'auto', minHeight: '100%' }}>\r\n          <List component=\"nav\">\r\n            {this.state.expenses.map(item =>\r\n              <Link key={item.expenseId} style={{ textDecoration: 'none' }} className=\"list-item\" to={'/expense/edit/' + item.expenseId}>\r\n                <ListItem button>\r\n                  <ListItemText primary={item.title} secondary={moment(item.date).format('MMM DD hh:mma (ddd)')} />\r\n                  <Typography className=\"float-right\">{formatMoney(item.amount)}</Typography >\r\n                </ListItem>\r\n                <Divider light />\r\n              </Link>\r\n            )}\r\n          </List>\r\n        </div>\r\n\r\n        <Dialog\r\n          onClose={this.toggleFilter}\r\n          open={this.state.showFilter}>\r\n          <Filter close={this.toggleFilter.bind(this)} applyFilter={this.loadExpenses.bind(this)} />\r\n        </Dialog>\r\n\r\n        <Fab onClick={() => { this.props.history.push(\"/expense/new\") }} color=\"primary\" aria-label=\"Add\" style={{ position: 'fixed', bottom: '15px', right: '15px' }}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nExpense.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Expense);","import React, { Component } from 'react';\r\n\r\nclass Income extends Component {\r\n    render() {\r\n      return (\r\n        <div>\r\n            <h1>Income index</h1>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default Income;\r\n  ","import React, {Component} from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBack from '@material-ui/icons/ArrowBack';\r\n\r\nconst styles = {\r\n  root: {\r\n    flexGrow: 1,\r\n    paddingTop: 56\r\n  },\r\n  grow: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20,\r\n  },\r\n};\r\n\r\nclass MyToolbar extends Component {\r\n  render(){\r\n    return (\r\n      <div style={styles.root}>\r\n        <AppBar position=\"fixed\">\r\n          <Toolbar>\r\n            {this.props.showBackButton ? \r\n              <IconButton onClick={this.props.onBack} style={styles.menuButton} color=\"inherit\" aria-label=\"Menu\">\r\n                <ArrowBack />\r\n              </IconButton>\r\n            : null}\r\n            <Typography variant=\"h6\" color=\"inherit\" style={styles.grow}>\r\n              {this.props.title}\r\n            </Typography>\r\n            {this.props.buttons.map((item, index) => <span key={index}>{item}</span>)}\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MyToolbar;","import React, { Component } from 'react';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { selectAll, insert } from \"../../helpers\";\r\n\r\n\r\nclass NewExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 1,\r\n            description: '',\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            accounts: [],\r\n            categories: [],\r\n            errors: {\r\n                title: false,\r\n                category: false,\r\n                amount: false,\r\n                account: false,\r\n                date: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        selectAll(\"account\").then((accounts) => {\r\n            this.setState({ ...this.state, accounts });\r\n        });\r\n        selectAll(\"category\").then((categories) => {\r\n            this.setState({ ...this.state, categories });\r\n        });\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    handleSave() {\r\n        var data = {\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n\r\n        let hasError = false;\r\n        let errors = {\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false,\r\n            date: false\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.date || this.state.date === '') {\r\n            errors.date = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            insert(\"expense\", data, (success) => {\r\n                if (success) {\r\n                    let filter = {\r\n                        from: moment(data.date).hours(0).minutes(0).seconds(0),\r\n                        to: moment(data.date).hours(0).hours(23).minutes(59).seconds(59),\r\n                        viewType: 'daily'\r\n                    };\r\n                    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n                    this.props.history.push(\"/expense\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add expense\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Save /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Account</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.account}\r\n                            value={this.state.accountId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.title}\r\n                        label=\"Title\"\r\n                        value={this.state.title}\r\n                        onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.category}\r\n                            value={this.state.categoryId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.date}\r\n                        label=\"Date\"\r\n                        type=\"datetime-local\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleChangeProperty.bind(this, 'date')}\r\n                    />\r\n                    <TextField\r\n                        className=\"form-control\"\r\n                        label=\"Notes\"\r\n                        multiline\r\n                        rows=\"6\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                        margin=\"normal\"\r\n                    />\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewExpense;\r\n","import React, { Component } from 'react';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport { selectAll, update } from \"../../helpers\";\r\nimport { DialogTitle, Dialog, Button, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\r\n\r\nclass EditExpense extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showDelete: false,\r\n            expenseId: Number(this.props.match.params.id),\r\n            title: '',\r\n            categoryId: 0,\r\n            amount: '',\r\n            accountId: 0,\r\n            date: moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            description: '',\r\n            accounts: [],\r\n            categories: [],\r\n            errors: {\r\n                title: false,\r\n                category: false,\r\n                amount: false,\r\n                account: false,\r\n                date: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        selectAll(\"account\").then((accounts) => {\r\n            this.setState({ ...this.state, accounts });\r\n        });\r\n        selectAll(\"category\").then((categories) => {\r\n            this.setState({ ...this.state, categories });\r\n        });\r\n        this.loadExpense(this.state.expenseId, this);\r\n    }\r\n\r\n    loadExpense = (id, component) => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction([\"expense\"], \"readonly\");\r\n\r\n            var store = transaction.objectStore(\"expense\");\r\n            var select = store.get(id);\r\n\r\n            transaction.oncomplete = (event) => {\r\n                if (!select.result) {\r\n                    this.props.history.push(\"/expense\");\r\n                    return;\r\n                }\r\n                component.setState({\r\n                    ...component.state,\r\n                    title: select.result.title,\r\n                    categoryId: select.result.categoryId,\r\n                    amount: formatMoney(select.result.amount),\r\n                    accountId: select.result.accountId,\r\n                    description: select.result.description,\r\n                    date: moment(select.result.date).format('YYYY-MM-DD[T]HH:mm')\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === 'accountId' || property === 'categoryId') {\r\n            value = parseInt(e.target.value);\r\n        }\r\n\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    handleSave() {\r\n        var self = this;\r\n        var data = {\r\n            expenseId: this.state.expenseId,\r\n            title: this.state.title,\r\n            categoryId: this.state.categoryId,\r\n            accountId: this.state.accountId,\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            description: this.state.description,\r\n            date: new Date(this.state.date)\r\n        };\r\n\r\n        let hasError = false;\r\n        let errors = {\r\n            title: false,\r\n            category: false,\r\n            amount: false,\r\n            account: false,\r\n            date: false\r\n        }\r\n        if (data.title === '') {\r\n            errors.title = true;\r\n            hasError = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (data.accountId === 0) {\r\n            errors.account = true;\r\n            hasError = true;\r\n        }\r\n        if (data.categoryId === 0) {\r\n            errors.category = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.date || this.state.date === '') {\r\n            errors.date = true;\r\n            hasError = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            update(\"expense\", data, (success) => {\r\n                if (success) {\r\n                    let filter = {\r\n                        from: moment(data.date).hours(0).minutes(0).seconds(0),\r\n                        to: moment(data.date).hours(0).hours(23).minutes(59).seconds(59),\r\n                        viewType: 'daily'\r\n                    };\r\n                    localStorage.setItem(\"expensefilter\", JSON.stringify(filter));\r\n                    self.props.history.push(\"/expense\");\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    handleDelete = () => {\r\n        const requestDatabase = indexedDB.open(\"Moneytoring\");\r\n        requestDatabase.onsuccess = (event) => {\r\n            var db = event.target.result;\r\n            var transaction = db.transaction(\"expense\", \"readwrite\");\r\n            var store = transaction.objectStore(\"expense\");\r\n            store.delete(this.state.expenseId);\r\n            transaction.oncomplete = (event) => {\r\n                this.props.history.push(\"/expense\");\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleDeleteModal = () => {\r\n        this.setState({ ...this.state, showDelete: !this.state.showDelete });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add expense\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.toggleDeleteModal.bind(this)} color=\"inherit\"><Delete /></IconButton>),\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Save /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Account</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.account}\r\n                            value={this.state.accountId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'accountId')}>\r\n                            <MenuItem value={0}><em>select account</em></MenuItem>\r\n                            {this.state.accounts.map(item => <MenuItem key={item.accountId} value={item.accountId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.title}\r\n                        label=\"Title\"\r\n                        value={this.state.title}\r\n                        onChange={this.handleChangeProperty.bind(this, 'title')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.category}\r\n                            value={this.state.categoryId}\r\n                            onChange={this.handleChangeProperty.bind(this, 'categoryId')}>\r\n                            <MenuItem value={0}><em>select category</em></MenuItem>\r\n                            {this.state.categories.map(item => <MenuItem key={item.categoryId} value={item.categoryId}>{item.name}</MenuItem>)}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.date}\r\n                        label=\"Date\"\r\n                        type=\"datetime-local\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.date}\r\n                        onChange={this.handleChangeProperty.bind(this, 'date')}\r\n                    />\r\n                    <TextField\r\n                        className=\"form-control\"\r\n                        label=\"Notes\"\r\n                        multiline\r\n                        rows=\"6\"\r\n                        value={this.state.description}\r\n                        onChange={this.handleChangeProperty.bind(this, 'description')}\r\n                        margin=\"normal\"\r\n                    />\r\n\r\n                    <Dialog\r\n                        onClose={this.toggleDeleteModal}\r\n                        open={this.state.showDelete}>\r\n                        <DialogTitle>Confirm</DialogTitle>\r\n                        <DialogContent>\r\n                            <DialogContentText>Are you sure you want to delete?</DialogContentText>\r\n                        </DialogContent>\r\n                        <DialogActions>\r\n                            <Button onClick={this.toggleDeleteModal} color=\"primary\" autoFocus>Cancel</Button>\r\n                            <Button onClick={this.handleDelete} color=\"secondary\">Delete</Button>\r\n                        </DialogActions>\r\n                    </Dialog>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditExpense;\r\n","import { budgetRepeatEnum, selectAllWhereDateBetween } from \"../helpers\";\r\n\r\nexport const getExpensesOfBudgetLedger = (ledger, accountIds, categoryIds) => {\r\n    return new Promise((resolve, reject) => {\r\n        selectAllWhereDateBetween(\"expense\", \"date\", ledger.startDate, ledger.endDate).then((expenses) => {\r\n            if (accountIds.indexOf(0) !== -1 && categoryIds.indexOf(0) !== -1) {\r\n                resolve(expenses);\r\n            }\r\n            else {\r\n                let result = [];\r\n                for (var i=0; i<expenses.length; i++) {\r\n                    console.log(expenses[i], categoryIds, accountIds);\r\n                    if ((categoryIds.indexOf(expenses[i].categoryId) !== -1 || categoryIds.indexOf(0) !== -1) && \r\n                    (accountIds.indexOf(expenses[i].accountId) !== -1 || accountIds.indexOf(0) !== -1)) {\r\n                        result.push(expenses[i]);\r\n                    }\r\n                }\r\n                resolve(result);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nexport const getBudgetRepeatTypeForMoment = (budget) => {\r\n    if (budget.repeat === budgetRepeatEnum.daily) return \"day\";\r\n    else if (budget.repeat === budgetRepeatEnum.weekly) return \"week\";\r\n    else if (budget.repeat === budgetRepeatEnum.monthly) return \"month\";\r\n    return undefined;\r\n}","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport { formatMoney } from \"../../../helpers\";\r\nimport { Typography, Card, CardContent, LinearProgress } from \"@material-ui/core\";\r\nimport { getExpensesOfBudgetLedger } from \"../../../modules/budget-module\";\r\n\r\nconst styles = {\r\n    card: {\r\n        minWidth: 275,\r\n        marginBottom: 10\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    progressGreen: {\r\n        backgroundColor: '#b2dfdb'\r\n    },\r\n    progressBarGreen: {\r\n        backgroundColor: '#00695c'\r\n    },\r\n    progressYellow: {\r\n        backgroundColor: '#eaec60'\r\n    },\r\n    progressBarYellow: {\r\n        backgroundColor: '#bfc11d'\r\n    },\r\n    progressRed: {\r\n        backgroundColor: '#ec8686'\r\n    },\r\n    progressBarRed: {\r\n        backgroundColor: '#de0b0b'\r\n    },\r\n    lineHeight: {\r\n        lineHeight: 1,\r\n        marginTop: 5,\r\n        display: 'inline-block'\r\n    },\r\n    floatRight: {\r\n        float: 'right',\r\n        textAlign: 'right'\r\n    },\r\n    textCenter: {\r\n        textAlign: 'center'\r\n    }\r\n}\r\n\r\n\r\nclass BudgetSummary extends Component {\r\n    state = {\r\n        spent: 0\r\n    };\r\n    componentDidMount () {\r\n        getExpensesOfBudgetLedger(this.props.budget.ledger[0], this.props.budget.accountIds, this.props.budget.categoryIds).then((expenses) => {\r\n            if (expenses.length > 0) {\r\n                let spent = 0;\r\n                for (var i =0; i<expenses.length; i++) {\r\n                    spent += expenses[i].amount;\r\n                }\r\n                this.setState({...this.state, spent});\r\n            }\r\n        });\r\n    }\r\n\r\n    progressBarClassName = (percent) => {\r\n        let result = {\r\n            colorPrimary: this.props.classes.progressGreen,\r\n            barColorPrimary: this.props.classes.progressBarGreen\r\n        }\r\n        if (percent > 50 && percent <= 75) {\r\n            result.colorPrimary = this.props.classes.progressYellow;\r\n            result.barColorPrimary = this.props.classes.progressBarYellow;\r\n        }\r\n        else if (percent > 75) {\r\n            result.colorPrimary = this.props.classes.progressRed;\r\n            result.barColorPrimary = this.props.classes.progressBarRed;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Card className={this.props.classes.card}>\r\n                <CardContent>\r\n                    <Typography className={this.props.classes.title} variant=\"title\" color=\"textPrimary\" gutterBottom>{this.props.budget.name}</Typography>\r\n                    <Typography variant=\"overline\" className={this.props.classes.textCenter}>Total: {formatMoney(this.props.budget.amount)}</Typography>\r\n                    <LinearProgress\r\n                        variant=\"determinate\" value={(this.state.spent / this.props.budget.amount) * 100}\r\n                        classes={this.progressBarClassName((this.state.spent / this.props.budget.amount) * 100)}\r\n                    />\r\n                    <div>\r\n                        <Typography variant=\"caption\" className={this.props.classes.lineHeight}>Spent<br />{formatMoney(this.state.spent)}</Typography>\r\n                        <Typography variant=\"caption\" className={`${this.props.classes.lineHeight} ${this.props.classes.floatRight}`}>Remaining<br />{formatMoney(this.props.budget.amount - this.state.spent)}</Typography>\r\n                    </div>\r\n                </CardContent>\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nBudgetSummary.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(BudgetSummary);","import React, { Component } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbarWithNavigation from \"../common/my-toolbar-with-navigation\";\r\nimport { Typography, Fab, Select, MenuItem, Divider } from \"@material-ui/core\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { selectAll } from \"../../helpers\";\r\nimport { budgetRepeatEnum } from \"../../helpers\";\r\nimport { getBudgetRepeatTypeForMoment } from \"../../modules/budget-module\";\r\nimport BudgetSummary from \"../dashboard/widgets/budget-summary\";\r\nimport moment from \"moment\";\r\n\r\n\r\nconst styles = {\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: 15,\r\n        right: 15\r\n    },\r\n    filter: {\r\n        color: '#fff',\r\n        borderColor: '#fff'\r\n    },\r\n    divider: {\r\n        marginBottom: 20\r\n    }\r\n}\r\n\r\nclass Budget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            nonRepeating: {\r\n                items: []\r\n            },\r\n            weekly: {\r\n                start: moment().startOf(\"week\"),\r\n                end: moment().endOf(\"week\"),\r\n                items: []\r\n            },\r\n            monthly: {\r\n                start: moment().startOf(\"month\"),\r\n                end: moment().endOf(\"month\"),\r\n                items: []\r\n            },\r\n            daily: {\r\n                start: moment().startOf(\"day\"),\r\n                end: moment().endOf(\"day\"),\r\n                items: []\r\n            },\r\n            display: 'all'\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        selectAll(\"budget\").then((items) => {\r\n            let daily = [];\r\n            let weekly = [];\r\n            let monthly = [];\r\n            let nonRepeating = [];\r\n            for (var i = 0; i < items.length; i++) {\r\n                let budget = items[i];\r\n                if (budget.repeat) {\r\n                    let ledger = this.validateBudget(budget);\r\n                    if (ledger != null) {\r\n                        budget.ledger = [ledger];\r\n                        if (budget.repeat === budgetRepeatEnum.daily) daily.push(budget);\r\n                        else if (budget.repeat === budgetRepeatEnum.weekly) weekly.push(budget);\r\n                        else if (budget.repeat === budgetRepeatEnum.monthly) monthly.push(budget);\r\n                    }\r\n                }\r\n                else {\r\n                    budget.ledger[0].endDate = budget.noEndDate ? new Date() : budget.ledger[0].endDate;\r\n                    nonRepeating.push(budget);\r\n                }\r\n            }\r\n            this.setState({\r\n                ...this.state,\r\n                daily: { ...this.state.daily, items: daily },\r\n                weekly: { ...this.state.weekly, items: weekly },\r\n                monthly: { ...this.state.monthly, items: monthly },\r\n                nonRepeating: { ...this.state.nonRepeating, items: nonRepeating }\r\n            });\r\n        });\r\n    }\r\n\r\n    validateBudget = (budget) => {\r\n        let type = getBudgetRepeatTypeForMoment(budget);\r\n        if (type) {\r\n            if (moment(budget.startDate).startOf(type).toDate() <= moment().startOf(type).toDate() &&\r\n                (budget.noEndDate || moment(budget.endDate).endOf(type).toDate() >= moment().endOf(type))) {\r\n                let ledger = budget.ledger.find(m => m.startDate.toString() === moment().startOf(type).toDate().toString() && m.endDate.toString() === moment().endOf(type).toDate().toString());\r\n                if (ledger === undefined || ledger === null) {\r\n                    ledger = { startDate: moment().startOf(type).toDate(), endDate: moment().endOf(type).toDate(), spent: 0, amount: budget.amount };\r\n                }\r\n                return ledger;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    progressBarClassName = (percent) => {\r\n        let result = {\r\n            colorPrimary: this.props.classes.progressGreen,\r\n            barColorPrimary: this.props.classes.progressBarGreen\r\n        }\r\n        if (percent > 50 && percent <= 75) {\r\n            result.colorPrimary = this.props.classes.progressYellow;\r\n            result.barColorPrimary = this.props.classes.progressBarYellow;\r\n        }\r\n        else if (percent > 75) {\r\n            result.colorPrimary = this.props.classes.progressRed;\r\n            result.barColorPrimary = this.props.classes.progressBarRed;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    changeDisplay = (event) => {\r\n        this.setState({ ...this.state, display: event.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbarWithNavigation title=\"Budget\" buttons={[\r\n                    <Select\r\n                        className={this.props.classes.filter}\r\n                        value=\"all\" onChange={this.changeDisplay.bind(this)}>\r\n                        <MenuItem value=\"all\">All</MenuItem>\r\n                        <MenuItem value=\"daily\">Daily</MenuItem>\r\n                        <MenuItem value=\"weekly\">Weekly</MenuItem>\r\n                        <MenuItem value=\"monthly\">Monthly</MenuItem>\r\n                    </Select>\r\n                ]} />\r\n\r\n                {this.state.display === 'all' ?\r\n                    this.state.nonRepeating.items.map((item, i) =>\r\n                        <div key={i} className=\"content\">\r\n                            <Link style={{ textDecoration: 'none' }} to={`/budget/edit/${item.budgetId}`}>\r\n                                <BudgetSummary budget={item} />\r\n                            </Link>\r\n                        </div>\r\n                    ) : null}\r\n\r\n                {this.state.display === 'all' || this.state.display === 'daily' ?\r\n                    <RenderItems items={this.state.daily.items} label=\"Daily\" classes={this.props.classes} />\r\n                    : null}\r\n\r\n                {this.state.display === 'all' || this.state.display === 'weekly' ?\r\n                    <RenderItems items={this.state.weekly.items} label=\"Weekly\" classes={this.props.classes} />\r\n                    : null}\r\n\r\n                {this.state.display === 'all' || this.state.display === 'monthly' ?\r\n                    <RenderItems items={this.state.monthly.items} label=\"Monthly\" classes={this.props.classes} />\r\n                    : null}\r\n\r\n                <Fab onClick={() => { this.props.history.push('budget/new') }} color=\"primary\" className={this.props.classes.fab}>\r\n                    <AddIcon />\r\n                </Fab>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst RenderItems = (props) => (\r\n    <>\r\n        {props.items.length > 0 ?\r\n            <>\r\n                <Divider className={props.classes.divider} />\r\n                <Typography variant=\"button\" align=\"center\">{props.label}</Typography>\r\n                {props.items.map((item, i) =>\r\n                    <div key={i} className=\"content\">\r\n                        <Link style={{ textDecoration: 'none' }} to={`/budget/edit/${item.budgetId}`}>\r\n                            <BudgetSummary budget={item} />\r\n                        </Link>\r\n                    </div>\r\n                )}\r\n            </>\r\n            : null}\r\n    </>\r\n)\r\n\r\nBudget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(Budget);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney, budgetRepeatEnum } from \"../../helpers\";\r\nimport { select, selectAll, update, remove } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport Delete from '@material-ui/icons/Delete';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { MenuItem, Input, Checkbox, ListItemText, Switch, FormControlLabel, DialogTitle, Dialog, Button, DialogContent, DialogContentText, DialogActions } from \"@material-ui/core\";\r\n\r\n\r\nconst styles = {\r\n    myClass: {\r\n        font: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    menuProps: {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: 48 * 4.5 + 8,\r\n                width: 250,\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nclass EditBudget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            budgetId: Number(this.props.match.params.id),\r\n            name: '',\r\n            selectedAccounts: [{ name: 'All', accountId: 0 }],\r\n            isActive: true,\r\n            repeat: budgetRepeatEnum.none,\r\n            startDate: '', //moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            endDate: '',//moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            amount: '0',\r\n            selectedCategories: [],\r\n            accounts: [],\r\n            categories: [],\r\n            noEndDate: false,\r\n            errors: {\r\n                name: false,\r\n                selectedAccounts: false,\r\n                repeat: false,\r\n                startDate: false,\r\n                endDate: false,\r\n                amount: false,\r\n                selectedCategories: false\r\n            },\r\n            showDelete: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        selectAll(\"account\").then((accounts) => {\r\n            accounts.unshift({ accountId: 0, name: 'All' });\r\n            this.setState({ ...this.state, accounts });\r\n            selectAll(\"category\").then((categories) => {\r\n                categories.unshift({ categoryId: 0, name: 'All' });\r\n                this.setState({ ...this.state, categories });\r\n                select(\"budget\", this.state.budgetId).then((budget) => {\r\n                    this.setState({\r\n                        ...this.state,\r\n                        name: budget.name,\r\n                        selectedAccounts: budget.accountIds.map(a => accounts.find(m => { return m.accountId === a })),\r\n                        isActive: budget.isActive,\r\n                        repeat: budget.repeat,\r\n                        startDate: moment(budget.startDate).format('YYYY-MM-DD'),\r\n                        endDate: budget.endDate === null ? '' : moment(budget.endDate).format('YYYY-MM-DD'),\r\n                        amount: formatMoney(budget.amount),\r\n                        selectedCategories: budget.categoryIds.map(a => categories.find(m => { return m.categoryId === a })),\r\n                        noEndDate: budget.noEndDate,\r\n                        ledger: budget.ledger\r\n                    });\r\n                });\r\n            });\r\n        });\r\n    }\r\n\r\n    handleSave = () => {\r\n        var data = {\r\n            budgetId: this.state.budgetId,\r\n            name: this.state.name,\r\n            accountIds: this.state.selectedAccounts.map(m => m.accountId),\r\n            categoryIds: this.state.selectedCategories.map(m => m.categoryId),\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            repeat: this.state.repeat,\r\n            startDate: new Date(this.state.startDate),\r\n            noEndDate: this.state.noEndDate,\r\n            endDate: this.state.endDate,\r\n            isActive: true,\r\n            ledger: this.state.ledger\r\n        };\r\n        let hasError = false;\r\n        let errors = {\r\n            name: false,\r\n            selectedAccounts: false,\r\n            repeat: false,\r\n            startDate: false,\r\n            endDate: false,\r\n            amount: false,\r\n            selectedCategories: false\r\n        }\r\n        if (data.name === '') {\r\n            hasError = true;\r\n            errors.name = true;\r\n        }\r\n        if (data.accountIds === null || data.accountIds === undefined || data.accountIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedAccounts = true;\r\n        }\r\n        if (data.categoryIds === null || data.categoryIds === undefined || data.categoryIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedCategories = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.startDate || this.state.startDate === '') {\r\n            hasError = true;\r\n            errors.startDate = true;\r\n        }\r\n        if (!data.noEndDate && (!this.state.endDate || this.state.endDate === '')) {\r\n            hasError = true;\r\n            errors.endDate = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            data.endDate = (data.noEndDate) ? null : new Date(data.endDate);\r\n\r\n            if (!data.repeat) {\r\n                data.ledger.push({\r\n                    startDate: moment(data.startDate).startOf(\"day\").toDate(),\r\n                    endDate: moment(data.endDate).endOf(\"day\").toDate(),\r\n                    spent: 0,\r\n                    amount: data.amount\r\n                });\r\n            }\r\n\r\n            update(\"budget\", data, (success) => {\r\n                if (success) {\r\n                    this.props.history.push(\"/budget\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === \"selectedAccounts\") {\r\n            let all = value.find(m => m.accountId === 0);\r\n            if (all !== null && all !== undefined) {\r\n                value = this.state.accounts;\r\n            }\r\n        }\r\n        else if (property === \"selectedCategories\") {\r\n            let all = value.find(m => m.categoryId === 0);\r\n            if (all !== null && all !== undefined) {\r\n                value = this.state.categories;\r\n            }\r\n        }\r\n        else if (property === \"noEndDate\") {\r\n            value = value === \"true\";\r\n            if (value) {\r\n                this.setState({ ...this.state, endDate: '' });\r\n            }\r\n        }\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    handleDelete = () => {\r\n        remove(\"budget\", this.state.budgetId).then(() => {\r\n            this.props.history.push(\"/budget\");\r\n        });\r\n    }\r\n\r\n    toggleDeleteModal = () => {\r\n        this.setState({ ...this.state, showDelete: !this.state.showDelete });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add budget\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.toggleDeleteModal.bind(this)} color=\"inherit\"><Delete /></IconButton>),\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Save /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <TextField\r\n                        error={this.state.errors.name}\r\n                        label=\"Name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChangeProperty.bind(this, 'name')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Accounts</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedAccounts}\r\n                            multiple\r\n                            value={this.state.selectedAccounts}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedAccounts')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.accounts.map((account, index) => (\r\n                                <MenuItem key={index} value={account}>\r\n                                    <Checkbox checked={this.state.selectedAccounts.map(f => { return f.accountId }).indexOf(account.accountId) > -1} />\r\n                                    <ListItemText primary={account.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedCategories}\r\n                            multiple\r\n                            value={this.state.selectedCategories}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedCategories')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.categories.map((category, index) => (\r\n                                <MenuItem key={index} value={category}>\r\n                                    <Checkbox checked={this.state.selectedCategories.map(f => { return f.categoryId }).indexOf(category.categoryId) > -1} />\r\n                                    <ListItemText primary={category.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Repeat</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.repeat}\r\n                            value={this.state.repeat}\r\n                            onChange={this.handleChangeProperty.bind(this, 'repeat')}>\r\n                            <MenuItem value={budgetRepeatEnum.none}>None</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.daily}>Daily</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.weekly}>Weekly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.monthly}>Monthly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.custom}>Custom</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.startDate}\r\n                        label=\"Start date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.startDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'startDate')}\r\n                    />\r\n\r\n                    <TextField\r\n                        error={this.state.errors.endDate}\r\n                        label=\"End date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        disabled={this.state.noEndDate}\r\n                        value={this.state.endDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'endDate')}\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={this.state.noEndDate}\r\n                                onChange={this.handleChangeProperty.bind(this, 'noEndDate')}\r\n                                value={!this.state.noEndDate}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"no end date\"\r\n                    />\r\n                </div>\r\n\r\n                <Dialog\r\n                    onClose={this.toggleDeleteModal}\r\n                    open={this.state.showDelete}>\r\n                    <DialogTitle>Confirm</DialogTitle>\r\n                    <DialogContent>\r\n                        <DialogContentText>Are you sure you want to delete?</DialogContentText>\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button onClick={this.toggleDeleteModal} color=\"primary\" autoFocus>Cancel</Button>\r\n                        <Button onClick={this.handleDelete} color=\"secondary\">Delete</Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nEditBudget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(EditBudget);","import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from 'prop-types';\r\nimport MyToolbar from \"../common/my-toolbar\";\r\nimport moment from \"moment\";\r\nimport { formatMoney, budgetRepeatEnum } from \"../../helpers\";\r\nimport { selectAll, insert } from \"../../helpers\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Save from '@material-ui/icons/Save';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { MenuItem, Input, Checkbox, ListItemText, Switch, FormControlLabel } from \"@material-ui/core\";\r\n\r\n\r\nconst styles = {\r\n    myClass: {\r\n        font: 20,\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    },\r\n    menuProps: {\r\n        PaperProps: {\r\n            style: {\r\n                maxHeight: 48 * 4.5 + 8,\r\n                width: 250,\r\n            },\r\n        },\r\n    }\r\n}\r\n\r\nclass NewBudget extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: '',\r\n            selectedAccounts: [{ name: 'All', accountId: 0 }],\r\n            isActive: true,\r\n            repeat: budgetRepeatEnum.none,\r\n            startDate: '', //moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            endDate: '',//moment().format('YYYY-MM-DD[T]HH:mm'),\r\n            amount: '0',\r\n            selectedCategories: [],\r\n            accounts: [],\r\n            categories: [],\r\n            noEndDate: false,\r\n            errors: {\r\n                name: false,\r\n                selectedAccounts: false,\r\n                repeat: false,\r\n                startDate: false,\r\n                endDate: false,\r\n                amount: false,\r\n                selectedCategories: false\r\n            }\r\n        }\r\n    }\r\n\r\n    handleSave = () => {\r\n        var data = {\r\n            name: this.state.name,\r\n            accountIds: this.state.selectedAccounts.map(m => m.accountId),\r\n            categoryIds: this.state.selectedCategories.map(m => m.categoryId),\r\n            amount: parseFloat(this.state.amount.replace(/,/g, '')),\r\n            repeat: this.state.repeat,\r\n            startDate: new Date(this.state.startDate),\r\n            noEndDate: this.state.noEndDate,\r\n            endDate: this.state.endDate,\r\n            isActive: true,\r\n            ledger: []\r\n        };\r\n        let hasError = false;\r\n        let errors = {\r\n            name: false,\r\n            selectedAccounts: false,\r\n            repeat: false,\r\n            startDate: false,\r\n            endDate: false,\r\n            amount: false,\r\n            selectedCategories: false\r\n        }\r\n        if (data.name === '') {\r\n            hasError = true;\r\n            errors.name = true;\r\n        }\r\n        if (data.accountIds === null || data.accountIds === undefined || data.accountIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedAccounts = true;\r\n        }\r\n        if (data.categoryIds === null || data.categoryIds === undefined || data.categoryIds.length === 0) {\r\n            hasError = true;\r\n            errors.selectedCategories = true;\r\n        }\r\n        if (data.amount === 0 || isNaN(data.amount)) {\r\n            errors.amount = true;\r\n            hasError = true;\r\n        }\r\n        if (!this.state.startDate || this.state.startDate === '') {\r\n            hasError = true;\r\n            errors.startDate = true;\r\n        }\r\n        if (!data.noEndDate && (!this.state.endDate || this.state.endDate === '')) {\r\n            hasError = true;\r\n            errors.endDate = true;\r\n        }\r\n\r\n        if (hasError) {\r\n            this.setState({ ...this.state, errors });\r\n        }\r\n        else {\r\n            data.endDate = (data.noEndDate) ? null : new Date(data.endDate);\r\n\r\n            if (!data.repeat) {\r\n                data.ledger.push({\r\n                    startDate: moment(data.startDate).startOf(\"day\").toDate(),\r\n                    endDate: moment(data.endDate).endOf(\"day\").toDate(),\r\n                    spent: 0,\r\n                    amount: data.amount\r\n                });\r\n            }\r\n            \r\n            insert(\"budget\", data, (success) => {\r\n                if (success) {\r\n                    this.props.history.push(\"/budget\");\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        selectAll(\"account\").then((accounts) => {\r\n            accounts.unshift({ accountId: 0, name: 'All' });\r\n            this.setState({ ...this.state, accounts })\r\n        });\r\n        selectAll(\"category\").then((categories) => {\r\n            categories.unshift({ categoryId: 0, name: 'All' });\r\n            this.setState({ ...this.state, categories });\r\n        });\r\n    }\r\n    handleChangeProperty(property, e) {\r\n        let value = e.target.value;\r\n        if (property === \"selectedAccounts\") {\r\n            let all = value.find(m => m.accountId === 0);\r\n            if (all !== null && all !== undefined) {\r\n                value = this.state.accounts;\r\n            }\r\n        }\r\n        else if (property === \"selectedCategories\") {\r\n            let all = value.find(m => m.categoryId === 0);\r\n            if (all !== null && all !== undefined) {\r\n                value = this.state.categories;\r\n            }\r\n        }\r\n        else if (property === \"noEndDate\") {\r\n            value = value === \"true\";\r\n            if (value) {\r\n                this.setState({ ...this.state, endDate: '' });\r\n            }\r\n        }\r\n        this.setState({ ...this.state, [property]: value });\r\n    }\r\n\r\n    formatCurrency(e) {\r\n        let value = formatMoney(this.state.amount);\r\n        this.setState({ ...this.state, \"amount\": value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <MyToolbar\r\n                    onBack={() => { this.props.history.goBack() }}\r\n                    showBackButton={true}\r\n                    title=\"Add budget\"\r\n                    buttons={[\r\n                        (<IconButton onClick={this.handleSave.bind(this)} color=\"inherit\"><Save /></IconButton>)\r\n                    ]}\r\n                />\r\n                <div className=\"content\">\r\n                    <TextField\r\n                        error={this.state.errors.name}\r\n                        label=\"Name\"\r\n                        value={this.state.name}\r\n                        onChange={this.handleChangeProperty.bind(this, 'name')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Accounts</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedAccounts}\r\n                            multiple\r\n                            value={this.state.selectedAccounts}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedAccounts')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.accounts.map((account, index) => (\r\n                                <MenuItem key={index} value={account}>\r\n                                    <Checkbox checked={this.state.selectedAccounts.map(f => { return f.accountId }).indexOf(account.accountId) > -1} />\r\n                                    <ListItemText primary={account.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.amount}\r\n                        label=\"Amount\"\r\n                        value={this.state.amount}\r\n                        onChange={this.handleChangeProperty.bind(this, 'amount')}\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        onBlur={this.formatCurrency.bind(this)}\r\n                    />\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Category</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.selectedCategories}\r\n                            multiple\r\n                            value={this.state.selectedCategories}\r\n                            onChange={this.handleChangeProperty.bind(this, 'selectedCategories')}\r\n                            input={<Input id=\"select-multiple-checkbox\" />}\r\n                            renderValue={(selected) => selected.map(i => { return i.name }).join(\",\")}\r\n                            MenuProps={styles.menuProps}>\r\n                            {this.state.categories.map((category, index) => (\r\n                                <MenuItem key={index} value={category}>\r\n                                    <Checkbox checked={this.state.selectedCategories.map(f => { return f.categoryId }).indexOf(category.categoryId) > -1} />\r\n                                    <ListItemText primary={category.name} />\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                    <FormControl className=\"form-control\" margin=\"normal\">\r\n                        <InputLabel>Repeat</InputLabel>\r\n                        <Select\r\n                            error={this.state.errors.repeat}\r\n                            value={this.state.repeat}\r\n                            onChange={this.handleChangeProperty.bind(this, 'repeat')}>\r\n                            <MenuItem value={budgetRepeatEnum.none}>None</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.daily}>Daily</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.weekly}>Weekly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.monthly}>Monthly</MenuItem>\r\n                            <MenuItem value={budgetRepeatEnum.custom}>Custom</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                    <TextField\r\n                        error={this.state.errors.startDate}\r\n                        label=\"Start date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        value={this.state.startDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'startDate')}\r\n                    />\r\n\r\n                    <TextField\r\n                        error={this.state.errors.endDate}\r\n                        label=\"End date\"\r\n                        type=\"date\"\r\n                        margin=\"normal\"\r\n                        className=\"form-control\"\r\n                        disabled={this.state.noEndDate}\r\n                        value={this.state.endDate}\r\n                        onChange={this.handleChangeProperty.bind(this, 'endDate')}\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Switch\r\n                                checked={this.state.noEndDate}\r\n                                onChange={this.handleChangeProperty.bind(this, 'noEndDate')}\r\n                                value={!this.state.noEndDate}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"no end date\"\r\n                    />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nNewBudget.propTypes = {\r\n    classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(NewBudget);","import React, { Component } from 'react';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Dashboard from '../dashboard/dashboard';\r\nimport Expense from '../expense/expense';\r\nimport Income from '../income/income';\r\nimport NewExpense from '../expense/new-expense';\r\nimport EditExpense from '../expense/edit-expense';\r\nimport Budget from '../budget/budget';\r\nimport EditBudget from '../budget/edit-budget';\r\nimport NewBudget from '../budget/new-budget';\r\n\r\nclass Main extends Component {\r\n    render() {\r\n      return (\r\n        <main>\r\n            <Switch>\r\n                <Route path='/income' component={Income}/>\r\n                <Route path='/expense/edit/:id' component={EditExpense} />\r\n                <Route path='/expense/new' component={NewExpense} />\r\n                <Route path='/expense' component={Expense}/>\r\n                <Route path='/budget/edit/:id' component={EditBudget}/>\r\n                <Route path='/budget/new' component={NewBudget}/>\r\n                <Route path='/budget' component={Budget}/>\r\n                <Route path='/' component={Dashboard}/>\r\n            </Switch>\r\n        </main>\r\n      );\r\n    }\r\n}\r\n  \r\n\r\nexport default Main\r\n","import React, { Component } from 'react';\r\nimport Main from './components/common/main';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper animate slideInRight\">\r\n        <Main />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Router } from 'react-router-dom';\r\nimport { initialize } from './database';\r\nimport { createBrowserHistory, createHashHistory } from 'history';\r\nimport './App.css';\r\nimport 'typeface-roboto';\r\n\r\nconst configureHistory = () => {\r\n  return window.matchMedia('(display-mode: standalone)').matches\r\n    ? createHashHistory()\r\n    : createBrowserHistory()\r\n}\r\nconst history = configureHistory();\r\ninitialize(); //initialize database\r\nReactDOM.render((\r\n    <Router history={history} basename={process.env.PUBLIC_URL}>\r\n        <App />\r\n    </Router>\r\n), document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","\r\nexport const initialize = () => {\r\n    var request = window.indexedDB.open(\"Moneytoring\", 5);\r\n    \r\n    request.onupgradeneeded = function(event) {\r\n        var db = event.target.result;\r\n    \r\n        db.onerror = function(event) {\r\n            \r\n        };\r\n\r\n        if (!db.objectStoreNames.contains('expense')) {\r\n            var expenseTable = db.createObjectStore(\"expense\", { keyPath: \"expenseId\", autoIncrement: true });\r\n            expenseTable.createIndex(\"expenseId\", \"expenseId\", { unique: true });\r\n            expenseTable.createIndex(\"title\", \"title\", { unique: false });\r\n            expenseTable.createIndex(\"categoryId\", \"categoryId\", { unique: false });\r\n            expenseTable.createIndex(\"amount\", \"amount\", { unique: false });\r\n            expenseTable.createIndex(\"accountId\", \"accountId\", { unique: false });\r\n            expenseTable.createIndex(\"description\", \"description\", { unique: false });\r\n            expenseTable.createIndex(\"date\", \"date\", { unique: false });\r\n        }\r\n        \r\n        if (!db.objectStoreNames.contains('account')) {\r\n            var accountTable = db.createObjectStore(\"account\", { keyPath: \"accountId\", autoIncrement: true });\r\n            accountTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n\r\n        if (!db.objectStoreNames.contains('category')) {\r\n            var categoryTable = db.createObjectStore(\"category\", { keyPath: \"categoryId\", autoIncrement: true });\r\n            categoryTable.createIndex(\"name\", \"name\", { unique: false });\r\n        }\r\n\r\n        if (!db.objectStoreNames.contains('budget')) {\r\n            var budgetTable = db.createObjectStore(\"budget\", {keyPath: \"budgetId\", autoIncrement: true});\r\n            budgetTable.createIndex(\"name\", \"name\", { unique: false});\r\n            budgetTable.createIndex(\"repeat\", \"repeat\", { unique: false});\r\n            budgetTable.createIndex(\"startDate\", \"startDate\", { unique: false});\r\n            budgetTable.createIndex(\"endDate\", \"endDate\", { unique: false});\r\n            budgetTable.createIndex(\"amount\", \"amount\", { unique: false});\r\n            budgetTable.createIndex(\"accountIds\", \"accountIds\", { unique: false});\r\n            budgetTable.createIndex(\"isActive\", \"isActive\", { unique: false});\r\n            budgetTable.createIndex(\"categoryIds\", \"categoryIds\", { unique: false});\r\n            budgetTable.createIndex(\"ledger\", \"ledger\", { unique: false});\r\n            budgetTable.createIndex(\"noEndDate\", \"noEndDate\", { unique: false});\r\n        }\r\n    }\r\n\r\n    request.onsuccess = function (event) {\r\n        var db = event.target.result;\r\n\r\n        //---------------------------------------\r\n        //create default account (personal)\r\n        //---------------------------------------\r\n        var transaction = db.transaction([\"account\"], \"readonly\");\r\n        var accountStore = transaction.objectStore(\"account\");\r\n        var selectAccounts = accountStore.getAll();\r\n        transaction.oncomplete = function (event) {            \r\n            if (selectAccounts.result.length === 0) {\r\n                var addAccountTransaction = db.transaction([\"account\"], \"readwrite\");\r\n                var accountStore1 = addAccountTransaction.objectStore(\"account\");\r\n                accountStore1.put({name: \"personal\"});\r\n            }\r\n        }\r\n        //----------------------------------------------------------------\r\n        //create default categories (food, transportation, clothing)\r\n        //----------------------------------------------------------------\r\n        var categoryTransaction = db.transaction([\"category\"], \"readonly\");\r\n        var categoryStore = categoryTransaction.objectStore(\"category\");\r\n        var selectCategories = categoryStore.getAll();\r\n        categoryTransaction.oncomplete = function (event) {\r\n            if (selectCategories.result.length === 0) {\r\n                var addCategoriesTransaction = db.transaction([\"category\"], \"readwrite\");\r\n                var addCategoryStore = addCategoriesTransaction.objectStore(\"category\");\r\n                addCategoryStore.put({name: \"food\"});\r\n                addCategoryStore.put({name: \"transportation\"});\r\n                addCategoryStore.put({name: \"clothing\"});\r\n            }\r\n        }\r\n    }\r\n}"],"sourceRoot":""}